<!-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw --><roblox version="4"><Item class="Workspace" referent="0"><Properties><float name="AirDensity">0.0012000000569969416</float><bool name="AllowThirdPartySales">false</bool><token name="AvatarUnificationMode">0</token><token name="ClientAnimatorThrottling">0</token><BinaryString name="CollisionGroupData">AQgABPX///8HRGVmYXVsdAEEuP///wVQaWdneQIEuf///wREb29yAwTu////GVBsdWdpbl9VbnNlbGVjdGFibGVfR3JvdXAEBPf///8QU3R1ZGlvU2VsZWN0YWJsZQUEH////wdQbGF5ZXJzBgQZ////Bkdob3N0cwcEn////wVDcmF3bA==</BinaryString><Ref name="CurrentCamera">1</Ref><double name="DistributedGameTime">22.183334548026323</double><bool name="ExplicitAutoJoints">true</bool><bool name="FallHeightEnabled">true</bool><float name="FallenPartsDestroyHeight">-500</float><token name="FluidForces">0</token><Vector3 name="GlobalWind"><X>0</X><Y>0</Y><Z>0</Z></Vector3><float name="Gravity">196.1999969482422</float><token name="IKControlConstraintSupport">0</token><token name="MeshPartHeadsAndAccessories">0</token><token name="ModelStreamingBehavior">0</token><token name="MoverConstraintRootBehavior">0</token><token name="PathfindingUseImprovedSearch">0</token><token name="PhysicsImprovedSleep">0</token><token name="PhysicsSteppingMethod">0</token><token name="PlayerCharacterDestroyBehavior">0</token><token name="PrimalPhysicsSolver">0</token><token name="RejectCharacterDeletions">0</token><token name="RenderingCacheOptimizations">0</token><token name="ReplicateInstanceDestroySetting">0</token><token name="Retargeting">0</token><token name="SandboxedInstanceMode">0</token><token name="SignalBehavior2">0</token><token name="StreamOutBehavior">0</token><bool name="StreamingEnabled">false</bool><token name="StreamingIntegrityMode">0</token><int name="StreamingMinRadius">64</int><int name="StreamingTargetRadius">1024</int><bool name="TerrainWeldsFixed">true</bool><token name="TouchEventsUseCollisionGroups">0</token><bool name="TouchesUseCollisionGroups">false</bool><token name="LevelOfDetail">0</token><CoordinateFrame name="ModelMeshCFrame"><X>0</X><Y>0</Y><Z>0</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="ModelMeshSize"><X>0</X><Y>0</Y><Z>0</Z></Vector3><token name="ModelStreamingMode">0</token><bool name="NeedsPivotMigration">false</bool><float name="ScaleFactor">1</float><OptionalCoordinateFrame name="WorldPivotData"><CFrame><X>0</X><Y>0</Y><Z>0</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CFrame></OptionalCoordinateFrame><BinaryString name="AttributesSerialize"></BinaryString><SecurityCapabilities name="Capabilities">0</SecurityCapabilities><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Workspace]]></string><int64 name="SourceAssetId">-1</int64><BinaryString name="Tags"></BinaryString></Properties><Item class="Camera" referent="1"><Properties><CoordinateFrame name="CFrame"><X>0</X><Y>7.808690547943115</Y><Z>4.760858535766602</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>0.780868649482727</R11><R12>0.6246952414512634</R12><R20>0</R20><R21>-0.6246952414512634</R21><R22>0.780868649482727</R22></CoordinateFrame><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Sound" referent="2"><Properties><Content name="SoundId"><url><![CDATA[rbxassetid://9114228928]]></url></Content><float name="Volume">0.10000000149011612</float><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Wind]]></string><int64 name="SourceAssetId">4794769432</int64><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Folder" referent="3"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[PiggyNPC]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Folder" referent="4"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ItemFolder]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Folder" referent="5"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[GameFolder]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="Folder" referent="6"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ItemBoxSpawns]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="Part" referent="7"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>-20.299997329711914</X><Y>13.890037536621094</Y><Z>34.54999923706055</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4294901951</Color3uint8><PhysicalProperties name="CustomPhysicalProperties"><CustomPhysics>true</CustomPhysics><Density>0</Density><Friction>0</Friction><Elasticity>0</Elasticity><FrictionWeight>0</FrictionWeight><ElasticityWeight>0</ElasticityWeight></PhysicalProperties><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><float name="Transparency">1</float><Vector3 name="size"><X>0.20000000298023224</X><Y>0.20000000298023224</Y><Z>0.20000000298023224</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ItemBoxSpawn]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Part" referent="8"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>-80.1500015258789</X><Y>13.890037536621094</Y><Z>-46.65000534057617</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4294901951</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><float name="Transparency">1</float><Vector3 name="size"><X>0.20000000298023224</X><Y>0.20000000298023224</Y><Z>0.20000000298023224</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ItemBoxSpawn]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Part" referent="9"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>74</X><Y>13.890037536621094</Y><Z>-30.900009155273438</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4294901951</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><float name="Transparency">1</float><Vector3 name="size"><X>0.20000000298023224</X><Y>0.20000000298023224</Y><Z>0.20000000298023224</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ItemBoxSpawn]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Part" referent="10"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>3.1999969482421875</X><Y>13.890037536621094</Y><Z>13.699993133544922</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4294901951</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><float name="Transparency">1</float><Vector3 name="size"><X>0.20000000298023224</X><Y>0.20000000298023224</Y><Z>0.20000000298023224</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ItemBoxSpawn]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Part" referent="11"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>4.099997043609619</X><Y>13.890037536621094</Y><Z>-41.600006103515625</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4294901951</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><float name="Transparency">1</float><Vector3 name="size"><X>0.20000000298023224</X><Y>0.20000000298023224</Y><Z>0.20000000298023224</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ItemBoxSpawn]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Part" referent="12"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>-36.45000457763672</X><Y>13.890037536621094</Y><Z>-38.30000686645508</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4294901951</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><float name="Transparency">1</float><Vector3 name="size"><X>0.20000000298023224</X><Y>0.20000000298023224</Y><Z>0.20000000298023224</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ItemBoxSpawn]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Part" referent="13"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>25.250003814697266</X><Y>13.890037536621094</Y><Z>34.999996185302734</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4294901951</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><float name="Transparency">1</float><Vector3 name="size"><X>0.20000000298023224</X><Y>0.20000000298023224</Y><Z>0.20000000298023224</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ItemBoxSpawn]]></string><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="Folder" referent="14"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[SpaceCameras]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="Part" referent="15"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>-25.97500228881836</X><Y>13.315037727355957</Y><Z>37.67500305175781</Z><R00>0</R00><R01>0</R01><R02>-1</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>1</R20><R21>0</R21><R22>0</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4294901951</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><float name="Transparency">1</float><Vector3 name="size"><X>0.20000000298023224</X><Y>0.20000000298023224</Y><Z>0.20000000298023224</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[RocketCamera1]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Part" referent="16"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>-60.525001525878906</X><Y>36.015037536621094</Y><Z>13.20000171661377</Z><R00>0</R00><R01>0</R01><R02>-1</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>1</R20><R21>0</R21><R22>0</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4294901951</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><float name="Transparency">1</float><Vector3 name="size"><X>0.20000000298023224</X><Y>0.20000000298023224</Y><Z>0.20000000298023224</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[RocketFocus1]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Part" referent="17"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>-25.97500228881836</X><Y>22.365036010742188</Y><Z>37.67500305175781</Z><R00>0</R00><R01>0</R01><R02>-1</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>1</R20><R21>0</R21><R22>0</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4294901951</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><float name="Transparency">1</float><Vector3 name="size"><X>0.20000000298023224</X><Y>0.20000000298023224</Y><Z>0.20000000298023224</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[RocketCamera2]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Part" referent="18"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>-60.525001525878906</X><Y>92.09004211425781</Y><Z>13.20000171661377</Z><R00>0</R00><R01>0</R01><R02>-1</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>1</R20><R21>0</R21><R22>0</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4294901951</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><float name="Transparency">1</float><Vector3 name="size"><X>0.20000000298023224</X><Y>0.20000000298023224</Y><Z>0.20000000298023224</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[RocketFocus2]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Part" referent="19"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>50.97500228881836</X><Y>-29.034957885742188</Y><Z>-510.9000244140625</Z><R00>0</R00><R01>0</R01><R02>-1</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>1</R20><R21>0</R21><R22>0</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4294901951</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><float name="Transparency">1</float><Vector3 name="size"><X>0.20000000298023224</X><Y>0.20000000298023224</Y><Z>0.20000000298023224</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[EscapePodCamera1]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Part" referent="20"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>24.000001907348633</X><Y>-29.459957122802734</Y><Z>-486.8250427246094</Z><R00>0</R00><R01>0</R01><R02>-1</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>1</R20><R21>0</R21><R22>0</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4294901951</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><float name="Transparency">1</float><Vector3 name="size"><X>0.20000000298023224</X><Y>0.20000000298023224</Y><Z>0.20000000298023224</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[EscapePodFocus1]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Part" referent="21"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>65.375</X><Y>-29.459957122802734</Y><Z>-486.8250427246094</Z><R00>0</R00><R01>0</R01><R02>-1</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>1</R20><R21>0</R21><R22>0</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4294901951</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><float name="Transparency">1</float><Vector3 name="size"><X>0.20000000298023224</X><Y>0.20000000298023224</Y><Z>0.20000000298023224</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[EscapePodFocus2]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Part" referent="22"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>63.67499923706055</X><Y>-29.459957122802734</Y><Z>-486.8250427246094</Z><R00>0</R00><R01>0</R01><R02>-1</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>1</R20><R21>0</R21><R22>0</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4294901951</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><float name="Transparency">1</float><Vector3 name="size"><X>0.20000000298023224</X><Y>0.20000000298023224</Y><Z>0.20000000298023224</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[EscapePodCamera2]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Part" referent="23"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>11.5</X><Y>-29.884958267211914</Y><Z>-486.85003662109375</Z><R00>0</R00><R01>0</R01><R02>-1</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>1</R20><R21>0</R21><R22>0</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4294901951</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><float name="Transparency">1</float><Vector3 name="size"><X>0.20000000298023224</X><Y>0.20000000298023224</Y><Z>0.20000000298023224</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[PlayerPosition2]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Part" referent="24"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>9.824999809265137</X><Y>-29.884958267211914</Y><Z>-486.85003662109375</Z><R00>0</R00><R01>0</R01><R02>-1</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>1</R20><R21>0</R21><R22>0</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4294901951</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><float name="Transparency">1</float><Vector3 name="size"><X>0.20000000298023224</X><Y>0.20000000298023224</Y><Z>0.20000000298023224</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[PlayerFace2]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Part" referent="25"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>-60.17499923706055</X><Y>13.315037727355957</Y><Z>41.32500457763672</Z><R00>0</R00><R01>0</R01><R02>-1</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>1</R20><R21>0</R21><R22>0</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4294901951</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><float name="Transparency">1</float><Vector3 name="size"><X>0.20000000298023224</X><Y>0.20000000298023224</Y><Z>0.20000000298023224</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[PlayerPosition1]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Part" referent="26"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>-63.77499771118164</X><Y>13.315037727355957</Y><Z>33.475006103515625</Z><R00>0</R00><R01>0</R01><R02>-1</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>1</R20><R21>0</R21><R22>0</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4294901951</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><float name="Transparency">1</float><Vector3 name="size"><X>0.20000000298023224</X><Y>0.20000000298023224</Y><Z>0.20000000298023224</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[PlayerFace1]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Part" referent="27"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>-64.92499542236328</X><Y>13.940037727355957</Y><Z>36.475006103515625</Z><R00>0</R00><R01>0</R01><R02>-1</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>1</R20><R21>0</R21><R22>0</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4294901951</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><float name="Transparency">1</float><Vector3 name="size"><X>0.20000000298023224</X><Y>0.20000000298023224</Y><Z>0.20000000298023224</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Cam1]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Part" referent="28"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>-60.17499923706055</X><Y>13.315037727355957</Y><Z>41.32500457763672</Z><R00>0</R00><R01>0</R01><R02>-1</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>1</R20><R21>0</R21><R22>0</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4294901951</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><float name="Transparency">1</float><Vector3 name="size"><X>0.20000000298023224</X><Y>0.20000000298023224</Y><Z>0.20000000298023224</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Focus1]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Part" referent="29"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>-48.22499465942383</X><Y>13.315037727355957</Y><Z>41.57500457763672</Z><R00>0</R00><R01>0</R01><R02>-1</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>1</R20><R21>0</R21><R22>0</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4294901951</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><float name="Transparency">1</float><Vector3 name="size"><X>0.20000000298023224</X><Y>0.20000000298023224</Y><Z>0.20000000298023224</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Cam2]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Part" referent="30"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>-67.24999237060547</X><Y>38.7900390625</Y><Z>8.350006103515625</Z><R00>0</R00><R01>0</R01><R02>-1</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>1</R20><R21>0</R21><R22>0</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4294901951</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><float name="Transparency">1</float><Vector3 name="size"><X>0.20000000298023224</X><Y>0.20000000298023224</Y><Z>0.20000000298023224</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Focus2]]></string><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="Folder" referent="31"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[SpaceItemBoxes]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Folder" referent="32"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[MenuCameras]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="Part" referent="33"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>-90.4749984741211</X><Y>44.59003448486328</Y><Z>-29.724998474121094</Z><R00>0</R00><R01>0</R01><R02>-1</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>1</R20><R21>0</R21><R22>0</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4294901951</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><float name="Transparency">1</float><Vector3 name="size"><X>0.20000000298023224</X><Y>0.20000000298023224</Y><Z>0.20000000298023224</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[MainCam]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Part" referent="34"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>-62.849998474121094</X><Y>36.39003372192383</Y><Z>-8.174997329711914</Z><R00>0</R00><R01>0</R01><R02>-1</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>1</R20><R21>0</R21><R22>0</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4294901951</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><float name="Transparency">1</float><Vector3 name="size"><X>0.20000000298023224</X><Y>0.20000000298023224</Y><Z>0.20000000298023224</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[MainFocus]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Part" referent="35"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>-40.849998474121094</X><Y>22.815034866333008</Y><Z>-10.34999942779541</Z><R00>0</R00><R01>0</R01><R02>-1</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>1</R20><R21>0</R21><R22>0</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4294901951</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><float name="Transparency">1</float><Vector3 name="size"><X>0.20000000298023224</X><Y>0.20000000298023224</Y><Z>0.20000000298023224</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[MainCam2]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Part" referent="36"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>-66.9000015258789</X><Y>36.040035247802734</Y><Z>8.550002098083496</Z><R00>0</R00><R01>0</R01><R02>-1</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>1</R20><R21>0</R21><R22>0</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4294901951</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><float name="Transparency">1</float><Vector3 name="size"><X>0.20000000298023224</X><Y>0.20000000298023224</Y><Z>0.20000000298023224</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[MainFocus2]]></string><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="StringValue" referent="37"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[MainInfo]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="StringValue" referent="38"><Properties><string name="Value"><![CDATA[Intermission]]></string><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Phase]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="IntValue" referent="39"><Properties><int64 name="Value">12</int64><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Timer]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Folder" referent="40"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[SpaceItemBoxSpawns]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="Part" referent="41"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>-12.300003051757812</X><Y>-31.034961700439453</Y><Z>-542.9000244140625</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4294901951</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><float name="Transparency">1</float><Vector3 name="size"><X>0.20000000298023224</X><Y>0.20000000298023224</Y><Z>0.20000000298023224</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ItemBoxSpawn]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Part" referent="42"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>16.999998092651367</X><Y>-31.034961700439453</Y><Z>-510.2750244140625</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4294901951</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><float name="Transparency">1</float><Vector3 name="size"><X>0.20000000298023224</X><Y>0.20000000298023224</Y><Z>0.20000000298023224</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ItemBoxSpawn]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Part" referent="43"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>41.424991607666016</X><Y>-31.034961700439453</Y><Z>-553.7000122070312</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4294901951</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><float name="Transparency">1</float><Vector3 name="size"><X>0.20000000298023224</X><Y>0.20000000298023224</Y><Z>0.20000000298023224</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ItemBoxSpawn]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Part" referent="44"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>-28.925006866455078</X><Y>-31.034961700439453</Y><Z>-510.0249938964844</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4294901951</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><float name="Transparency">1</float><Vector3 name="size"><X>0.20000000298023224</X><Y>0.20000000298023224</Y><Z>0.20000000298023224</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ItemBoxSpawn]]></string><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="Folder" referent="45"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ItemBoxes]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="SpawnLocation" referent="46"><Properties><int name="Duration">0</int><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>-7.820098876953125</X><Y>-183.74996948242188</Y><Z>-15.35497760772705</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4279308561</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><float name="Transparency">1</float><Vector3 name="size"><X>12</X><Y>0.05000000074505806</Y><Z>12</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[MainSpawn]]></string><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="Model" referent="47"><Properties><CoordinateFrame name="ModelMeshCFrame"><X>0</X><Y>0</Y><Z>0</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="ModelMeshSize"><X>0</X><Y>0</Y><Z>0</Z></Vector3><bool name="NeedsPivotMigration">false</bool><float name="ScaleFactor">1</float><OptionalCoordinateFrame name="WorldPivotData"><CFrame><X>-7.670074462890625</X><Y>-160.9499969482422</Y><Z>-14.879972457885742</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CFrame></OptionalCoordinateFrame><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Spawn]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="Part" referent="48"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>-7.670073986053467</X><Y>-160.9499969482422</Y><Z>1.1450223922729492</Z><R00>0</R00><R01>0</R01><R02>1</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>-1</R20><R21>0</R21><R22>0</R22></CoordinateFrame><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4279308561</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><Vector3 name="size"><X>0.05000000074505806</X><Y>55.15000534057617</Y><Z>33.95000076293945</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Part" referent="49"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>-23.695068359375</X><Y>-160.9499969482422</Y><Z>-14.879971504211426</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4279308561</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><Vector3 name="size"><X>0.05000000074505806</X><Y>55.15000534057617</Y><Z>33.95000076293945</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Part" referent="50"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>-7.695098876953125</X><Y>-134.09996032714844</Y><Z>-14.879971504211426</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4279308561</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><Vector3 name="size"><X>32.14999771118164</X><Y>0.5500000715255737</Y><Z>33.95000076293945</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Part" referent="51"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>-7.670073986053467</X><Y>-160.9499969482422</Y><Z>-30.904918670654297</Z><R00>0</R00><R01>0</R01><R02>1</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>-1</R20><R21>0</R21><R22>0</R22></CoordinateFrame><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4279308561</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><Vector3 name="size"><X>0.05000000074505806</X><Y>55.15000534057617</Y><Z>33.95000076293945</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Part" referent="52"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>8.354888916015625</X><Y>-160.9499969482422</Y><Z>-14.879971504211426</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4279308561</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><Vector3 name="size"><X>0.05000000074505806</X><Y>55.15000534057617</Y><Z>33.95000076293945</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Part" referent="53"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><bool name="Anchored">true</bool><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>-7.695098876953125</X><Y>-188.2499542236328</Y><Z>-14.879971504211426</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4279308561</Color3uint8><bool name="EnableFluidForces">false</bool><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><Vector3 name="size"><X>32.14999771118164</X><Y>0.5500000715255737</Y><Z>33.95000076293945</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="Terrain" referent="54"><Properties><token name="AcquisitionMethod">0</token><bool name="Decoration">true</bool><float name="GrassLength">0.699999988079071</float><BinaryString name="MaterialColors">AAAAAAAAan8/P39rf2Y/ilY+j35fi21PZmxvZbDqw8faiVpHOi4kHh4lZlw76JxKc3trhHtagcLgc4RKxr21zq2UlJSM</BinaryString><bool name="ShorelinesUpgraded">true</bool><bool name="SmoothVoxelsUpgraded">false</bool><Color3 name="WaterColor"><R>0.0470588281750679</R><G>0.3294117748737335</G><B>0.3607843220233917</B></Color3><float name="WaterReflectance">1</float><float name="WaterTransparency">0.30000001192092896</float><float name="WaterWaveSize">0.15000000596046448</float><float name="WaterWaveSpeed">10</float><bool name="Anchored">true</bool><bool name="AudioCanCollide">true</bool><float name="BackParamA">-0.5</float><float name="BackParamB">0.5</float><token name="BackSurface">0</token><token name="BackSurfaceInput">0</token><float name="BottomParamA">-0.5</float><float name="BottomParamB">0.5</float><token name="BottomSurface">4</token><token name="BottomSurfaceInput">0</token><CoordinateFrame name="CFrame"><X>0</X><Y>0</Y><Z>0</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><bool name="CanCollide">true</bool><bool name="CanQuery">true</bool><bool name="CanTouch">true</bool><bool name="CastShadow">true</bool><string name="CollisionGroup"><![CDATA[Default]]></string><int name="CollisionGroupId">0</int><Color3uint8 name="Color3uint8">4288914085</Color3uint8><PhysicalProperties name="CustomPhysicalProperties"><CustomPhysics>false</CustomPhysics></PhysicalProperties><bool name="EnableFluidForces">false</bool><float name="FrontParamA">-0.5</float><float name="FrontParamB">0.5</float><token name="FrontSurface">0</token><token name="FrontSurfaceInput">0</token><float name="LeftParamA">-0.5</float><float name="LeftParamB">0.5</float><token name="LeftSurface">0</token><token name="LeftSurfaceInput">0</token><bool name="Locked">true</bool><bool name="Massless">false</bool><token name="Material">256</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>0</X><Y>0</Y><Z>0</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><float name="Reflectance">0</float><float name="RightParamA">-0.5</float><float name="RightParamB">0.5</float><token name="RightSurface">0</token><token name="RightSurfaceInput">0</token><int name="RootPriority">0</int><Vector3 name="RotVelocity"><X>0</X><Y>0</Y><Z>0</Z></Vector3><float name="TopParamA">-0.5</float><float name="TopParamB">0.5</float><token name="TopSurface">3</token><token name="TopSurfaceInput">0</token><float name="Transparency">0</float><Vector3 name="Velocity"><X>0</X><Y>0</Y><Z>0</Z></Vector3><Vector3 name="size"><X>2044</X><Y>252</Y><Z>2044</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><SecurityCapabilities name="Capabilities">0</SecurityCapabilities><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Terrain]]></string><int64 name="SourceAssetId">-1</int64><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="Players" referent="55"><Properties><bool name="BanningEnabled">true</bool><bool name="CharacterAutoLoads">true</bool><int name="MaxPlayersInternal">6</int><int name="PreferredPlayersInternal">6</int><float name="RespawnTime">4</float><bool name="UseStrafingAnimations">false</bool><BinaryString name="AttributesSerialize"></BinaryString><SecurityCapabilities name="Capabilities">0</SecurityCapabilities><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Players]]></string><int64 name="SourceAssetId">-1</int64><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Lighting" referent="56"><Properties><Color3 name="Ambient"><R>0.5098039507865906</R><G>0.5098039507865906</G><B>0.5098039507865906</B></Color3><float name="Brightness">2</float><Color3 name="ColorShift_Bottom"><R>0</R><G>0</G><B>0</B></Color3><Color3 name="ColorShift_Top"><R>0</R><G>0</G><B>0</B></Color3><float name="EnvironmentDiffuseScale">0</float><float name="EnvironmentSpecularScale">1</float><float name="ExposureCompensation">0</float><Color3 name="FogColor"><R>0.7529412508010864</R><G>0.7529412508010864</G><B>0.7529412508010864</B></Color3><float name="FogEnd">100000</float><float name="FogStart">0</float><float name="GeographicLatitude">0</float><bool name="GlobalShadows">true</bool><token name="LightingStyle">0</token><Color3 name="OutdoorAmbient"><R>0.3686274588108063</R><G>0.3686274588108063</G><B>0.3686274588108063</B></Color3><bool name="Outlines">false</bool><bool name="PrioritizeLightingQuality">true</bool><float name="ShadowSoftness">0.20000000298023224</float><token name="Technology">1</token><string name="TimeOfDay"><![CDATA[14:30:00]]></string><BinaryString name="AttributesSerialize"></BinaryString><SecurityCapabilities name="Capabilities">0</SecurityCapabilities><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Lighting]]></string><int64 name="SourceAssetId">-1</int64><BinaryString name="Tags"></BinaryString></Properties><Item class="DepthOfFieldEffect" referent="57"><Properties><float name="FarIntensity">0.20000000298023224</float><float name="InFocusRadius">30</float><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="BloomEffect" referent="58"><Properties><float name="Intensity">1</float><float name="Threshold">2</float><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="BlurEffect" referent="59"><Properties><float name="Size">2</float><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ColorCorrectionEffect" referent="60"><Properties><float name="Contrast">0.30000001192092896</float><Color3 name="TintColor"><R>1</R><G>0.9568628072738647</G><B>0.9137255549430847</B></Color3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Sky" referent="61"><Properties><Content name="SkyboxBk"><url><![CDATA[http://www.roblox.com/asset/?id=1958291497]]></url></Content><Content name="SkyboxDn"><url><![CDATA[http://www.roblox.com/asset/?id=4534706892]]></url></Content><Content name="SkyboxFt"><url><![CDATA[http://www.roblox.com/asset/?id=1958291497]]></url></Content><Content name="SkyboxLf"><url><![CDATA[http://www.roblox.com/asset/?id=1958291497]]></url></Content><Content name="SkyboxRt"><url><![CDATA[http://www.roblox.com/asset/?id=1958291497]]></url></Content><Content name="SkyboxUp"><url><![CDATA[http://www.roblox.com/asset/?id=4534706558]]></url></Content><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><int64 name="SourceAssetId">5410049026</int64><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Atmosphere" referent="62"><Properties><float name="Density">0.5</float><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MaterialService" referent="63"><Properties><string name="AsphaltName"><![CDATA[Asphalt]]></string><string name="BasaltName"><![CDATA[Basalt]]></string><string name="BrickName"><![CDATA[Brick]]></string><string name="CardboardName"><![CDATA[Cardboard]]></string><string name="CarpetName"><![CDATA[Carpet]]></string><string name="CeramicTilesName"><![CDATA[CeramicTiles]]></string><string name="ClayRoofTilesName"><![CDATA[ClayRoofTiles]]></string><string name="CobblestoneName"><![CDATA[Cobblestone]]></string><string name="ConcreteName"><![CDATA[Concrete]]></string><string name="CorrodedMetalName"><![CDATA[CorrodedMetal]]></string><string name="CrackedLavaName"><![CDATA[CrackedLava]]></string><string name="DiamondPlateName"><![CDATA[DiamondPlate]]></string><string name="FabricName"><![CDATA[Fabric]]></string><string name="FoilName"><![CDATA[Foil]]></string><string name="GlacierName"><![CDATA[Glacier]]></string><string name="GraniteName"><![CDATA[Granite]]></string><string name="GrassName"><![CDATA[Grass]]></string><string name="GroundName"><![CDATA[Ground]]></string><string name="IceName"><![CDATA[Ice]]></string><string name="LeafyGrassName"><![CDATA[LeafyGrass]]></string><string name="LeatherName"><![CDATA[Leather]]></string><string name="LimestoneName"><![CDATA[Limestone]]></string><string name="MarbleName"><![CDATA[Marble]]></string><string name="MetalName"><![CDATA[Metal]]></string><string name="MudName"><![CDATA[Mud]]></string><string name="PavementName"><![CDATA[Pavement]]></string><string name="PebbleName"><![CDATA[Pebble]]></string><string name="PlasterName"><![CDATA[Plaster]]></string><string name="PlasticName"><![CDATA[Plastic]]></string><string name="RockName"><![CDATA[Rock]]></string><string name="RoofShinglesName"><![CDATA[RoofShingles]]></string><string name="RubberName"><![CDATA[Rubber]]></string><string name="SaltName"><![CDATA[Salt]]></string><string name="SandName"><![CDATA[Sand]]></string><string name="SandstoneName"><![CDATA[Sandstone]]></string><string name="SlateName"><![CDATA[Slate]]></string><string name="SmoothPlasticName"><![CDATA[SmoothPlastic]]></string><string name="SnowName"><![CDATA[Snow]]></string><bool name="Use2022MaterialsXml">false</bool><string name="WoodName"><![CDATA[Wood]]></string><string name="WoodPlanksName"><![CDATA[WoodPlanks]]></string><BinaryString name="AttributesSerialize"></BinaryString><SecurityCapabilities name="Capabilities">0</SecurityCapabilities><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[MaterialService]]></string><int64 name="SourceAssetId">-1</int64><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ReplicatedFirst" referent="64"><Properties><BinaryString name="AttributesSerialize"></BinaryString><SecurityCapabilities name="Capabilities">0</SecurityCapabilities><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ReplicatedFirst]]></string><int64 name="SourceAssetId">-1</int64><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ReplicatedStorage" referent="65"><Properties><BinaryString name="AttributesSerialize"></BinaryString><SecurityCapabilities name="Capabilities">0</SecurityCapabilities><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ReplicatedStorage]]></string><int64 name="SourceAssetId">-1</int64><BinaryString name="Tags"></BinaryString></Properties><Item class="Folder" referent="66"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[RagdollFolder]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="ModuleScript" referent="67"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local u1 = game:GetService("CollectionService")
game:GetService("Players")
local u2 = require(script.RigTypes)
return function(p3, p4) --[[Function name: ragdoll, line 8]]
    --[[
    Upvalues:
        [1] = u1
        [2] = u2
    --]]
    assert(p4:IsDescendantOf(p3))
    if not u1:HasTag(p3, "__Ragdoll_Active") then
        u1:AddTag(p3, "__Ragdoll_Active")
        p4:ChangeState(Enum.HumanoidStateType.Physics)
        local v5 = u2.getAttachments(p3, p4.RigType)
        for v6, v7 in pairs(v5) do
            local v8 = p3:FindFirstChild(v6)
            if v8 then
                local v9 = Instance.new("BallSocketConstraint")
                v9.Name = "RagdollBallSocketConstraint"
                v9.Attachment0 = v7.attachment0
                v9.Attachment1 = v7.attachment1
                v9.LimitsEnabled = true
                v9.UpperAngle = v7.limits.UpperAngle
                v9.TwistLimitsEnabled = true
                v9.TwistLowerAngle = v7.limits.TwistLowerAngle
                v9.TwistUpperAngle = v7.limits.TwistUpperAngle
                v9.Parent = v8
            end
        end
        local v10 = u2.getNoCollisions(p3, p4.RigType)
        for _, v11 in pairs(v10) do
            local v12 = Instance.new("NoCollisionConstraint")
            v12.Name = "RagdollNoCollisionConstraint"
            v12.Part0 = v11[1]
            v12.Part1 = v11[2]
            v12.Parent = v11[1]
        end
        for _, v13 in pairs(p3:GetDescendants()) do
            if v13:IsA("Motor6D") then
                v13:Destroy()
            end
        end
    end
end]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Ragdoll]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="ModuleScript" referent="68"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local u1 = {}
local u2 = {
    ["UpperAngle"] = 60,
    ["TwistLowerAngle"] = -60,
    ["TwistUpperAngle"] = 60
}
local u3 = {
    ["UpperAngle"] = 20,
    ["TwistLowerAngle"] = -30,
    ["TwistUpperAngle"] = 60
}
local u4 = {
    ["UpperAngle"] = 10,
    ["TwistLowerAngle"] = -10,
    ["TwistUpperAngle"] = 10
}
local u5 = {
    ["UpperAngle"] = 30,
    ["TwistLowerAngle"] = 0,
    ["TwistUpperAngle"] = 120
}
local u6 = {
    ["UpperAngle"] = 30,
    ["TwistLowerAngle"] = -120,
    ["TwistUpperAngle"] = 0
}
local u7 = {
    ["UpperAngle"] = 60,
    ["TwistLowerAngle"] = -60,
    ["TwistUpperAngle"] = 175
}
local u8 = {
    ["UpperAngle"] = 40,
    ["TwistLowerAngle"] = -5,
    ["TwistUpperAngle"] = 150
}
local u9 = {
    ["UpperAngle"] = 30,
    ["TwistLowerAngle"] = -60,
    ["TwistUpperAngle"] = 60
}
local u10 = {
    ["UpperAngle"] = 90,
    ["TwistLowerAngle"] = -30,
    ["TwistUpperAngle"] = 175
}
local u11 = {
    ["UpperAngle"] = 60,
    ["TwistLowerAngle"] = -5,
    ["TwistUpperAngle"] = 120
}
local function u17(p12, p13, p14) --[[Anonymous function at line 63]]
    assert(p12)
    assert(p13)
    assert(p14)
    local v15 = p14.UpperAngle >= 0
    assert(v15)
    local v16 = p14.TwistLowerAngle <= p14.TwistUpperAngle
    assert(v16)
    return {
        ["attachment0"] = p12,
        ["attachment1"] = p13,
        ["limits"] = p14
    }
end
function u1.getNoCollisions(p18, p19) --[[Anonymous function at line 91]]
    --[[
    Upvalues:
        [1] = u1
    --]]
    if p19 == Enum.HumanoidRigType.R6 then
        return u1.getR6NoCollisions(p18)
    else
        return p19 ~= Enum.HumanoidRigType.R15 and {} or u1.getR15NoCollisions(p18)
    end
end
function u1.getAttachments(p20, p21) --[[Anonymous function at line 102]]
    --[[
    Upvalues:
        [1] = u1
    --]]
    if p21 == Enum.HumanoidRigType.R6 then
        return u1.getR6Attachments(p20)
    else
        return p21 ~= Enum.HumanoidRigType.R15 and {} or u1.getR15Attachments(p20)
    end
end
function u1.getR6Attachments(u22) --[[Anonymous function at line 112]]
    --[[
    Upvalues:
        [1] = u17
        [2] = u9
        [3] = u10
        [4] = u11
    --]]
    local v23 = Instance.new("Attachment")
    v23.Name = "RagdollRightLegAttachment"
    v23.Position = Vector3.new(0, 1, 0)
    v23.Parent = u22:FindFirstChild("Right Leg")
    local v24 = Instance.new("Attachment")
    v24.Name = "RagdollLeftLegAttachment"
    v24.Position = Vector3.new(0, 1, 0)
    v24.Parent = u22:FindFirstChild("Left Leg")
    local v25 = Instance.new("Attachment")
    v25.Name = "RagdollTorsoLeftAttachment"
    v25.Position = Vector3.new(-0.5, -1, 0)
    v25.Parent = u22:FindFirstChild("Torso")
    local v26 = Instance.new("Attachment")
    v26.Name = "RagdollTorsoRightAttachment"
    v26.Position = Vector3.new(0.5, -1, 0)
    v26.Parent = u22:FindFirstChild("Torso")
    local v27 = Instance.new("Attachment")
    v27.Name = "RagdollHeadAttachment"
    v27.Position = Vector3.new(0, -0.5, 0)
    v27.Parent = u22:FindFirstChild("Head")
    local v28 = Instance.new("Attachment")
    v28.Name = "RagdollLeftArmAttachment"
    v28.Position = Vector3.new(0.5, 1, 0)
    v28.Parent = u22:FindFirstChild("Left Arm")
    local v29 = Instance.new("Attachment")
    v29.Name = "RagdollRightArmAttachment"
    v29.Position = Vector3.new(-0.5, 1, 0)
    v29.Parent = u22:FindFirstChild("Right Arm")
    local function v37(p30, p31, p32) --[[Anonymous function at line 78]]
        --[[
        Upvalues:
            [1] = u22
            [2] = u17
        --]]
        local v33 = u22:FindFirstChild(p30[1])
        local v34 = u22:FindFirstChild(p31[1])
        if v33 and v34 then
            local v35 = v33:FindFirstChild(p30[2])
            local v36 = v34:FindFirstChild(p31[2])
            if v35 and (v36 and (v35:IsA("Attachment") and v36:IsA("Attachment"))) then
                return u17(v35, v36, p32)
            end
        end
    end
    return {
        ["Head"] = v37({ "Torso", "NeckAttachment" }, { "Head", "RagdollHeadAttachment" }, u9),
        ["Left Arm"] = v37({ "Torso", "LeftCollarAttachment" }, { "Left Arm", "RagdollLeftArmAttachment" }, u10),
        ["Right Arm"] = v37({ "Torso", "RightCollarAttachment" }, { "Right Arm", "RagdollRightArmAttachment" }, u10),
        ["Left Leg"] = u17(v25, v24, u11),
        ["Right Leg"] = u17(v26, v23, u11)
    }
end
function u1.getR15Attachments(u38) --[[Anonymous function at line 168]]
    --[[
    Upvalues:
        [1] = u17
        [2] = u2
        [3] = u3
        [4] = u7
        [5] = u5
        [6] = u4
        [7] = u8
        [8] = u6
    --]]
    local function v46(p39, p40, p41) --[[Anonymous function at line 78]]
        --[[
        Upvalues:
            [1] = u38
            [2] = u17
        --]]
        local v42 = u38:FindFirstChild(p39[1])
        local v43 = u38:FindFirstChild(p40[1])
        if v42 and v43 then
            local v44 = v42:FindFirstChild(p39[2])
            local v45 = v43:FindFirstChild(p40[2])
            if v44 and (v45 and (v44:IsA("Attachment") and v45:IsA("Attachment"))) then
                return u17(v44, v45, p41)
            end
        end
    end
    return {
        ["Head"] = v46({ "UpperTorso", "NeckRigAttachment" }, { "Head", "NeckRigAttachment" }, u2),
        ["LowerTorso"] = v46({ "UpperTorso", "WaistRigAttachment" }, { "LowerTorso", "RootRigAttachment" }, u3),
        ["LeftUpperArm"] = v46({ "UpperTorso", "LeftShoulderRigAttachment" }, { "LeftUpperArm", "LeftShoulderRigAttachment" }, u7),
        ["LeftLowerArm"] = v46({ "LeftUpperArm", "LeftElbowRigAttachment" }, { "LeftLowerArm", "LeftElbowRigAttachment" }, u5),
        ["LeftHand"] = v46({ "LeftLowerArm", "LeftWristRigAttachment" }, { "LeftHand", "LeftWristRigAttachment" }, u4),
        ["RightUpperArm"] = v46({ "UpperTorso", "RightShoulderRigAttachment" }, { "RightUpperArm", "RightShoulderRigAttachment" }, u7),
        ["RightLowerArm"] = v46({ "RightUpperArm", "RightElbowRigAttachment" }, { "RightLowerArm", "RightElbowRigAttachment" }, u5),
        ["RightHand"] = v46({ "RightLowerArm", "RightWristRigAttachment" }, { "RightHand", "RightWristRigAttachment" }, u4),
        ["LeftUpperLeg"] = v46({ "LowerTorso", "LeftHipRigAttachment" }, { "LeftUpperLeg", "LeftHipRigAttachment" }, u8),
        ["LeftLowerLeg"] = v46({ "LeftUpperLeg", "LeftKneeRigAttachment" }, { "LeftLowerLeg", "LeftKneeRigAttachment" }, u6),
        ["LeftFoot"] = v46({ "LeftLowerLeg", "LeftAnkleRigAttachment" }, { "LeftFoot", "LeftAnkleRigAttachment" }, u4),
        ["RightUpperLeg"] = v46({ "LowerTorso", "RightHipRigAttachment" }, { "RightUpperLeg", "RightHipRigAttachment" }, u8),
        ["RightLowerLeg"] = v46({ "RightUpperLeg", "RightKneeRigAttachment" }, { "RightLowerLeg", "RightKneeRigAttachment" }, u6),
        ["RightFoot"] = v46({ "RightLowerLeg", "RightAnkleRigAttachment" }, { "RightFoot", "RightAnkleRigAttachment" }, u4)
    }
end
function u1.getR6NoCollisions(p47) --[[Anonymous function at line 236]]
    local v48 = {}
    local v49 = { "Head", "Torso" }
    local v50 = p47:FindFirstChild(v49[1])
    local v51 = p47:FindFirstChild(v49[2])
    if v50 and v51 then
        table.insert(v48, { v50, v51 })
    end
    local v52 = { "Left Arm", "Torso" }
    local v53 = p47:FindFirstChild(v52[1])
    local v54 = p47:FindFirstChild(v52[2])
    if v53 and v54 then
        table.insert(v48, { v53, v54 })
    end
    local v55 = { "Right Arm", "Torso" }
    local v56 = p47:FindFirstChild(v55[1])
    local v57 = p47:FindFirstChild(v55[2])
    if v56 and v57 then
        table.insert(v48, { v56, v57 })
    end
    local v58 = { "Left Leg", "Torso" }
    local v59 = p47:FindFirstChild(v58[1])
    local v60 = p47:FindFirstChild(v58[2])
    if v59 and v60 then
        table.insert(v48, { v59, v60 })
    end
    local v61 = { "Right Leg", "Torso" }
    local v62 = p47:FindFirstChild(v61[1])
    local v63 = p47:FindFirstChild(v61[2])
    if v62 and v63 then
        table.insert(v48, { v62, v63 })
    end
    local v64 = { "Left Leg", "Right Leg" }
    local v65 = p47:FindFirstChild(v64[1])
    local v66 = p47:FindFirstChild(v64[2])
    if v65 and v66 then
        table.insert(v48, { v65, v66 })
    end
    return v48
end
function u1.getR15NoCollisions(p67) --[[Anonymous function at line 260]]
    local v68 = {}
    local v69 = { "Head", "UpperTorso" }
    local v70 = p67:FindFirstChild(v69[1])
    local v71 = p67:FindFirstChild(v69[2])
    if v70 and v71 then
        table.insert(v68, { v70, v71 })
    end
    local v72 = { "UpperTorso", "LowerTorso" }
    local v73 = p67:FindFirstChild(v72[1])
    local v74 = p67:FindFirstChild(v72[2])
    if v73 and v74 then
        table.insert(v68, { v73, v74 })
    end
    local v75 = { "UpperTorso", "LeftUpperArm" }
    local v76 = p67:FindFirstChild(v75[1])
    local v77 = p67:FindFirstChild(v75[2])
    if v76 and v77 then
        table.insert(v68, { v76, v77 })
    end
    local v78 = { "LowerTorso", "LeftUpperArm" }
    local v79 = p67:FindFirstChild(v78[1])
    local v80 = p67:FindFirstChild(v78[2])
    if v79 and v80 then
        table.insert(v68, { v79, v80 })
    end
    local v81 = { "LeftUpperArm", "LeftLowerArm" }
    local v82 = p67:FindFirstChild(v81[1])
    local v83 = p67:FindFirstChild(v81[2])
    if v82 and v83 then
        table.insert(v68, { v82, v83 })
    end
    local v84 = { "LeftLowerArm", "LeftHand" }
    local v85 = p67:FindFirstChild(v84[1])
    local v86 = p67:FindFirstChild(v84[2])
    if v85 and v86 then
        table.insert(v68, { v85, v86 })
    end
    local v87 = { "LeftUpperArm", "LeftHand" }
    local v88 = p67:FindFirstChild(v87[1])
    local v89 = p67:FindFirstChild(v87[2])
    if v88 and v89 then
        table.insert(v68, { v88, v89 })
    end
    local v90 = { "UpperTorso", "RightUpperArm" }
    local v91 = p67:FindFirstChild(v90[1])
    local v92 = p67:FindFirstChild(v90[2])
    if v91 and v92 then
        table.insert(v68, { v91, v92 })
    end
    local v93 = { "LowerTorso", "RightUpperArm" }
    local v94 = p67:FindFirstChild(v93[1])
    local v95 = p67:FindFirstChild(v93[2])
    if v94 and v95 then
        table.insert(v68, { v94, v95 })
    end
    local v96 = { "RightUpperArm", "RightLowerArm" }
    local v97 = p67:FindFirstChild(v96[1])
    local v98 = p67:FindFirstChild(v96[2])
    if v97 and v98 then
        table.insert(v68, { v97, v98 })
    end
    local v99 = { "RightLowerArm", "RightHand" }
    local v100 = p67:FindFirstChild(v99[1])
    local v101 = p67:FindFirstChild(v99[2])
    if v100 and v101 then
        table.insert(v68, { v100, v101 })
    end
    local v102 = { "RightUpperArm", "RightHand" }
    local v103 = p67:FindFirstChild(v102[1])
    local v104 = p67:FindFirstChild(v102[2])
    if v103 and v104 then
        table.insert(v68, { v103, v104 })
    end
    local v105 = { "LeftUpperLeg", "RightUpperLeg" }
    local v106 = p67:FindFirstChild(v105[1])
    local v107 = p67:FindFirstChild(v105[2])
    if v106 and v107 then
        table.insert(v68, { v106, v107 })
    end
    local v108 = { "UpperTorso", "RightUpperLeg" }
    local v109 = p67:FindFirstChild(v108[1])
    local v110 = p67:FindFirstChild(v108[2])
    if v109 and v110 then
        table.insert(v68, { v109, v110 })
    end
    local v111 = { "LowerTorso", "RightUpperLeg" }
    local v112 = p67:FindFirstChild(v111[1])
    local v113 = p67:FindFirstChild(v111[2])
    if v112 and v113 then
        table.insert(v68, { v112, v113 })
    end
    local v114 = { "RightUpperLeg", "RightLowerLeg" }
    local v115 = p67:FindFirstChild(v114[1])
    local v116 = p67:FindFirstChild(v114[2])
    if v115 and v116 then
        table.insert(v68, { v115, v116 })
    end
    local v117 = { "RightLowerLeg", "RightFoot" }
    local v118 = p67:FindFirstChild(v117[1])
    local v119 = p67:FindFirstChild(v117[2])
    if v118 and v119 then
        table.insert(v68, { v118, v119 })
    end
    local v120 = { "RightUpperLeg", "RightFoot" }
    local v121 = p67:FindFirstChild(v120[1])
    local v122 = p67:FindFirstChild(v120[2])
    if v121 and v122 then
        table.insert(v68, { v121, v122 })
    end
    local v123 = { "UpperTorso", "LeftUpperLeg" }
    local v124 = p67:FindFirstChild(v123[1])
    local v125 = p67:FindFirstChild(v123[2])
    if v124 and v125 then
        table.insert(v68, { v124, v125 })
    end
    local v126 = { "LowerTorso", "LeftUpperLeg" }
    local v127 = p67:FindFirstChild(v126[1])
    local v128 = p67:FindFirstChild(v126[2])
    if v127 and v128 then
        table.insert(v68, { v127, v128 })
    end
    local v129 = { "LeftUpperLeg", "LeftLowerLeg" }
    local v130 = p67:FindFirstChild(v129[1])
    local v131 = p67:FindFirstChild(v129[2])
    if v130 and v131 then
        table.insert(v68, { v130, v131 })
    end
    local v132 = { "LeftLowerLeg", "LeftFoot" }
    local v133 = p67:FindFirstChild(v132[1])
    local v134 = p67:FindFirstChild(v132[2])
    if v133 and v134 then
        table.insert(v68, { v133, v134 })
    end
    local v135 = { "LeftUpperLeg", "LeftFoot" }
    local v136 = p67:FindFirstChild(v135[1])
    local v137 = p67:FindFirstChild(v135[2])
    if v136 and v137 then
        table.insert(v68, { v136, v137 })
    end
    local v138 = { "UpperTorso", "LeftLowerLeg" }
    local v139 = p67:FindFirstChild(v138[1])
    local v140 = p67:FindFirstChild(v138[2])
    if v139 and v140 then
        table.insert(v68, { v139, v140 })
    end
    local v141 = { "UpperTorso", "RightLowerLeg" }
    local v142 = p67:FindFirstChild(v141[1])
    local v143 = p67:FindFirstChild(v141[2])
    if v142 and v143 then
        table.insert(v68, { v142, v143 })
    end
    local v144 = { "LowerTorso", "LeftLowerLeg" }
    local v145 = p67:FindFirstChild(v144[1])
    local v146 = p67:FindFirstChild(v144[2])
    if v145 and v146 then
        table.insert(v68, { v145, v146 })
    end
    local v147 = { "LowerTorso", "RightLowerLeg" }
    local v148 = p67:FindFirstChild(v147[1])
    local v149 = p67:FindFirstChild(v147[2])
    if v148 and v149 then
        table.insert(v68, { v148, v149 })
    end
    local v150 = { "UpperTorso", "LeftLowerArm" }
    local v151 = p67:FindFirstChild(v150[1])
    local v152 = p67:FindFirstChild(v150[2])
    if v151 and v152 then
        table.insert(v68, { v151, v152 })
    end
    local v153 = { "UpperTorso", "RightLowerArm" }
    local v154 = p67:FindFirstChild(v153[1])
    local v155 = p67:FindFirstChild(v153[2])
    if v154 and v155 then
        table.insert(v68, { v154, v155 })
    end
    local v156 = p67:FindFirstChild("UpperTorso")
    if v156 and v156.Size.x <= 1.5 then
        local v157 = { "Head", "LeftUpperArm" }
        local v158 = p67:FindFirstChild(v157[1])
        local v159 = p67:FindFirstChild(v157[2])
        if v158 and v159 then
            table.insert(v68, { v158, v159 })
        end
        local v160 = { "Head", "RightUpperArm" }
        local v161 = p67:FindFirstChild(v160[1])
        local v162 = p67:FindFirstChild(v160[2])
        if v161 and v162 then
            table.insert(v68, { v161, v162 })
        end
    end
    return v68
end
return u1]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[RigTypes]]></string><BinaryString name="Tags"></BinaryString></Properties></Item></Item></Item><Item class="Folder" referent="69"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Remotes]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="RemoteEvent" referent="70"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[PickUpEvent]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="RemoteEvent" referent="71"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ItemEvent]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="RemoteEvent" referent="72"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ToolEffect]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="RemoteFunction" referent="73"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ToolFunc]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="RemoteFunction" referent="74"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[JoinGame]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="RemoteFunction" referent="75"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[AbilityAdd]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="RemoteEvent" referent="76"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[StartGame]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="RemoteFunction" referent="77"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[DropItem]]></string><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="Folder" referent="78"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[SkyStorage]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="Folder" referent="79"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Space]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="Sky" referent="80"><Properties><Content name="SkyboxBk"><url><![CDATA[http://www.roblox.com/asset/?version=1&id=1014344]]></url></Content><Content name="SkyboxDn"><url><![CDATA[http://www.roblox.com/asset/?version=1&id=1014344]]></url></Content><Content name="SkyboxFt"><url><![CDATA[http://www.roblox.com/asset/?version=1&id=1014344]]></url></Content><Content name="SkyboxLf"><url><![CDATA[http://www.roblox.com/asset/?version=1&id=1014344]]></url></Content><Content name="SkyboxRt"><url><![CDATA[http://www.roblox.com/asset/?version=1&id=1014344]]></url></Content><Content name="SkyboxUp"><url><![CDATA[http://www.roblox.com/asset/?version=1&id=1014344]]></url></Content><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><int64 name="SourceAssetId">174231249</int64><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Atmosphere" referent="81"><Properties><float name="Density">0.6000000238418579</float><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="Folder" referent="82"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Desert]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="Sky" referent="83"><Properties><Content name="SkyboxBk"><url><![CDATA[http://www.roblox.com/asset/?id=1958291497]]></url></Content><Content name="SkyboxDn"><url><![CDATA[http://www.roblox.com/asset/?id=4534706892]]></url></Content><Content name="SkyboxFt"><url><![CDATA[http://www.roblox.com/asset/?id=1958291497]]></url></Content><Content name="SkyboxLf"><url><![CDATA[http://www.roblox.com/asset/?id=1958291497]]></url></Content><Content name="SkyboxRt"><url><![CDATA[http://www.roblox.com/asset/?id=1958291497]]></url></Content><Content name="SkyboxUp"><url><![CDATA[http://www.roblox.com/asset/?id=4534706558]]></url></Content><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><int64 name="SourceAssetId">5410049026</int64><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Atmosphere" referent="84"><Properties><float name="Density">0.5</float><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item></Item><Item class="Folder" referent="85"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[CutsceneStorage]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="Model" referent="86"><Properties><CoordinateFrame name="ModelMeshCFrame"><X>0</X><Y>0</Y><Z>0</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="ModelMeshSize"><X>0</X><Y>0</Y><Z>0</Z></Vector3><bool name="NeedsPivotMigration">false</bool><Ref name="PrimaryPart">87</Ref><float name="ScaleFactor">1</float><OptionalCoordinateFrame name="WorldPivotData"><CFrame><X>-67.09814453125</X><Y>53.715049743652344</Y><Z>8.42694091796875</Z><R00>-0.00008106231689453125</R00><R01>-0.00008106231689453125</R01><R02>-1</R02><R10>1</R10><R11>0.00008106231689453125</R11><R12>-0.00008106231689453125</R12><R20>0.00008106231689453125</R20><R21>-1</R21><R22>0.00008106231689453125</R22></CFrame></OptionalCoordinateFrame><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[RocketFake]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="Model" referent="88"><Properties><CoordinateFrame name="ModelMeshCFrame"><X>0</X><Y>0</Y><Z>0</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="ModelMeshSize"><X>0</X><Y>0</Y><Z>0</Z></Vector3><bool name="NeedsPivotMigration">false</bool><float name="ScaleFactor">1</float><OptionalCoordinateFrame name="WorldPivotData"><CFrame><X>-67.09820556640625</X><Y>15.507913589477539</Y><Z>8.426939964294434</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CFrame></OptionalCoordinateFrame><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Thrusters]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="MeshPart" referent="87"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><bool name="Anchored">true</bool><CoordinateFrame name="CFrame"><X>-67.09814453125</X><Y>16.244102478027344</Y><Z>8.426939964294434</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4284177769</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-1.9631901979446411</X><Y>-1.0566716194152832</Y><Z>9.815951347351074</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>3.9263803958892822</X><Y>2.1133432388305664</Y><Z>3.9263803958892822</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Main]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="MeshPart" referent="89"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130809274]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-65.135009765625</X><Y>15.187448501586914</Y><Z>6.463746070861816</Z><R00>-0.00008106231689453125</R00><R01>-0.00008106231689453125</R01><R02>-1</R02><R10>1</R10><R11>0.00008106231689453125</R11><R12>-0.00008106231689453125</R12><R20>0.00008106231689453125</R20><R21>-1</R21><R22>0.00008106231689453125</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4291677645</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-1.4723926782608032</X><Y>-0.4907975494861603</Y><Z>-3.4355828762054443</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>2.9447853565216064</X><Y>0.9815950989723206</Y><Z>0.9815950989723206</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="90"><Properties><CoordinateFrame name="CFrame0"><X>1.0566539764404297</X><Y>-1.9631948471069336</Y><Z>1.963134765625</Z><R00>-1.1920928955078125e-07</R00><R01>1.0000001192092896</R01><R02>0</R02><R10>-1.0000001192092896</R10><R11>-1.1920928955078125e-07</R11><R12>-0</R12><R20>-0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">89</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="91"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130809274]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-65.135009765625</X><Y>15.187448501586914</Y><Z>10.390134811401367</Z><R00>-0.00008106231689453125</R00><R01>-0.00008106231689453125</R01><R02>-1</R02><R10>1</R10><R11>0.00008106231689453125</R11><R12>-0.00008106231689453125</R12><R20>0.00008106231689453125</R20><R21>-1</R21><R22>0.00008106231689453125</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4291677645</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-1.4723926782608032</X><Y>-0.4907975494861603</Y><Z>-3.4355828762054443</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>2.9447853565216064</X><Y>0.9815950989723206</Y><Z>0.9815950989723206</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="92"><Properties><CoordinateFrame name="CFrame0"><X>1.0566539764404297</X><Y>1.96319580078125</Y><Z>1.963134765625</Z><R00>-1.1920928955078125e-07</R00><R01>1.0000001192092896</R01><R02>0</R02><R10>-1.0000001192092896</R10><R11>-1.1920928955078125e-07</R11><R12>-0</R12><R20>-0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">91</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="93"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130809274]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-69.0614013671875</X><Y>15.187448501586914</Y><Z>6.463746070861816</Z><R00>-0.00008106231689453125</R00><R01>-0.00008106231689453125</R01><R02>-1</R02><R10>1</R10><R11>0.00008106231689453125</R11><R12>-0.00008106231689453125</R12><R20>0.00008106231689453125</R20><R21>-1</R21><R22>0.00008106231689453125</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4291677645</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-1.4723926782608032</X><Y>-0.4907975494861603</Y><Z>-3.4355828762054443</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>2.9447853565216064</X><Y>0.9815950989723206</Y><Z>0.9815950989723206</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="94"><Properties><CoordinateFrame name="CFrame0"><X>1.0566539764404297</X><Y>-1.9631948471069336</Y><Z>-1.9632568359375</Z><R00>-1.1920928955078125e-07</R00><R01>1.0000001192092896</R01><R02>0</R02><R10>-1.0000001192092896</R10><R11>-1.1920928955078125e-07</R11><R12>-0</R12><R20>-0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">93</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="95"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130809274]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-69.0614013671875</X><Y>15.187448501586914</Y><Z>10.390134811401367</Z><R00>-0.00008106231689453125</R00><R01>-0.00008106231689453125</R01><R02>-1</R02><R10>1</R10><R11>0.00008106231689453125</R11><R12>-0.00008106231689453125</R12><R20>0.00008106231689453125</R20><R21>-1</R21><R22>0.00008106231689453125</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4291677645</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-1.4723926782608032</X><Y>-0.4907975494861603</Y><Z>-3.4355828762054443</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>2.9447853565216064</X><Y>0.9815950989723206</Y><Z>0.9815950989723206</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="96"><Properties><CoordinateFrame name="CFrame0"><X>1.0566539764404297</X><Y>1.96319580078125</Y><Z>-1.9632568359375</Z><R00>-1.1920928955078125e-07</R00><R01>1.0000001192092896</R01><R02>0</R02><R10>-1.0000001192092896</R10><R11>-1.1920928955078125e-07</R11><R12>-0</R12><R20>-0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">95</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item></Item><Item class="Model" referent="97"><Properties><CoordinateFrame name="ModelMeshCFrame"><X>0</X><Y>0</Y><Z>0</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="ModelMeshSize"><X>0</X><Y>0</Y><Z>0</Z></Vector3><bool name="NeedsPivotMigration">false</bool><float name="ScaleFactor">1</float><OptionalCoordinateFrame name="WorldPivotData"><CFrame><X>-65.135009765625</X><Y>24.512596130371094</Y><Z>6.4637451171875</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CFrame></OptionalCoordinateFrame><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="MeshPart" referent="98"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-65.135009765625</X><Y>17.886802673339844</Y><Z>6.463746070861816</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4284177769</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-0.9815950989723206</X><Y>-2.6993865966796875</Y><Z>4.907975673675537</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>1.9631901979446411</X><Y>5.398773193359375</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="99"><Properties><CoordinateFrame name="CFrame0"><X>1.9631948471069336</X><Y>-1.6427001953125</Y><Z>1.963134765625</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">98</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="100"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-65.135009765625</X><Y>21.076988220214844</Y><Z>6.463746070861816</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4278815183</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-0.9815950989723206</X><Y>-0.4907975196838379</Y><Z>4.907975673675537</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>1.9631901979446411</X><Y>0.9815950989723206</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="101"><Properties><CoordinateFrame name="CFrame0"><X>1.9631948471069336</X><Y>-4.8328857421875</Y><Z>1.963134765625</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">100</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="102"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-65.135009765625</X><Y>22.05858612060547</Y><Z>6.463746070861816</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4286251131</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-0.9815950989723206</X><Y>-0.4907975196838379</Y><Z>4.907975673675537</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>1.9631901979446411</X><Y>0.9815950989723206</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="103"><Properties><CoordinateFrame name="CFrame0"><X>1.9631948471069336</X><Y>-5.814483642578125</Y><Z>1.963134765625</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">102</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="104"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-65.135009765625</X><Y>23.040184020996094</Y><Z>6.463746070861816</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4280844103</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-0.9815950989723206</X><Y>-0.4907975196838379</Y><Z>4.907975673675537</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>1.9631901979446411</X><Y>0.9815950989723206</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="105"><Properties><CoordinateFrame name="CFrame0"><X>1.9631948471069336</X><Y>-6.79608154296875</Y><Z>1.963134765625</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">104</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="106"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-65.135009765625</X><Y>24.02178192138672</Y><Z>6.463746070861816</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4286251131</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-0.9815950989723206</X><Y>-0.4907975196838379</Y><Z>4.907975673675537</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>1.9631901979446411</X><Y>0.9815950989723206</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="107"><Properties><CoordinateFrame name="CFrame0"><X>1.9631948471069336</X><Y>-7.777679443359375</Y><Z>1.963134765625</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">106</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="108"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-65.135009765625</X><Y>25.003379821777344</Y><Z>6.463746070861816</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4280844103</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-0.9815950989723206</X><Y>-0.4907975196838379</Y><Z>4.907975673675537</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>1.9631901979446411</X><Y>0.9815950989723206</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="109"><Properties><CoordinateFrame name="CFrame0"><X>1.9631948471069336</X><Y>-8.75927734375</Y><Z>1.963134765625</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">108</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="110"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-65.135009765625</X><Y>25.98497772216797</Y><Z>6.463746070861816</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4278815183</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-0.9815950989723206</X><Y>-0.4907975196838379</Y><Z>4.907975673675537</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>1.9631901979446411</X><Y>0.9815950989723206</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="111"><Properties><CoordinateFrame name="CFrame0"><X>1.9631948471069336</X><Y>-9.740875244140625</Y><Z>1.963134765625</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">110</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="112"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-65.135009765625</X><Y>29.17516326904297</Y><Z>6.463746070861816</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4288651692</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-0.9815950989723206</X><Y>-2.6993865966796875</Y><Z>4.907975673675537</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>1.9631901979446411</X><Y>5.398773193359375</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="113"><Properties><CoordinateFrame name="CFrame0"><X>1.9631948471069336</X><Y>-12.931060791015625</Y><Z>1.963134765625</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">112</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="114"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130809274]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-65.135009765625</X><Y>31.874534606933594</Y><Z>6.463746070861816</Z><R00>-0.00008106231689453125</R00><R01>-0.00008106231689453125</R01><R02>-1</R02><R10>1</R10><R11>0.00008106231689453125</R11><R12>-0.00008106231689453125</R12><R20>0.00008106231689453125</R20><R21>-1</R21><R22>0.00008106231689453125</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4288651692</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-3.4355828762054443</X><Y>-0.9815950989723206</Y><Z>-6.871165752410889</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>6.871165752410889</X><Y>1.9631901979446411</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="115"><Properties><CoordinateFrame name="CFrame0"><X>-15.63043212890625</X><Y>-1.9631948471069336</Y><Z>1.963134765625</Z><R00>-1.1920928955078125e-07</R00><R01>1.0000001192092896</R01><R02>0</R02><R10>-1.0000001192092896</R10><R11>-1.1920928955078125e-07</R11><R12>-0</R12><R20>-0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">114</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item></Item><Item class="Model" referent="116"><Properties><CoordinateFrame name="ModelMeshCFrame"><X>0</X><Y>0</Y><Z>0</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="ModelMeshSize"><X>0</X><Y>0</Y><Z>0</Z></Vector3><bool name="NeedsPivotMigration">false</bool><float name="ScaleFactor">1</float><OptionalCoordinateFrame name="WorldPivotData"><CFrame><X>-69.0614013671875</X><Y>24.512596130371094</Y><Z>6.4637451171875</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CFrame></OptionalCoordinateFrame><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="MeshPart" referent="117"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-69.0614013671875</X><Y>17.886802673339844</Y><Z>6.463746070861816</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4284177769</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-0.9815950989723206</X><Y>-2.6993865966796875</Y><Z>4.907975673675537</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>1.9631901979446411</X><Y>5.398773193359375</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="118"><Properties><CoordinateFrame name="CFrame0"><X>1.9631948471069336</X><Y>-1.6427001953125</Y><Z>-1.9632568359375</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">117</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="119"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-69.0614013671875</X><Y>21.076988220214844</Y><Z>6.463746070861816</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4278815183</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-0.9815950989723206</X><Y>-0.4907975196838379</Y><Z>4.907975673675537</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>1.9631901979446411</X><Y>0.9815950989723206</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="120"><Properties><CoordinateFrame name="CFrame0"><X>1.9631948471069336</X><Y>-4.8328857421875</Y><Z>-1.9632568359375</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">119</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="121"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-69.0614013671875</X><Y>22.05858612060547</Y><Z>6.463746070861816</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4286251131</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-0.9815950989723206</X><Y>-0.4907975196838379</Y><Z>4.907975673675537</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>1.9631901979446411</X><Y>0.9815950989723206</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="122"><Properties><CoordinateFrame name="CFrame0"><X>1.9631948471069336</X><Y>-5.814483642578125</Y><Z>-1.9632568359375</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">121</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="123"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-69.0614013671875</X><Y>23.040184020996094</Y><Z>6.463746070861816</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4280844103</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-0.9815950989723206</X><Y>-0.4907975196838379</Y><Z>4.907975673675537</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>1.9631901979446411</X><Y>0.9815950989723206</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="124"><Properties><CoordinateFrame name="CFrame0"><X>1.9631948471069336</X><Y>-6.79608154296875</Y><Z>-1.9632568359375</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">123</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="125"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-69.0614013671875</X><Y>24.02178192138672</Y><Z>6.463746070861816</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4286251131</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-0.9815950989723206</X><Y>-0.4907975196838379</Y><Z>4.907975673675537</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>1.9631901979446411</X><Y>0.9815950989723206</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="126"><Properties><CoordinateFrame name="CFrame0"><X>1.9631948471069336</X><Y>-7.777679443359375</Y><Z>-1.9632568359375</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">125</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="127"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-69.0614013671875</X><Y>25.003379821777344</Y><Z>6.463746070861816</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4280844103</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-0.9815950989723206</X><Y>-0.4907975196838379</Y><Z>4.907975673675537</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>1.9631901979446411</X><Y>0.9815950989723206</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="128"><Properties><CoordinateFrame name="CFrame0"><X>1.9631948471069336</X><Y>-8.75927734375</Y><Z>-1.9632568359375</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">127</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="129"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-69.0614013671875</X><Y>25.98497772216797</Y><Z>6.463746070861816</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4278815183</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-0.9815950989723206</X><Y>-0.4907975196838379</Y><Z>4.907975673675537</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>1.9631901979446411</X><Y>0.9815950989723206</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="130"><Properties><CoordinateFrame name="CFrame0"><X>1.9631948471069336</X><Y>-9.740875244140625</Y><Z>-1.9632568359375</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">129</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="131"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-69.0614013671875</X><Y>29.17516326904297</Y><Z>6.463746070861816</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4288651692</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-0.9815950989723206</X><Y>-2.6993865966796875</Y><Z>4.907975673675537</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>1.9631901979446411</X><Y>5.398773193359375</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="132"><Properties><CoordinateFrame name="CFrame0"><X>1.9631948471069336</X><Y>-12.931060791015625</Y><Z>-1.9632568359375</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">131</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="133"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130809274]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-69.0614013671875</X><Y>31.874534606933594</Y><Z>6.463746070861816</Z><R00>-0.00008106231689453125</R00><R01>-0.00008106231689453125</R01><R02>-1</R02><R10>1</R10><R11>0.00008106231689453125</R11><R12>-0.00008106231689453125</R12><R20>0.00008106231689453125</R20><R21>-1</R21><R22>0.00008106231689453125</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4288651692</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-3.4355828762054443</X><Y>-0.9815950989723206</Y><Z>-6.871165752410889</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>6.871165752410889</X><Y>1.9631901979446411</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="134"><Properties><CoordinateFrame name="CFrame0"><X>-15.63043212890625</X><Y>-1.9631948471069336</Y><Z>-1.9632568359375</Z><R00>-1.1920928955078125e-07</R00><R01>1.0000001192092896</R01><R02>0</R02><R10>-1.0000001192092896</R10><R11>-1.1920928955078125e-07</R11><R12>-0</R12><R20>-0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">133</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item></Item><Item class="Model" referent="135"><Properties><CoordinateFrame name="ModelMeshCFrame"><X>0</X><Y>0</Y><Z>0</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="ModelMeshSize"><X>0</X><Y>0</Y><Z>0</Z></Vector3><bool name="NeedsPivotMigration">false</bool><float name="ScaleFactor">1</float><OptionalCoordinateFrame name="WorldPivotData"><CFrame><X>-69.0614013671875</X><Y>24.512596130371094</Y><Z>10.39013671875</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CFrame></OptionalCoordinateFrame><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="MeshPart" referent="136"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-69.0614013671875</X><Y>17.886802673339844</Y><Z>10.390134811401367</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4284177769</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-0.9815950989723206</X><Y>-2.6993865966796875</Y><Z>4.907975673675537</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>1.9631901979446411</X><Y>5.398773193359375</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="137"><Properties><CoordinateFrame name="CFrame0"><X>-1.96319580078125</X><Y>-1.6427001953125</Y><Z>-1.9632568359375</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">136</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="138"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-69.0614013671875</X><Y>21.076988220214844</Y><Z>10.390134811401367</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4278815183</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-0.9815950989723206</X><Y>-0.4907975196838379</Y><Z>4.907975673675537</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>1.9631901979446411</X><Y>0.9815950989723206</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="139"><Properties><CoordinateFrame name="CFrame0"><X>-1.96319580078125</X><Y>-4.8328857421875</Y><Z>-1.9632568359375</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">138</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="140"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-69.0614013671875</X><Y>22.05858612060547</Y><Z>10.390134811401367</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4286251131</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-0.9815950989723206</X><Y>-0.4907975196838379</Y><Z>4.907975673675537</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>1.9631901979446411</X><Y>0.9815950989723206</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="141"><Properties><CoordinateFrame name="CFrame0"><X>-1.96319580078125</X><Y>-5.814483642578125</Y><Z>-1.9632568359375</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">140</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="142"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-69.0614013671875</X><Y>23.040184020996094</Y><Z>10.390134811401367</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4280844103</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-0.9815950989723206</X><Y>-0.4907975196838379</Y><Z>4.907975673675537</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>1.9631901979446411</X><Y>0.9815950989723206</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="143"><Properties><CoordinateFrame name="CFrame0"><X>-1.96319580078125</X><Y>-6.79608154296875</Y><Z>-1.9632568359375</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">142</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="144"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-69.0614013671875</X><Y>24.02178192138672</Y><Z>10.390134811401367</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4286251131</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-0.9815950989723206</X><Y>-0.4907975196838379</Y><Z>4.907975673675537</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>1.9631901979446411</X><Y>0.9815950989723206</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="145"><Properties><CoordinateFrame name="CFrame0"><X>-1.96319580078125</X><Y>-7.777679443359375</Y><Z>-1.9632568359375</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">144</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="146"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-69.0614013671875</X><Y>25.003379821777344</Y><Z>10.390134811401367</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4280844103</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-0.9815950989723206</X><Y>-0.4907975196838379</Y><Z>4.907975673675537</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>1.9631901979446411</X><Y>0.9815950989723206</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="147"><Properties><CoordinateFrame name="CFrame0"><X>-1.96319580078125</X><Y>-8.75927734375</Y><Z>-1.9632568359375</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">146</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="148"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-69.0614013671875</X><Y>25.98497772216797</Y><Z>10.390134811401367</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4278815183</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-0.9815950989723206</X><Y>-0.4907975196838379</Y><Z>4.907975673675537</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>1.9631901979446411</X><Y>0.9815950989723206</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="149"><Properties><CoordinateFrame name="CFrame0"><X>-1.96319580078125</X><Y>-9.740875244140625</Y><Z>-1.9632568359375</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">148</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="150"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-69.0614013671875</X><Y>29.17516326904297</Y><Z>10.390134811401367</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4288651692</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-0.9815950989723206</X><Y>-2.6993865966796875</Y><Z>4.907975673675537</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>1.9631901979446411</X><Y>5.398773193359375</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="151"><Properties><CoordinateFrame name="CFrame0"><X>-1.96319580078125</X><Y>-12.931060791015625</Y><Z>-1.9632568359375</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">150</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="152"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130809274]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-69.0614013671875</X><Y>31.874534606933594</Y><Z>10.390134811401367</Z><R00>-0.00008106231689453125</R00><R01>-0.00008106231689453125</R01><R02>-1</R02><R10>1</R10><R11>0.00008106231689453125</R11><R12>-0.00008106231689453125</R12><R20>0.00008106231689453125</R20><R21>-1</R21><R22>0.00008106231689453125</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4288651692</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-3.4355828762054443</X><Y>-0.9815950989723206</Y><Z>-6.871165752410889</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>6.871165752410889</X><Y>1.9631901979446411</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="153"><Properties><CoordinateFrame name="CFrame0"><X>-15.63043212890625</X><Y>1.96319580078125</Y><Z>-1.9632568359375</Z><R00>-1.1920928955078125e-07</R00><R01>1.0000001192092896</R01><R02>0</R02><R10>-1.0000001192092896</R10><R11>-1.1920928955078125e-07</R11><R12>-0</R12><R20>-0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">152</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item></Item><Item class="Model" referent="154"><Properties><CoordinateFrame name="ModelMeshCFrame"><X>0</X><Y>0</Y><Z>0</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="ModelMeshSize"><X>0</X><Y>0</Y><Z>0</Z></Vector3><bool name="NeedsPivotMigration">false</bool><float name="ScaleFactor">1</float><OptionalCoordinateFrame name="WorldPivotData"><CFrame><X>-65.135009765625</X><Y>24.512596130371094</Y><Z>10.39013671875</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CFrame></OptionalCoordinateFrame><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="MeshPart" referent="155"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-65.135009765625</X><Y>17.886802673339844</Y><Z>10.390134811401367</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4284177769</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-0.9815950989723206</X><Y>-2.6993865966796875</Y><Z>4.907975673675537</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>1.9631901979446411</X><Y>5.398773193359375</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="156"><Properties><CoordinateFrame name="CFrame0"><X>-1.96319580078125</X><Y>-1.6427001953125</Y><Z>1.963134765625</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">155</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="157"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-65.135009765625</X><Y>21.076988220214844</Y><Z>10.390134811401367</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4278815183</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-0.9815950989723206</X><Y>-0.4907975196838379</Y><Z>4.907975673675537</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>1.9631901979446411</X><Y>0.9815950989723206</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="158"><Properties><CoordinateFrame name="CFrame0"><X>-1.96319580078125</X><Y>-4.8328857421875</Y><Z>1.963134765625</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">157</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="159"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-65.135009765625</X><Y>22.05858612060547</Y><Z>10.390134811401367</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4286251131</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-0.9815950989723206</X><Y>-0.4907975196838379</Y><Z>4.907975673675537</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>1.9631901979446411</X><Y>0.9815950989723206</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="160"><Properties><CoordinateFrame name="CFrame0"><X>-1.96319580078125</X><Y>-5.814483642578125</Y><Z>1.963134765625</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">159</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="161"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-65.135009765625</X><Y>23.040184020996094</Y><Z>10.390134811401367</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4280844103</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-0.9815950989723206</X><Y>-0.4907975196838379</Y><Z>4.907975673675537</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>1.9631901979446411</X><Y>0.9815950989723206</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="162"><Properties><CoordinateFrame name="CFrame0"><X>-1.96319580078125</X><Y>-6.79608154296875</Y><Z>1.963134765625</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">161</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="163"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-65.135009765625</X><Y>24.02178192138672</Y><Z>10.390134811401367</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4286251131</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-0.9815950989723206</X><Y>-0.4907975196838379</Y><Z>4.907975673675537</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>1.9631901979446411</X><Y>0.9815950989723206</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="164"><Properties><CoordinateFrame name="CFrame0"><X>-1.96319580078125</X><Y>-7.777679443359375</Y><Z>1.963134765625</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">163</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="165"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-65.135009765625</X><Y>25.003379821777344</Y><Z>10.390134811401367</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4280844103</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-0.9815950989723206</X><Y>-0.4907975196838379</Y><Z>4.907975673675537</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>1.9631901979446411</X><Y>0.9815950989723206</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="166"><Properties><CoordinateFrame name="CFrame0"><X>-1.96319580078125</X><Y>-8.75927734375</Y><Z>1.963134765625</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">165</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="167"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-65.135009765625</X><Y>25.98497772216797</Y><Z>10.390134811401367</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4278815183</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-0.9815950989723206</X><Y>-0.4907975196838379</Y><Z>4.907975673675537</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>1.9631901979446411</X><Y>0.9815950989723206</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="168"><Properties><CoordinateFrame name="CFrame0"><X>-1.96319580078125</X><Y>-9.740875244140625</Y><Z>1.963134765625</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">167</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="169"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-65.135009765625</X><Y>29.17516326904297</Y><Z>10.390134811401367</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4288651692</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-0.9815950989723206</X><Y>-2.6993865966796875</Y><Z>4.907975673675537</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>1.9631901979446411</X><Y>5.398773193359375</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="170"><Properties><CoordinateFrame name="CFrame0"><X>-1.96319580078125</X><Y>-12.931060791015625</Y><Z>1.963134765625</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">169</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="171"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130809274]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-65.135009765625</X><Y>31.874534606933594</Y><Z>10.390134811401367</Z><R00>-0.00008106231689453125</R00><R01>-0.00008106231689453125</R01><R02>-1</R02><R10>1</R10><R11>0.00008106231689453125</R11><R12>-0.00008106231689453125</R12><R20>0.00008106231689453125</R20><R21>-1</R21><R22>0.00008106231689453125</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4288651692</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-3.4355828762054443</X><Y>-0.9815950989723206</Y><Z>-6.871165752410889</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>6.871165752410889</X><Y>1.9631901979446411</Y><Z>1.9631901979446411</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="172"><Properties><CoordinateFrame name="CFrame0"><X>-15.63043212890625</X><Y>1.96319580078125</Y><Z>1.963134765625</Z><R00>-1.1920928955078125e-07</R00><R01>1.0000001192092896</R01><R02>0</R02><R10>-1.0000001192092896</R10><R11>-1.1920928955078125e-07</R11><R12>-0</R12><R20>-0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">171</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item></Item><Item class="MeshPart" referent="173"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-67.09814453125</X><Y>22.30400848388672</Y><Z>8.426939964294434</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4284177769</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-2.9447853565216064</X><Y>-4.171779155731201</Y><Z>14.723926544189453</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>5.889570713043213</X><Y>8.343558311462402</Y><Z>5.889570713043213</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="174"><Properties><CoordinateFrame name="CFrame0"><X>0</X><Y>-6.059906005859375</Y><Z>0</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">173</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="175"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-67.09814453125</X><Y>28.684349060058594</Y><Z>8.426939964294434</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4291480529</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-2.9447853565216064</X><Y>-2.2085890769958496</Y><Z>14.723926544189453</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>5.889570713043213</X><Y>4.417178153991699</Y><Z>5.889570713043213</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="176"><Properties><CoordinateFrame name="CFrame0"><X>0</X><Y>-12.44024658203125</Y><Z>0</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">175</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="177"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-67.09814453125</X><Y>52.978843688964844</Y><Z>8.426939964294434</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4284177769</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-2.9447853565216064</X><Y>-4.417178153991699</Y><Z>14.723926544189453</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>5.889570713043213</X><Y>8.834356307983398</Y><Z>5.889570713043213</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="178"><Properties><CoordinateFrame name="CFrame0"><X>0</X><Y>-36.7347412109375</Y><Z>0</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">177</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="179"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-67.09814453125</X><Y>44.144493103027344</Y><Z>8.426939964294434</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4291480529</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-2.9447853565216064</X><Y>-4.417178153991699</Y><Z>14.723926544189453</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>5.889570713043213</X><Y>8.834356307983398</Y><Z>5.889570713043213</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="180"><Properties><CoordinateFrame name="CFrame0"><X>0</X><Y>-27.900390625</Y><Z>0</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">179</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="181"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-67.09814453125</X><Y>35.310142517089844</Y><Z>8.426939964294434</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4284177769</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-2.9447853565216064</X><Y>-4.417178153991699</Y><Z>14.723926544189453</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>5.889570713043213</X><Y>8.834356307983398</Y><Z>5.889570713043213</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="182"><Properties><CoordinateFrame name="CFrame0"><X>0</X><Y>-19.0660400390625</Y><Z>0</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">181</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="183"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130809274]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-67.09814453125</X><Y>18.132225036621094</Y><Z>8.426939964294434</Z><R00>-0.00008106231689453125</R00><R01>-0.00008106231689453125</R01><R02>-1</R02><R10>1</R10><R11>0.00008106231689453125</R11><R12>-0.00008106231689453125</R12><R20>0.00008106231689453125</R20><R21>-1</R21><R22>0.00008106231689453125</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4284177769</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-1.9631901979446411</X><Y>-2.9447853565216064</Y><Z>-20.613496780395508</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>3.9263803958892822</X><Y>5.889570713043213</Y><Z>5.889570713043213</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="184"><Properties><CoordinateFrame name="CFrame0"><X>-1.88812255859375</X><Y>0</Y><Z>0</Z><R00>-1.1920928955078125e-07</R00><R01>1.0000001192092896</R01><R02>0</R02><R10>-1.0000001192092896</R10><R11>-1.1920928955078125e-07</R11><R12>-0</R12><R20>-0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">183</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="185"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130809274]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-67.09814453125</X><Y>57.396018981933594</Y><Z>8.426939964294434</Z><R00>-0.00008106231689453125</R00><R01>-0.00008106231689453125</R01><R02>-1</R02><R10>1</R10><R11>0.00008106231689453125</R11><R12>-0.00008106231689453125</R12><R20>0.00008106231689453125</R20><R21>-1</R21><R22>0.00008106231689453125</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4291677645</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-0.4907975494861603</X><Y>-3.4355828762054443</Y><Z>-24.04907989501953</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>0.9815950989723206</X><Y>6.871165752410889</Y><Z>6.871165752410889</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="186"><Properties><CoordinateFrame name="CFrame0"><X>-41.15191650390625</X><Y>0</Y><Z>0</Z><R00>-1.1920928955078125e-07</R00><R01>1.0000001192092896</R01><R02>0</R02><R10>-1.0000001192092896</R10><R11>-1.1920928955078125e-07</R11><R12>-0</R12><R20>-0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">185</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="187"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130809274]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-67.09814453125</X><Y>57.396018981933594</Y><Z>8.426939964294434</Z><R00>-0.00008106231689453125</R00><R01>-0.00008106231689453125</R01><R02>-1</R02><R10>1</R10><R11>0.00008106231689453125</R11><R12>-0.00008106231689453125</R12><R20>0.00008106231689453125</R20><R21>-1</R21><R22>0.00008106231689453125</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4291677645</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-5.889570713043213</X><Y>-2.9447853565216064</Y><Z>-20.613496780395508</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>11.779141426086426</X><Y>5.889570713043213</Y><Z>5.889570713043213</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="188"><Properties><CoordinateFrame name="CFrame0"><X>-41.15191650390625</X><Y>0</Y><Z>0</Z><R00>-1.1920928955078125e-07</R00><R01>1.0000001192092896</R01><R02>0</R02><R10>-1.0000001192092896</R10><R11>-1.1920928955078125e-07</R11><R12>-0</R12><R20>-0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">187</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="189"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-67.09814453125</X><Y>60.586204528808594</Y><Z>8.426939964294434</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4291677645</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-2.4539878368377686</X><Y>-4.662576675415039</Y><Z>12.269938468933105</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>4.907975673675537</X><Y>9.325153350830078</Y><Z>4.907975673675537</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="190"><Properties><CoordinateFrame name="CFrame0"><X>0</X><Y>-44.34210205078125</Y><Z>0</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">189</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="191"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-67.09814453125</X><Y>65.49417114257812</Y><Z>8.426939964294434</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4284702562</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-2.4539878368377686</X><Y>-0.24539880454540253</Y><Z>12.269938468933105</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>4.907975673675537</X><Y>0.4907975494861603</Y><Z>4.907975673675537</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="192"><Properties><CoordinateFrame name="CFrame0"><X>0</X><Y>-49.25006866455078</Y><Z>0</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">191</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="193"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-67.09814453125</X><Y>71.13836669921875</Y><Z>8.426939964294434</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4291677645</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-2.4539878368377686</X><Y>-5.398773193359375</Y><Z>12.269938468933105</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>4.907975673675537</X><Y>10.79754638671875</Y><Z>4.907975673675537</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="194"><Properties><CoordinateFrame name="CFrame0"><X>0</X><Y>-54.894264221191406</Y><Z>0</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">193</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="195"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130809274]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-67.09814453125</X><Y>76.53713989257812</Y><Z>8.426939964294434</Z><R00>-0.00008106231689453125</R00><R01>-0.00008106231689453125</R01><R02>-1</R02><R10>1</R10><R11>0.00008106231689453125</R11><R12>-0.00008106231689453125</R12><R20>0.00008106231689453125</R20><R21>-1</R21><R22>0.00008106231689453125</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4291677645</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-1.4723926782608032</X><Y>-2.9447853565216064</Y><Z>-20.613496780395508</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>2.9447853565216064</X><Y>5.889570713043213</Y><Z>5.889570713043213</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="196"><Properties><CoordinateFrame name="CFrame0"><X>-60.29303741455078</X><Y>0</Y><Z>0</Z><R00>-1.1920928955078125e-07</R00><R01>1.0000001192092896</R01><R02>0</R02><R10>-1.0000001192092896</R10><R11>-1.1920928955078125e-07</R11><R12>-0</R12><R20>-0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">195</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="197"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130782945]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-67.09814453125</X><Y>79.48190307617188</Y><Z>8.426939964294434</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4291677645</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-2.9447853565216064</X><Y>-2.9447853565216064</Y><Z>14.72392749786377</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>5.889570713043213</X><Y>5.889570713043213</Y><Z>5.889570713043213</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="198"><Properties><CoordinateFrame name="CFrame0"><X>0</X><Y>-63.23780059814453</Y><Z>0</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">197</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="199"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130809274]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-67.09814453125</X><Y>82.42669677734375</Y><Z>8.426939964294434</Z><R00>-0.00008106231689453125</R00><R01>-0.00008106231689453125</R01><R02>-1</R02><R10>1</R10><R11>0.00008106231689453125</R11><R12>-0.00008106231689453125</R12><R20>0.00008106231689453125</R20><R21>-1</R21><R22>0.00008106231689453125</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4291677645</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-6.380368232727051</X><Y>-2.9447853565216064</Y><Z>-20.613496780395508</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>12.760736465454102</X><Y>5.889570713043213</Y><Z>5.889570713043213</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="200"><Properties><CoordinateFrame name="CFrame0"><X>-66.1825942993164</X><Y>0</Y><Z>0</Z><R00>-1.1920928955078125e-07</R00><R01>1.0000001192092896</R01><R02>0</R02><R10>-1.0000001192092896</R10><R11>-1.1920928955078125e-07</R11><R12>-0</R12><R20>-0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">199</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="MeshPart" referent="201"><Properties><Vector3 name="InitialSize"><X>2</X><Y>2</Y><Z>2</Z></Vector3><Content name="MeshId"><url><![CDATA[rbxassetid://7130809274]]></url></Content><int name="VertexCount">0</int><token name="FluidFidelityInternal">0</token><Vector3 name="UnscaledCofm"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><Vector3 name="UnscaledVolInertiaOffDiags"><X>nan</X><Y>nan</Y><Z>nan</Z></Vector3><float name="UnscaledVolume">NAN</float><CoordinateFrame name="CFrame"><X>-67.09814453125</X><Y>82.42669677734375</Y><Z>8.426939964294434</Z><R00>-0.00008106231689453125</R00><R01>-0.00008106231689453125</R01><R02>-1</R02><R10>1</R10><R11>0.00008106231689453125</R11><R12>-0.00008106231689453125</R12><R20>0.00008106231689453125</R20><R21>-1</R21><R22>0.00008106231689453125</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><Color3uint8 name="Color3uint8">4291677645</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><CoordinateFrame name="PivotOffset"><X>-11.28834342956543</X><Y>-2.4539878368377686</Y><Z>-17.177913665771484</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Vector3 name="size"><X>22.57668685913086</X><Y>4.907975673675537</Y><Z>4.907975673675537</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="202"><Properties><CoordinateFrame name="CFrame0"><X>-66.1825942993164</X><Y>0</Y><Z>0</Z><R00>-1.1920928955078125e-07</R00><R01>1.0000001192092896</R01><R02>0</R02><R10>-1.0000001192092896</R10><R11>-1.1920928955078125e-07</R11><R12>-0</R12><R20>-0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">201</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="Part" referent="203"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>-67.08821105957031</X><Y>70.64755249023438</Y><Z>9.08135986328125</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4286251131</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><Vector3 name="size"><X>0.6543967723846436</X><Y>1.308793544769287</Y><Z>4.935174465179443</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="204"><Properties><CoordinateFrame name="CFrame0"><X>-0.6544198989868164</X><Y>-54.40345001220703</Y><Z>0.0099334716796875</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">203</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="Part" referent="205"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>-67.08820343017578</X><Y>70.64755249023438</Y><Z>8.426939964294434</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4280844103</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><Vector3 name="size"><X>0.6543967723846436</X><Y>1.308793544769287</Y><Z>4.935174465179443</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="206"><Properties><CoordinateFrame name="CFrame0"><X>0</X><Y>-54.40345001220703</Y><Z>0.00994110107421875</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">205</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="Part" referent="207"><Properties><token name="shape">1</token><token name="formFactorRaw">1</token><token name="BottomSurface">0</token><CoordinateFrame name="CFrame"><X>-67.08820343017578</X><Y>70.64755249023438</Y><Z>7.77252197265625</Z><R00>-1.1920928955078125e-07</R00><R01>-0</R01><R02>-1.0000001192092896</R02><R10>0</R10><R11>1</R11><R12>-0</R12><R20>1.0000001192092896</R20><R21>0</R21><R22>-1.1920928955078125e-07</R22></CoordinateFrame><bool name="CanCollide">false</bool><bool name="CanTouch">false</bool><bool name="CastShadow">false</bool><Color3uint8 name="Color3uint8">4278815183</Color3uint8><bool name="EnableFluidForces">false</bool><token name="Material">1088</token><string name="MaterialVariantSerialized"></string><token name="TopSurface">0</token><Vector3 name="size"><X>0.6543967723846436</X><Y>1.308793544769287</Y><Z>4.935174465179443</Z></Vector3><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="WeldConstraint" referent="208"><Properties><CoordinateFrame name="CFrame0"><X>0.6544179916381836</X><Y>-54.40345001220703</Y><Z>0.00994110107421875</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><Ref name="Part0Internal">207</Ref><Ref name="Part1Internal">87</Ref><int name="State">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item></Item></Item><Item class="Folder" referent="209"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[DefaultChatSystemChatEvents]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="RemoteEvent" referent="210"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[OnNewMessage]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="RemoteEvent" referent="211"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[OnMessageDoneFiltering]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="RemoteEvent" referent="212"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[OnNewSystemMessage]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="RemoteEvent" referent="213"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[OnChannelJoined]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="RemoteEvent" referent="214"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[OnChannelLeft]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="RemoteEvent" referent="215"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[OnMuted]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="RemoteEvent" referent="216"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[OnUnmuted]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="RemoteEvent" referent="217"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[OnMainChannelSet]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="RemoteEvent" referent="218"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ChannelNameColorUpdated]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="RemoteEvent" referent="219"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[SayMessageRequest]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="RemoteEvent" referent="220"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[SetBlockedUserIdsRequest]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="RemoteFunction" referent="221"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[GetInitDataRequest]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="RemoteFunction" referent="222"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[MutePlayerRequest]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="RemoteFunction" referent="223"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[UnMutePlayerRequest]]></string><BinaryString name="Tags"></BinaryString></Properties></Item></Item></Item><Item class="StarterGui" referent="224"><Properties><bool name="ResetPlayerGuiOnSpawn">true</bool><token name="RtlTextSupport">0</token><token name="ScreenOrientation">4</token><bool name="ShowDevelopmentGui">false</bool><token name="VirtualCursorMode">0</token><BinaryString name="AttributesSerialize"></BinaryString><SecurityCapabilities name="Capabilities">0</SecurityCapabilities><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[StarterGui]]></string><int64 name="SourceAssetId">-1</int64><BinaryString name="Tags"></BinaryString></Properties><Item class="ScreenGui" referent="225"><Properties><bool name="Enabled">false</bool><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Inventory]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="LocalScript" referent="226"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1 = game:GetService("StarterGui")
local u2 = game:GetService("GuiService")
local u3 = game:GetService("UserInputService")
local u4 = game:GetService("TweenService")
local u5 = game:GetService("ReplicatedStorage")
local u6 = u5:WaitForChild("Remotes")
local u7 = game.Players.LocalPlayer
local u8 = u7:WaitForChild("PlayerInfoFolder")
local u9 = u8:WaitForChild("ItemFolder")
local u10 = u7.Character
local u11 = u10:WaitForChild("Humanoid")
local v12 = script.Parent:WaitForChild("DropItem")
local u13 = require(u5.RagdollFolder:WaitForChild("Ragdoll"))
local u14 = true
if not game:IsLoaded() then
    game.Loaded:Wait()
end
v1:SetCoreGuiEnabled(Enum.CoreGuiType.EmotesMenu, false)
v1:SetCoreGuiEnabled(Enum.CoreGuiType.Backpack, false)
function getPlatform()
    --[[
    Upvalues:
        [1] = u2
        [2] = u3
    --]]
    return u2:IsTenFootInterface() and "Console" or (u3.TouchEnabled and not u3.MouseEnabled and "Mobile" or "Desktop")
end
local v15 = getPlatform()
if v15 == "Desktop" then
    v12.DeviceImage.Visible = true
    v12.DeviceImage.Image = "rbxassetid://1771822015"
elseif v15 == "Console" then
    v12.DeviceImage.Visible = true
    v12.DeviceImage.Image = "rbxassetid://3202649863"
elseif v15 == "Mobile" then
    v12.DeviceImage.Visible = false
end
local v16 = workspace:WaitForChild("ItemFolder")
for _, v17 in pairs(v16:GetChildren()) do
    if v17:IsA("Model") and v17:FindFirstChild("DelTag") then
        v17:Destroy()
    end
end
local u18 = nil
local u19 = false
local u20 = {}
u9.ChildAdded:Connect(function(p21) --[[Anonymous function at line 75]]
    --[[
    Upvalues:
        [1] = u18
        [2] = u20
        [3] = u9
        [4] = u7
        [5] = u19
        [6] = u4
        [7] = u6
        [8] = u14
    --]]
    if not u18 or u18 ~= p21 then
        for _, v22 in pairs(u20) do
            if v22:IsA("ProximityPrompt") then
                v22:Destroy()
            end
        end
        script.Parent.Interact:Play()
        local v23 = nil
        local u24 = nil
        for _, v25 in pairs(u9:GetChildren()) do
            if v25 ~= p21 then
                v25:Destroy()
                if script.Parent.ToolBar.ViewportFrame:FindFirstChildOfClass("Model") then
                    script.Parent.ToolBar.ViewportFrame:FindFirstChildOfClass("Model"):Destroy()
                end
                if script.Parent.ToolBar.ViewportFrame:FindFirstChild("vpfcam") then
                    script.Parent.ToolBar.ViewportFrame.vpfcam:Destroy()
                end
            end
        end
        if p21:IsA("Tool") and (u7.Character and (u7.Character:FindFirstChild("Humanoid") and u7.Character.Humanoid.Health > 0)) then
            local v26 = p21:Clone()
            u24 = p21:Clone()
            u18 = u24
            u24.Parent = u9
            u7.Character.Humanoid:EquipTool(u24)
            local v27 = Instance.new("Model")
            v27.Name = p21.Name
            for _, v28 in pairs(v26:GetDescendants()) do
                if v28:IsA("BasePart") then
                    v28.Parent = v27
                end
            end
            v26:Destroy()
            v23 = v27:Clone()
        elseif p21:IsA("Model") then
            v23 = p21:Clone()
            u24 = p21:Clone()
            u18 = u24
            u24.Parent = u9
            if u19 then
                u19 = false
                local v29 = {
                    ["BackgroundColor3"] = Color3.fromRGB(255, 255, 255)
                }
                local v30 = {
                    ["BackgroundColor3"] = Color3.fromRGB(143, 143, 143)
                }
                u4:Create(script.Parent.ToolBar, TweenInfo.new(1), v29):Play()
                u4:Create(script.Parent.ToolBar.NameFrame.Frame, TweenInfo.new(1), v29):Play()
                u4:Create(script.Parent.ToolBar.NameFrame, TweenInfo.new(1), v30):Play()
            end
            if u24:FindFirstChild("Item") then
                if not u19 then
                    u19 = true
                    local v31 = {
                        ["BackgroundColor3"] = Color3.fromRGB(255, 0, 0)
                    }
                    local v32 = {
                        ["BackgroundColor3"] = Color3.fromRGB(170, 0, 0)
                    }
                    u4:Create(script.Parent.ToolBar, TweenInfo.new(1), v31):Play()
                    u4:Create(script.Parent.ToolBar.NameFrame.Frame, TweenInfo.new(1), v31):Play()
                    u4:Create(script.Parent.ToolBar.NameFrame, TweenInfo.new(1), v32):Play()
                end
                for _, u33 in pairs(game.Players:GetPlayers()) do
                    if u33:IsA("Player") and (u33.Character and (u33.Character.PrimaryPart and u33 ~= u7)) then
                        local u34 = Instance.new("ProximityPrompt")
                        u34.Name = "Target"
                        u34.ObjectText = u33.Name
                        u34.ClickablePrompt = true
                        u34.Enabled = true
                        u34.Exclusivity = Enum.ProximityPromptExclusivity.OnePerButton
                        u34.GamepadKeyCode = Enum.KeyCode.ButtonX
                        u34.HoldDuration = 0
                        u34.KeyboardKeyCode = Enum.KeyCode.E
                        if u24.Name == "Swap" then
                            u34.MaxActivationDistance = 25
                        end
                        u34.RequiresLineOfSight = false
                        u34.Style = Enum.ProximityPromptStyle.Custom
                        u34.ActionText = "Use " .. u24.Name
                        u34.Parent = u33.Character.PrimaryPart
                        local v35 = u20
                        table.insert(v35, u34)
                        u34.Triggered:Connect(function(p36) --[[Anonymous function at line 165]]
                            --[[
                            Upvalues:
                                [1] = u24
                                [2] = u33
                                [3] = u34
                                [4] = u20
                                [5] = u6
                                [6] = u9
                            --]]
                            if u24 and (u24.Name and (p36 and (p36.Character and (u33 and u33.Character)))) then
                                u34.Enabled = false
                                for _, v37 in pairs(u20) do
                                    if v37:IsA("ProximityPrompt") then
                                        v37.Enabled = false
                                    end
                                end
                                if u6.ToolFunc:InvokeServer(u33, u24.Name) then
                                    for _, v38 in pairs(u20) do
                                        if v38:IsA("ProximityPrompt") then
                                            v38:Destroy()
                                        end
                                    end
                                    u9:ClearAllChildren()
                                end
                            end
                        end)
                    end
                end
            end
        end
        v23.Parent = script.Parent.ToolBar.ViewportFrame
        script.Parent.ToolBar.NameFrame.ToolName.Text = u24.Name
        if script.Parent.DropItem.Visible or u24:FindFirstChild("Item") then
            if script.Parent.DropItem.Visible and u24:FindFirstChild("Item") then
                script.Parent.DropItem:TweenPosition(UDim2.new(0.554, 0, 1, 0), Enum.EasingDirection.InOut, Enum.EasingStyle.Quint, 0.2, true)
                script.Parent.DropItem.Visible = false
            end
        else
            script.Parent.DropItem.Visible = true
            script.Parent.DropItem:TweenPosition(UDim2.new(0.554, 0, 0.87, 0), Enum.EasingDirection.InOut, Enum.EasingStyle.Quint, 0.35, true)
        end
        if u14 then
            u14 = false
            script.Parent.ToolBar.Visible = true
            script.Parent.ToolBar:TweenPosition(UDim2.new(0.461, 0, 0.846, 0), Enum.EasingDirection.InOut, Enum.EasingStyle.Quint, 0.25, true)
        end
        wait()
        p21:Destroy()
    end
end)
u9.ChildRemoved:Connect(function(_) --[[Anonymous function at line 224]]
    --[[
    Upvalues:
        [1] = u14
        [2] = u9
    --]]
    if not u14 and #u9:GetChildren() <= 0 then
        script.Parent.ToolBar.NameFrame.ToolName.Text = "N/A"
        if script.Parent.ToolBar.ViewportFrame:FindFirstChildOfClass("Model") then
            script.Parent.ToolBar.ViewportFrame:FindFirstChildOfClass("Model"):Destroy()
        end
        if script.Parent.ToolBar.ViewportFrame:FindFirstChild("vpfcam") then
            script.Parent.ToolBar.ViewportFrame.vpfcam:Destroy()
        end
        u14 = true
        script.Parent.ToolBar:TweenPosition(UDim2.new(0.461, 0, 1, 0), Enum.EasingDirection.InOut, Enum.EasingStyle.Quint, 0.25, true)
        script.Parent.DropItem:TweenPosition(UDim2.new(0.554, 0, 1, 0), Enum.EasingDirection.InOut, Enum.EasingStyle.Quint, 0.2, true)
        wait(0.25)
        if u14 then
            script.Parent.ToolBar.Visible = false
            script.Parent.DropItem.Visible = false
        end
    end
end)
u11.Died:Connect(function() --[[Anonymous function at line 244]]
    --[[
    Upvalues:
        [1] = u13
        [2] = u10
        [3] = u11
    --]]
    u13(u10, u11)
end)
local function u48() --[[Anonymous function at line 248]]
    --[[
    Upvalues:
        [1] = u7
        [2] = u8
        [3] = u9
        [4] = u5
        [5] = u4
    --]]
    if u7 and (u7:FindFirstChild("PlayerInfoFolder") and u8:FindFirstChild("ItemFolder")) then
        local v39 = {}
        for _, v40 in pairs(u9:GetChildren()) do
            if not v40:FindFirstChild("Enemy") then
                table.insert(v39, v40)
            end
        end
        local v41
        if #v39 > 0 then
            v41 = v39[1]
        else
            v41 = nil
        end
        if v41 and (not v41:FindFirstChild("Item") and u7) then
            local v42, v43 = u5.Remotes.DropItem:InvokeServer()
            if v42 then
                u9:ClearAllChildren()
                script.Parent.Interact:Play()
                for _, v44 in pairs(v43:GetChildren()) do
                    if v44:IsA("BasePart") then
                        v44.Transparency = 0
                    elseif v44:IsA("ProximityPrompt") then
                        v44.MaxActivationDistance = 8
                    end
                end
                return
            end
            local v45 = Instance.new("TextLabel")
            v45.Text = "Item cannot be dropped here!"
            v45.BackgroundTransparency = 1
            v45.Position = UDim2.new(-0.5, 0, -0.3, 0)
            v45.Size = UDim2.new(2, 0, 0.3, 0)
            v45.TextColor3 = Color3.fromRGB(255, 0, 0)
            v45.Font = Enum.Font.GothamBlack
            v45.TextScaled = true
            v45.RichText = true
            v45.TextTransparency = 0
            v45.TextStrokeTransparency = 0
            v45.Parent = script.Parent.ToolBar
            v45.Visible = true
            local v46 = {
                ["TextTransparency"] = 0,
                ["TextStrokeTransparency"] = 0,
                ["Position"] = UDim2.new(-0.5, 0, -0.6, 0)
            }
            local v47 = u4:Create(v45, TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, true), v46)
            v47:Play()
            wait(2)
            v47:Cancel()
            v45:Destroy()
        end
    end
end
v12.ImageButton.MouseButton1Click:Connect(u48)
u3.InputBegan:Connect(function(p49, p50) --[[Anonymous function at line 307]]
    --[[
    Upvalues:
        [1] = u48
    --]]
    if p50 or p49.UserInputType ~= Enum.UserInputType.Keyboard then
        if not p50 and (p49.UserInputType == Enum.UserInputType.Gamepad1 and p49.KeyCode == Enum.KeyCode.ButtonY) then
            u48()
        end
    elseif p49.KeyCode == Enum.KeyCode.Q then
        u48()
        return
    end
end)
u6:FindFirstChild("PickUpEvent").OnClientEvent:Connect(function(p51, p52) --[[Anonymous function at line 321]]
    --[[
    Upvalues:
        [1] = u7
        [2] = u4
    --]]
    if u7 and (not p51 and p52) then
        local v53 = Instance.new("TextLabel")
        v53.Text = p52
        v53.BackgroundTransparency = 1
        v53.Position = UDim2.new(-0.5, 0, -0.3, 0)
        v53.Size = UDim2.new(2, 0, 0.3, 0)
        v53.TextColor3 = Color3.fromRGB(255, 0, 0)
        v53.Font = Enum.Font.GothamBlack
        v53.TextScaled = true
        v53.RichText = true
        v53.TextTransparency = 0
        v53.TextStrokeTransparency = 0
        v53.Text = p52
        v53.Parent = script.Parent.ToolBar
        v53.Visible = true
        local v54 = {
            ["TextTransparency"] = 0,
            ["TextStrokeTransparency"] = 0,
            ["Position"] = UDim2.new(-0.5, 0, -0.6, 0)
        }
        local v55 = u4:Create(v53, TweenInfo.new(1, Enum.EasingStyle.Quad, Enum.EasingDirection.Out, 0, true), v54)
        v55:Play()
        wait(2)
        v55:Cancel()
        v53:Destroy()
    elseif u7 and (p51 and (p52 and p52:IsA("Model"))) then
        p52:Destroy()
    end
end)]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="LocalScript" referent="227"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local u1 = game:GetService("UserInputService")
local v2 = game:GetService("ProximityPromptService")
local u3 = game:GetService("TweenService")
local u4 = game:GetService("TextService")
local u5 = game:GetService("Players").LocalPlayer:WaitForChild("PlayerGui")
local u6 = {
    [Enum.KeyCode.ButtonX] = "rbxasset://textures/ui/Controls/xboxX.png",
    [Enum.KeyCode.ButtonY] = "rbxasset://textures/ui/Controls/xboxY.png",
    [Enum.KeyCode.ButtonA] = "rbxasset://textures/ui/Controls/xboxA.png",
    [Enum.KeyCode.ButtonB] = "rbxasset://textures/ui/Controls/xboxB.png",
    [Enum.KeyCode.DPadLeft] = "rbxasset://textures/ui/Controls/dpadLeft.png",
    [Enum.KeyCode.DPadRight] = "rbxasset://textures/ui/Controls/dpadRight.png",
    [Enum.KeyCode.DPadUp] = "rbxasset://textures/ui/Controls/dpadUp.png",
    [Enum.KeyCode.DPadDown] = "rbxasset://textures/ui/Controls/dpadDown.png",
    [Enum.KeyCode.ButtonSelect] = "rbxasset://textures/ui/Controls/xboxmenu.png",
    [Enum.KeyCode.ButtonL1] = "rbxasset://textures/ui/Controls/xboxLS.png",
    [Enum.KeyCode.ButtonR1] = "rbxasset://textures/ui/Controls/xboxRS.png"
}
local u7 = {
    [Enum.KeyCode.Backspace] = "rbxasset://textures/ui/Controls/backspace.png",
    [Enum.KeyCode.Return] = "rbxasset://textures/ui/Controls/return.png",
    [Enum.KeyCode.LeftShift] = "rbxasset://textures/ui/Controls/shift.png",
    [Enum.KeyCode.RightShift] = "rbxasset://textures/ui/Controls/shift.png",
    [Enum.KeyCode.Tab] = "rbxasset://textures/ui/Controls/tab.png"
}
local u8 = {
    ["\'"] = "rbxasset://textures/ui/Controls/apostrophe.png",
    [","] = "rbxasset://textures/ui/Controls/comma.png",
    ["`"] = "rbxasset://textures/ui/Controls/graveaccent.png",
    ["."] = "rbxasset://textures/ui/Controls/period.png",
    [" "] = "rbxasset://textures/ui/Controls/spacebar.png"
}
local u9 = {
    [Enum.KeyCode.LeftControl] = "Ctrl",
    [Enum.KeyCode.RightControl] = "Ctrl",
    [Enum.KeyCode.LeftAlt] = "Alt",
    [Enum.KeyCode.RightAlt] = "Alt",
    [Enum.KeyCode.F1] = "F1",
    [Enum.KeyCode.F2] = "F2",
    [Enum.KeyCode.F3] = "F3",
    [Enum.KeyCode.F4] = "F4",
    [Enum.KeyCode.F5] = "F5",
    [Enum.KeyCode.F6] = "F6",
    [Enum.KeyCode.F7] = "F7",
    [Enum.KeyCode.F8] = "F8",
    [Enum.KeyCode.F9] = "F9",
    [Enum.KeyCode.F10] = "F10",
    [Enum.KeyCode.F11] = "F11",
    [Enum.KeyCode.F12] = "F12"
}
local function u15(p10, p11) --[[Anonymous function at line 71]]
    local v12 = Instance.new("Frame")
    v12.Size = UDim2.fromScale(0.5, 1)
    v12.Position = UDim2.fromScale(p11 and 0 or 0.5, 0)
    v12.BackgroundTransparency = 1
    v12.ClipsDescendants = true
    v12.Parent = p10
    local v13 = Instance.new("ImageLabel")
    v13.BackgroundTransparency = 1
    v13.Size = UDim2.fromScale(2, 1)
    v13.Position = UDim2.fromScale(p11 and 0 or -1, 0)
    v13.Image = "rbxasset://textures/ui/Controls/RadialFill.png"
    v13.Parent = v12
    local v14 = Instance.new("UIGradient")
    v14.Transparency = NumberSequence.new({
        NumberSequenceKeypoint.new(0, 0),
        NumberSequenceKeypoint.new(0.4999, 0),
        NumberSequenceKeypoint.new(0.5, 1),
        NumberSequenceKeypoint.new(1, 1)
    })
    v14.Rotation = p11 and 180 or 0
    v14.Parent = v13
    return v14
end
local function u23() --[[Anonymous function at line 99]]
    --[[
    Upvalues:
        [1] = u15
    --]]
    local v16 = Instance.new("Frame")
    v16.Name = "CircularProgressBar"
    v16.Size = UDim2.fromOffset(58, 58)
    v16.AnchorPoint = Vector2.new(0.5, 0.5)
    v16.Position = UDim2.fromScale(0.5, 0.5)
    v16.BackgroundTransparency = 1
    local u17 = u15(v16, true)
    local u18 = u15(v16, false)
    local v19 = Instance.new("NumberValue")
    v19.Name = "Progress"
    v19.Parent = v16
    v19.Changed:Connect(function(p20) --[[Anonymous function at line 113]]
        --[[
        Upvalues:
            [1] = u17
            [2] = u18
        --]]
        local v21 = p20 * 360
        local v22 = math.clamp(v21, 0, 360)
        u17.Rotation = math.clamp(v22, 180, 360)
        u18.Rotation = math.clamp(v22, 0, 180)
    end)
    return v16
end
local function u119(u24, p25, p26) --[[Anonymous function at line 122]]
    --[[
    Upvalues:
        [1] = u3
        [2] = u6
        [3] = u1
        [4] = u7
        [5] = u8
        [6] = u9
        [7] = u23
        [8] = u4
    --]]
    local u27 = {}
    local u28 = {}
    local u29 = {}
    local u30 = {}
    local v31 = TweenInfo.new(u24.HoldDuration, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
    local v32 = TweenInfo.new(0.5, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local v33 = TweenInfo.new(0.2, Enum.EasingStyle.Quad, Enum.EasingDirection.Out)
    local v34 = TweenInfo.new(0.06, Enum.EasingStyle.Linear, Enum.EasingDirection.Out)
    local u35 = Instance.new("BillboardGui")
    u35.Name = "Prompt"
    u35.AlwaysOnTop = true
    local v36 = Instance.new("Frame")
    v36.Size = UDim2.fromScale(0.5, 1)
    v36.BackgroundTransparency = 1
    v36.Parent = u35
    local v37 = Instance.new("Frame")
    v37.Name = "InputFrame"
    v37.Size = UDim2.fromScale(1, 1)
    v37.BackgroundTransparency = 1
    v37.SizeConstraint = Enum.SizeConstraint.RelativeYY
    v37.Parent = v36
    local v38 = Instance.new("Frame")
    v38.Size = UDim2.fromScale(1, 1)
    v38.Position = UDim2.fromScale(0.5, 0.5)
    v38.AnchorPoint = Vector2.new(0.5, 0.5)
    v38.BackgroundTransparency = 1
    v38.Parent = v37
    local v39 = Instance.new("UIScale")
    v39.Parent = v38
    local v40 = p25 == Enum.ProximityPromptInputType.Touch and 1.6 or 1.33
    local v41 = u3
    table.insert(u27, v41:Create(v39, v33, {
        ["Scale"] = v40
    }))
    local v42 = u3
    table.insert(u28, v42:Create(v39, v33, {
        ["Scale"] = 1
    }))
    local u43 = Instance.new("TextLabel")
    u43.Name = "ActionText"
    u43.Size = UDim2.fromScale(1, 1)
    u43.Font = Enum.Font.SpecialElite
    u43.TextSize = 19
    u43.BackgroundTransparency = 1
    u43.TextTransparency = 1
    u43.TextColor3 = Color3.new(1, 1, 1)
    if u24.Name == "Target" then
        u43.TextColor3 = Color3.new(1, 0, 0)
    end
    u43.TextXAlignment = Enum.TextXAlignment.Left
    u43.Parent = v36
    local v44 = u3
    table.insert(u27, v44:Create(u43, v33, {
        ["TextTransparency"] = 1,
        ["TextStrokeTransparency"] = 1
    }))
    local v45 = u3
    table.insert(u28, v45:Create(u43, v33, {
        ["TextTransparency"] = 0,
        ["TextStrokeTransparency"] = 0
    }))
    local v46 = u3
    table.insert(u29, v46:Create(u43, v33, {
        ["TextTransparency"] = 1,
        ["TextStrokeTransparency"] = 1
    }))
    local v47 = u3
    table.insert(u30, v47:Create(u43, v33, {
        ["TextTransparency"] = 0,
        ["TextStrokeTransparency"] = 0
    }))
    local u48 = Instance.new("TextLabel")
    u48.Name = "ObjectText"
    u48.Size = UDim2.fromScale(1, 1)
    u48.Font = Enum.Font.SpecialElite
    u48.TextSize = 14
    u48.BackgroundTransparency = 1
    u48.TextTransparency = 1
    u48.TextStrokeTransparency = 1
    u48.TextColor3 = Color3.new(0.8, 0.8, 0.8)
    u48.TextXAlignment = Enum.TextXAlignment.Left
    u48.Parent = v36
    local v49 = u3
    table.insert(u27, v49:Create(u48, v33, {
        ["TextTransparency"] = 1,
        ["TextStrokeTransparency"] = 1
    }))
    local v50 = u3
    table.insert(u28, v50:Create(u48, v33, {
        ["TextTransparency"] = 0,
        ["TextStrokeTransparency"] = 0
    }))
    local v51 = u3
    table.insert(u29, v51:Create(u48, v33, {
        ["TextTransparency"] = 1,
        ["TextStrokeTransparency"] = 1
    }))
    local v52 = u3
    table.insert(u30, v52:Create(u48, v33, {
        ["TextTransparency"] = 0,
        ["TextStrokeTransparency"] = 0
    }))
    local v53 = u3
    local v54 = {
        ["Size"] = UDim2.fromScale(0.5, 1)
    }
    table.insert(u27, v53:Create(v36, v33, v54))
    local v55 = u3
    local v56 = {
        ["Size"] = UDim2.fromScale(1, 1)
    }
    table.insert(u28, v55:Create(v36, v33, v56))
    local v57 = u3
    local v58 = {
        ["Size"] = UDim2.fromScale(0.5, 1)
    }
    table.insert(u29, v57:Create(v36, v33, v58))
    local v59 = u3
    local v60 = {
        ["Size"] = UDim2.fromScale(1, 1)
    }
    table.insert(u30, v59:Create(v36, v33, v60))
    local v61 = Instance.new("Frame")
    v61.Name = "RoundFrame1"
    v61.Size = UDim2.fromOffset(58, 58)
    v61.AnchorPoint = Vector2.new(0.5, 0.5)
    v61.Position = UDim2.fromScale(0.5, 0.5)
    v61.BackgroundTransparency = 1
    v61.BackgroundColor3 = Color3.fromRGB(255, 255, 255)
    if u24.Name == "Target" then
        v61.BackgroundColor3 = Color3.new(1, 0, 0)
    end
    v61.Parent = v38
    local v62 = Instance.new("UICorner")
    v62.CornerRadius = UDim.new(0.5, 0)
    local v63 = Instance.new("UIGradient")
    v63.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0, Color3.fromRGB(202, 202, 202)), ColorSequenceKeypoint.new(1, Color3.fromRGB(67, 67, 67)) })
    v63.Rotation = 90
    v63.Parent = v61
    v62.Parent = v61
    local v64 = u3
    table.insert(u29, v64:Create(v61, v34, {
        ["BackgroundTransparency"] = 1
    }))
    local v65 = u3
    table.insert(u30, v65:Create(v61, v34, {
        ["BackgroundTransparency"] = 0.2
    }))
    local v66 = Instance.new("Frame")
    v66.Name = "RoundFrame"
    v66.Size = UDim2.fromOffset(48, 48)
    v66.AnchorPoint = Vector2.new(0.5, 0.5)
    v66.Position = UDim2.fromScale(0.5, 0.5)
    v66.BackgroundTransparency = 1
    v66.Parent = v38
    if u24.Name == "Target" then
        v66.BackgroundColor3 = Color3.new(1, 0, 0)
    end
    local v67 = Instance.new("UICorner")
    v67.CornerRadius = UDim.new(0.5, 0)
    local v68 = Instance.new("UIGradient")
    v68.Color = ColorSequence.new({ ColorSequenceKeypoint.new(0, Color3.fromRGB(255, 255, 255)), ColorSequenceKeypoint.new(1, Color3.fromRGB(0, 0, 0)) })
    v68.Rotation = 270
    v68.Parent = v61
    v67.Parent = v66
    local v69 = u3
    table.insert(u29, v69:Create(v66, v34, {
        ["BackgroundTransparency"] = 1
    }))
    local v70 = u3
    table.insert(u30, v70:Create(v66, v34, {
        ["BackgroundTransparency"] = 0.2
    }))
    if p25 == Enum.ProximityPromptInputType.Gamepad then
        if u6[u24.GamepadKeyCode] then
            local v71 = Instance.new("ImageLabel")
            v71.Name = "ButtonImage"
            v71.AnchorPoint = Vector2.new(0.5, 0.5)
            v71.Size = UDim2.fromOffset(24, 24)
            v71.Position = UDim2.fromScale(0.5, 0.5)
            v71.BackgroundTransparency = 1
            v71.ImageTransparency = 1
            v71.Image = u6[u24.GamepadKeyCode]
            v71.Parent = v38
            local v72 = u3
            table.insert(u29, v72:Create(v71, v34, {
                ["ImageTransparency"] = 1
            }))
            local v73 = u3
            table.insert(u30, v73:Create(v71, v34, {
                ["ImageTransparency"] = 0
            }))
        end
    elseif p25 == Enum.ProximityPromptInputType.Touch then
        local v74 = Instance.new("ImageLabel")
        v74.Name = "ButtonImage"
        v74.BackgroundTransparency = 1
        v74.ImageTransparency = 1
        v74.Size = UDim2.fromOffset(25, 31)
        v74.AnchorPoint = Vector2.new(0.5, 0.5)
        v74.Position = UDim2.fromScale(0.5, 0.5)
        v74.Image = "rbxasset://textures/ui/Controls/TouchTapIcon.png"
        v74.Parent = v38
        local v75 = u3
        table.insert(u29, v75:Create(v74, v34, {
            ["ImageTransparency"] = 1
        }))
        local v76 = u3
        table.insert(u30, v76:Create(v74, v34, {
            ["ImageTransparency"] = 0
        }))
    else
        local v77 = Instance.new("ImageLabel")
        v77.Name = "ButtonImage"
        v77.BackgroundTransparency = 1
        v77.ImageTransparency = 1
        v77.Size = UDim2.fromOffset(28, 30)
        v77.AnchorPoint = Vector2.new(0.5, 0.5)
        v77.Position = UDim2.fromScale(0.5, 0.5)
        v77.Image = "rbxasset://textures/ui/Controls/key_single.png"
        v77.Parent = v38
        local v78 = u3
        table.insert(u29, v78:Create(v77, v34, {
            ["ImageTransparency"] = 1
        }))
        local v79 = u3
        table.insert(u30, v79:Create(v77, v34, {
            ["ImageTransparency"] = 0
        }))
        local v80 = u1:GetStringForKeyCode(u24.KeyboardKeyCode)
        local v81 = u7[u24.KeyboardKeyCode]
        if v81 == nil then
            v81 = u8[v80]
        end
        if v81 == nil then
            v80 = u9[u24.KeyboardKeyCode] or v80
        end
        if v81 then
            local v82 = Instance.new("ImageLabel")
            v82.Name = "ButtonImage"
            v82.AnchorPoint = Vector2.new(0.5, 0.5)
            v82.Size = UDim2.fromOffset(36, 36)
            v82.Position = UDim2.fromScale(0.5, 0.5)
            v82.BackgroundTransparency = 1
            v82.ImageTransparency = 1
            v82.Image = v81
            v82.Parent = v38
            local v83 = u3
            table.insert(u29, v83:Create(v82, v34, {
                ["ImageTransparency"] = 1
            }))
            local v84 = u3
            table.insert(u30, v84:Create(v82, v34, {
                ["ImageTransparency"] = 0
            }))
        elseif v80 == nil or v80 == "" then
            local v85 = error
            local v86 = u24.Name
            local v87 = u24.KeyboardKeyCode
            v85("ProximityPrompt \'" .. v86 .. "\' has an unsupported keycode for rendering UI: " .. tostring(v87))
        else
            local v88 = Instance.new("TextLabel")
            v88.Name = "ButtonText"
            v88.Position = UDim2.fromOffset(0, -1)
            v88.Size = UDim2.fromScale(1, 1)
            v88.Font = Enum.Font.GothamBlack
            v88.TextSize = 14
            if string.len(v80) > 2 then
                v88.TextSize = 12
            end
            v88.BackgroundTransparency = 1
            v88.TextTransparency = 1
            v88.TextColor3 = Color3.new(1, 1, 1)
            v88.TextXAlignment = Enum.TextXAlignment.Center
            v88.Text = v80
            v88.Parent = v38
            local v89 = u3
            table.insert(u29, v89:Create(v88, v34, {
                ["TextTransparency"] = 1,
                ["TextStrokeTransparency"] = 1
            }))
            local v90 = u3
            table.insert(u30, v90:Create(v88, v34, {
                ["TextTransparency"] = 0,
                ["TextStrokeTransparency"] = 0
            }))
        end
    end
    if p25 == Enum.ProximityPromptInputType.Touch or u24.ClickablePrompt then
        local v91 = Instance.new("TextButton")
        v91.BackgroundTransparency = 1
        v91.TextTransparency = 1
        v91.Size = UDim2.fromScale(1, 1)
        v91.Parent = u35
        local u92 = false
        v91.InputBegan:Connect(function(p93) --[[Anonymous function at line 362]]
            --[[
            Upvalues:
                [1] = u24
                [2] = u92
            --]]
            if (p93.UserInputType == Enum.UserInputType.Touch or p93.UserInputType == Enum.UserInputType.MouseButton1) and p93.UserInputState ~= Enum.UserInputState.Change then
                u24:InputHoldBegin()
                u92 = true
            end
        end)
        v91.InputEnded:Connect(function(p94) --[[Anonymous function at line 369]]
            --[[
            Upvalues:
                [1] = u92
                [2] = u24
            --]]
            if (p94.UserInputType == Enum.UserInputType.Touch or p94.UserInputType == Enum.UserInputType.MouseButton1) and u92 then
                u92 = false
                u24:InputHoldEnd()
            end
        end)
        u35.Active = true
    end
    if u24.HoldDuration > 0 then
        local v95 = u23()
        v95.Parent = v38
        local v96 = u3
        local v97 = v95.Progress
        table.insert(u27, v96:Create(v97, v31, {
            ["Value"] = 1
        }))
        local v98 = u3
        local v99 = v95.Progress
        table.insert(u28, v98:Create(v99, v32, {
            ["Value"] = 0
        }))
    end
    local u100, u101
    if u24.HoldDuration > 0 then
        u100 = u24.PromptButtonHoldBegan:Connect(function() --[[Anonymous function at line 394]]
            --[[
            Upvalues:
                [1] = u27
            --]]
            for _, v102 in ipairs(u27) do
                v102:Play()
            end
        end)
        u101 = u24.PromptButtonHoldEnded:Connect(function() --[[Anonymous function at line 400]]
            --[[
            Upvalues:
                [1] = u28
            --]]
            for _, v103 in ipairs(u28) do
                v103:Play()
            end
        end)
    else
        u100 = nil
        u101 = nil
    end
    local u105 = u24.Triggered:Connect(function() --[[Anonymous function at line 407]]
        --[[
        Upvalues:
            [1] = u29
        --]]
        for _, v104 in ipairs(u29) do
            v104:Play()
        end
    end)
    local u107 = u24.TriggerEnded:Connect(function() --[[Anonymous function at line 413]]
        --[[
        Upvalues:
            [1] = u30
        --]]
        for _, v106 in ipairs(u30) do
            v106:Play()
        end
    end)
    local function v115() --[[Anonymous function at line 419]]
        --[[
        Upvalues:
            [1] = u4
            [2] = u24
            [3] = u43
            [4] = u48
            [5] = u35
        --]]
        local v108 = u4:GetTextSize(u24.ActionText, 19, Enum.Font.GothamBlack, Vector2.new(1000, 1000))
        local v109 = u4:GetTextSize(u24.ObjectText, 14, Enum.Font.GothamBlack, Vector2.new(1000, 1000))
        local v110 = v108.X
        local v111 = v109.X
        local v112 = math.max(v110, v111)
        local v113 = (u24.ActionText == nil or u24.ActionText == "") and (u24.ObjectText == nil or u24.ObjectText == "") and 72 or v112 + 72 + 24
        local v114 = (u24.ObjectText == nil or u24.ObjectText == "") and 0 or 9
        u43.Position = UDim2.new(0.5, 72 - v113 / 2, 0, v114)
        u48.Position = UDim2.new(0.5, 72 - v113 / 2, 0, -10)
        u43.Text = u24.ActionText
        u48.Text = u24.ObjectText
        u43.AutoLocalize = u24.AutoLocalize
        u43.RootLocalizationTable = u24.RootLocalizationTable
        u48.AutoLocalize = u24.AutoLocalize
        u48.RootLocalizationTable = u24.RootLocalizationTable
        u35.Size = UDim2.fromOffset(v113, 72)
        u35.SizeOffset = Vector2.new(u24.UIOffset.X / u35.Size.Width.Offset, u24.UIOffset.Y / u35.Size.Height.Offset)
    end
    local u116 = u24.Changed:Connect(v115)
    v115()
    u35.Adornee = u24.Parent
    u35.Parent = p26
    for _, v117 in ipairs(u30) do
        v117:Play()
    end
    return function() --[[Function name: cleanup, line 462]]
        --[[
        Upvalues:
            [1] = u100
            [2] = u101
            [3] = u105
            [4] = u107
            [5] = u116
            [6] = u29
            [7] = u35
        --]]
        if u100 then
            u100:Disconnect()
        end
        if u101 then
            u101:Disconnect()
        end
        u105:Disconnect()
        u107:Disconnect()
        u116:Disconnect()
        for _, v118 in ipairs(u29) do
            v118:Play()
        end
        wait(0.2)
        u35.Parent = nil
    end
end
v2.PromptShown:Connect(function(p120, p121) --[[Anonymous function at line 489]]
    --[[
    Upvalues:
        [1] = u5
        [2] = u119
    --]]
    if p120.Style ~= Enum.ProximityPromptStyle.Default then
        local v122 = u5:FindFirstChild("ProximityPrompts")
        if v122 == nil then
            v122 = Instance.new("ScreenGui")
            v122.Name = "ProximityPrompts"
            v122.ResetOnSpawn = false
            v122.Parent = u5
        end
        local v123 = u119(p120, p121, v122)
        p120.PromptHidden:Wait()
        v123()
    end
end)]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[PromptCustom]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Sound" referent="228"><Properties><float name="RollOffMaxDistance">100</float><token name="RollOffMode">3</token><Content name="SoundId"><url><![CDATA[rbxassetid://4056786383]]></url></Content><float name="Volume">1</float><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Interact]]></string><int64 name="SourceAssetId">399946420</int64><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="LocalScript" referent="229"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local u1 = game:GetService("TweenService")
local u2 = game:GetService("LocalizationService")
local u3 = game:GetService("GuiService")
local u4 = game:GetService("UserInputService")
local u5 = game:GetService("Players")
local u6 = game:GetService("ReplicatedStorage")
local v7 = u6:WaitForChild("Remotes")
local u8 = u5.LocalPlayer
local u9 = u8:WaitForChild("PlayerInfoFolder"):WaitForChild("ItemFolder")
local u10 = script.Parent:WaitForChild("ProgressBar")
u8.Character:WaitForChild("Humanoid")
local u11 = script.Parent.Parent:WaitForChild("CutsceneGUI")
local u12, u13 = pcall(function() --[[Anonymous function at line 18]]
    --[[
    Upvalues:
        [1] = u2
    --]]
    return u2:GetTranslatorForPlayerAsync(game.Players.LocalPlayer)
end)
local u14 = TweenInfo.new(1, Enum.EasingStyle.Cubic)
for _, v15 in pairs(workspace:GetChildren()) do
    if v15.Name == "PlayerDummy" or (v15.Name == "RocketFake" or v15.Name == "EscapePod") then
        v15:Destroy()
    end
end
local v16 = false
local function u19(p17) --[[Anonymous function at line 39]]
    --[[
    Upvalues:
        [1] = u1
        [2] = u11
    --]]
    local v18 = p17 or 1
    u1:Create(u11.Fade, TweenInfo.new(v18), {
        ["BackgroundTransparency"] = 1
    }):Play()
    wait(v18)
    u11.Fade.Visible = false
end
local function u22(p20) --[[Anonymous function at line 50]]
    --[[
    Upvalues:
        [1] = u11
        [2] = u1
    --]]
    local v21 = p20 or 1
    if u11 and u11:FindFirstChild("Fade") then
        u11.Fade.Visible = true
        u1:Create(u11.Fade, TweenInfo.new(v21), {
            ["BackgroundTransparency"] = 0
        }):Play()
        wait(v21)
    end
end
local function u29(p23, p24, p25, p26, p27) --[[Anonymous function at line 63]]
    --[[
    Upvalues:
        [1] = u1
    --]]
    local v28 = p27 or Enum.EasingStyle.Linear
    u1:Create(p23, TweenInfo.new(p26, v28, Enum.EasingDirection.Out), {
        ["CFrame"] = CFrame.new(p24.Position, p25.Position),
        ["Focus"] = CFrame.new(p24.Position, p25.Position)
    }):Play()
end
local u30 = u11:WaitForChild("FadeBottomBar")
local u31 = false
local function u35(p32, p33) --[[Anonymous function at line 75]]
    --[[
    Upvalues:
        [1] = u31
        [2] = u30
        [3] = u12
        [4] = u13
    --]]
    if u31 then
        u31 = false
    end
    wait()
    u30.CutsceneText.Text = ""
    u31 = true
    u30.CutsceneText.AutoLocalize = false
    if u12 then
        p32 = u13:Translate(u30.CutsceneText, p32)
    end
    for v34 = 1, #p32 do
        if not u31 then
            return
        end
        u30.CutsceneText.Text = string.sub(p32, 1, v34)
        wait(p33)
    end
    u30.CutsceneText.AutoLocalize = true
    u31 = false
end
LastColor = Color3.fromRGB(255, 150, 0)
game:GetService("StarterGui")
function getPlatform()
    --[[
    Upvalues:
        [1] = u3
        [2] = u4
    --]]
    return u3:IsTenFootInterface() and "Console" or (u4.TouchEnabled and not u4.MouseEnabled and "Mobile" or "Desktop")
end
local u36 = v16
local function u42(u37) --[[Anonymous function at line 123]]
    --[[
    Upvalues:
        [1] = u9
        [2] = u1
        [3] = u14
    --]]
    u9:ClearAllChildren()
    if u37[2]:FindFirstChild("Lock") then
        coroutine.wrap(function() --[[Anonymous function at line 127]]
            --[[
            Upvalues:
                [1] = u37
            --]]
            for _ = 1, 18 do
                local v38 = u37[2].Lock
                v38.Orientation = v38.Orientation + Vector3.new(5, 0, 0)
                wait()
            end
        end)
    end
    script.Parent.Unlock:Play()
    u37[2].CanCollide = false
    local v39 = {
        ["CFrame"] = u37[2].CFrame * CFrame.new(-1.6, 0, 1.75) * CFrame.Angles(0, 4.71238898038469, 0)
    }
    u1:Create(u37[2], u14, v39):Play()
    if u37 and u37[1] then
        for _, v40 in pairs(u37[1]:GetChildren()) do
            if v40:IsA("BasePart") then
                v40.Transparency = 0
            else
                v40:Destroy()
            end
        end
    end
    if u37[3] then
        for _, v41 in pairs(u37[3]:GetDescendants()) do
            if v41:IsA("BasePart") then
                v41.Transparency = 0
            end
        end
    end
end
local function u45(p43) --[[Anonymous function at line 98]]
    local v44 = nil
    if LastColor == Color3.fromRGB(255, 150, 0) then
        v44 = Color3.fromRGB(255, 0, 0)
    elseif LastColor == Color3.fromRGB(255, 0, 0) then
        v44 = Color3.fromRGB(0, 255, 0)
    elseif LastColor == Color3.fromRGB(0, 255, 0) then
        v44 = Color3.fromRGB(0, 150, 255)
    elseif LastColor == Color3.fromRGB(0, 150, 255) then
        v44 = Color3.fromRGB(120, 0, 255)
    elseif LastColor == Color3.fromRGB(120, 0, 255) then
        v44 = Color3.fromRGB(255, 255, 0)
    elseif LastColor == Color3.fromRGB(255, 255, 0) then
        v44 = Color3.fromRGB(255, 150, 0)
    end
    LastColor = v44
    if v44 then
        p43.BackgroundColor3 = v44
        p43.TextLabel.TextColor3 = v44
    end
end
for _, v46 in pairs(game.Lighting:GetChildren()) do
    if v46:IsA("Atmosphere") or v46:IsA("Sky") then
        v46:Destroy()
    end
end
u6.SkyStorage.Desert.Sky:Clone().Parent = game.Lighting
u6.SkyStorage.Desert.Atmosphere:Clone().Parent = game.Lighting
u9:ClearAllChildren()
if _G.InGame == true and (u8.Character and not (u8.Character:FindFirstChild("Enemy") or u8:FindFirstChild("Escaped"))) then
    _G.InGame = false
    local v47 = workspace.CurrentCamera
    v47.CameraType = Enum.CameraType.Scriptable
    v47.CameraSubject = workspace.GameFolder.MenuCameras.MainCam
    u29(v47, workspace.GameFolder.MenuCameras.MainCam, workspace.GameFolder.MenuCameras.MainFocus, 0.001)
    wait(0.001)
    script.Parent.Parent.MainMenu.Theme:Play()
    script.Parent.Parent.MainMenu.Timer.Visible = false
    script.Parent.Parent.MainMenu.Play.Visible = true
    script.Parent.Parent.MainMenu.Title.Visible = true
    script.Parent.Parent.MainMenu.Vignette.Visible = true
    if script.Parent.Parent.MainMenu:FindFirstChild("SpectatorFrame") then
        script.Parent.Parent.MainMenu.SpectatorFrame.Visible = true
    end
    if getPlatform() == "Console" then
        u3.SelectedObject = script.Parent.Parent.MainMenu.Play
    end
    u19(0.5)
end
v7:FindFirstChild("ItemEvent").OnClientEvent:Connect(function(p48, p49, ...) --[[Anonymous function at line 205]]
    --[[
    Upvalues:
        [1] = u8
        [2] = u9
        [3] = u1
        [4] = u14
        [5] = u22
        [6] = u29
        [7] = u19
        [8] = u11
        [9] = u36
        [10] = u6
        [11] = u30
        [12] = u35
        [13] = u3
        [14] = u42
    --]]
    if u8 and (p48 and (p49 or p49 == false)) then
        local v50 = { ... }
        if p48 == "Wires" then
            script.Parent.Place:Play()
            u9:ClearAllChildren()
            if v50 and v50[1] then
                for _, v51 in pairs(v50[1]:GetChildren()) do
                    if v51:IsA("BasePart") then
                        v51.Transparency = 0
                    else
                        v51:Destroy()
                    end
                end
            end
            if p49 >= 3 and (v50 and v50[2]) then
                script.Parent.Unlock:Play()
                v50[2].CanCollide = false
                local v52 = {
                    ["CFrame"] = v50[2].CFrame * CFrame.new(-1.6, 0, 1.75) * CFrame.Angles(0, 4.71238898038469, 0)
                }
                u1:Create(v50[2], u14, v52):Play()
                if v50[3] then
                    for _, v53 in pairs(v50[3]:GetDescendants()) do
                        if v53:IsA("BasePart") then
                            v53.Transparency = 0
                        end
                    end
                    return
                end
            end
        elseif p48 == "Pipes" then
            script.Parent.Screw:Play()
            local v54 = {
                ["CFrame"] = v50[2].PrimaryPart.CFrame * CFrame.Angles(1.5707963267948966, 0, 0)
            }
            u1:Create(v50[2].PrimaryPart, TweenInfo.new(0.5, Enum.EasingStyle.Cubic), v54):Play()
            if v50[1] == 2 then
                v50[2].Parent.Trigger:ClearAllChildren()
                script.Parent.SpaceUnlock:Play()
                v50[2].Parent.EscapePodLight.BrickColor = BrickColor.new("Lime green")
                v50[2].Parent.Light.BrickColor = BrickColor.new("Lime green")
                v50[2].Parent.Light.PointLight.Color = Color3.new(0, 1, 0)
            end
            if p49 >= 3 then
                u9:ClearAllChildren()
            end
            if v50[3] and (p49 >= 3 and (u8 and (u8:FindFirstChild("PlayerInfoFolder") and (u8.PlayerInfoFolder:FindFirstChild("Batteries") and u8.PlayerInfoFolder.Batteries.Value >= 2)))) then
                for _, v55 in pairs(v50[3]:GetDescendants()) do
                    if v55:IsA("SurfaceGui") then
                        v55.Enabled = true
                    elseif v55:IsA("ClickDetector") then
                        v55.MaxActivationDistance = 20
                    elseif v55:IsA("BasePart") and v55.BrickColor == BrickColor.new("Really black") then
                        v55.BrickColor = BrickColor.new("Medium stone grey")
                    end
                end
                return
            end
        elseif p48 == "Batteries" then
            script.Parent.Place:Play()
            u9:ClearAllChildren()
            v50[1].Parent.Trigger:ClearAllChildren()
            v50[1].Transparency = 0
            v50[1].Parent.EscapePodLight.BrickColor = BrickColor.new("Lime green")
            v50[1].Parent.Light.BrickColor = BrickColor.new("Lime green")
            v50[1].Parent.Light.PointLight.Color = Color3.new(0, 1, 0)
            if p49 >= 2 and (u8 and (u8:FindFirstChild("PlayerInfoFolder") and (u8.PlayerInfoFolder:FindFirstChild("Pipes") and u8.PlayerInfoFolder.Pipes.Value >= 3))) then
                for _, v56 in pairs(v50[2]:GetDescendants()) do
                    if v56:IsA("SurfaceGui") then
                        v56.Enabled = true
                    elseif v56:IsA("ClickDetector") then
                        v56.MaxActivationDistance = 20
                    elseif v56:IsA("BasePart") and v56.BrickColor == BrickColor.new("Really black") then
                        v56.BrickColor = BrickColor.new("Medium stone grey")
                    end
                end
                return
            end
        elseif p48 == "RocketWires" then
            script.Parent.Place:Play()
            u9:ClearAllChildren()
            local v57 = v50 and v50[1] and v50[1].Parent:FindFirstChild(v50[2])
            if v57 then
                v57.Transparency = 0
            end
            print(1)
            if p49 >= 3 and (v50 and v50[1]) then
                u22(0.5)
                local v58 = workspace.CurrentCamera
                v58.CameraType = Enum.CameraType.Scriptable
                u29(v58, workspace.GameFolder.SpaceCameras.RocketCamera1, workspace.GameFolder.SpaceCameras.RocketFocus1, 0.001)
                script.Parent.Enabled = false
                u19(1)
                u11.FadeTopBar.Visible = true
                u11.FadeTopBar:TweenPosition(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 1, true)
                u11.FadeBottomBar.Visible = true
                u11.FadeBottomBar:TweenPosition(UDim2.new(0, 0, 0.925, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 1, true)
                wait(2)
                for _, v59 in pairs(v50[1].PrimaryPart.Parent:GetDescendants()) do
                    if v59:IsA("PointLight") or v59:IsA("ParticleEmitter") then
                        v59.Enabled = true
                    elseif v59:IsA("Sound") then
                        v59:Play()
                    end
                end
                u36 = true
                spawn(function() --[[Anonymous function at line 32]]
                    --[[
                    Upvalues:
                        [1] = u36
                    --]]
                    if u36 == true then
                        repeat
                            wait()
                            local v60 = workspace.CurrentCamera
                            v60.CFrame = v60.CFrame * CFrame.Angles(math.random(-3, 3) / 360, math.random(-3, 3) / 360, math.random(-3, 3) / 360)
                            v60.FieldOfView = math.random(69, 71)
                        until u36 == false
                    end
                end)
                local v61 = {
                    ["CFrame"] = CFrame.new(v50[1].PrimaryPart.Position + Vector3.new(0, 200, 0))
                }
                u1:Create(v50[1].PrimaryPart, TweenInfo.new(13, Enum.EasingStyle.Quart, Enum.EasingDirection.In), v61):Play()
                wait(5)
                u36 = false
                u29(v58, workspace.GameFolder.SpaceCameras.RocketCamera2, workspace.GameFolder.SpaceCameras.RocketFocus2, 8)
                wait(5)
                u22(3)
                u11.FadeTopBar.Visible = false
                u11.FadeTopBar:TweenPosition(UDim2.new(0, 0, -0.075, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 1, true)
                u11.FadeBottomBar.Visible = false
                u11.FadeBottomBar:TweenPosition(UDim2.new(0, 0, 1, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 1, true)
                script.Parent.Enabled = true
                for _, v62 in pairs(game.Lighting:GetChildren()) do
                    if v62:IsA("Atmosphere") or v62:IsA("Sky") then
                        v62:Destroy()
                    end
                end
                u6.SkyStorage.Space.Sky:Clone().Parent = game.Lighting
                u6.SkyStorage.Space.Atmosphere:Clone().Parent = game.Lighting
                local v63 = workspace.CurrentCamera
                v63.CameraType = Enum.CameraType.Custom
                v63.CameraSubject = u8.Character.Humanoid
                script.Parent.SpaceAmbience:Play()
                workspace.Gravity = 30
                u8.Character.Humanoid.JumpPower = 15
                wait(1)
                u19(1)
                v50[1]:Destroy()
                return
            end
        elseif p48 == "FinalCodeEvent" then
            script.Parent.ButtonClick:Play()
            if v50 and (v50[2] and v50[2]:FindFirstChildOfClass("ClickDetector")) then
                v50[2].Material = Enum.Material.Neon
                wait(0.25)
                v50[2].Material = Enum.Material.SmoothPlastic
            end
            if p49 == true and (v50 and v50[1]) then
                local v64 = v50[1]:Clone()
                v64.Parent = workspace
                u9:ClearAllChildren()
                script.Parent.SpaceUnlock:Play()
                u22(0.5)
                script.Parent.SpaceAmbience:Stop()
                local v65 = workspace.CurrentCamera
                v65.CameraType = Enum.CameraType.Scriptable
                u29(v65, workspace.GameFolder.SpaceCameras.EscapePodCamera1, workspace.GameFolder.SpaceCameras.EscapePodFocus1, 0.001)
                script.Parent.Enabled = false
                if script.Parent:FindFirstChild("Crouch") then
                    script.Parent.Crouch:Destroy()
                end
                local v66
                if u8.Character then
                    u8.Character.Archivable = true
                    local v67 = u8.Character:Clone()
                    u8.Character.Archivable = false
                    v67.Name = "PlayerDummy"
                    v67.Humanoid.DisplayDistanceType = "None"
                    v67.Humanoid.WalkSpeed = 6
                    v67.Parent = workspace
                    for _, v68 in pairs(v67:GetDescendants()) do
                        if v68:IsA("Tool") or v68:IsA("BillboardGui") then
                            v68:Destroy()
                        end
                    end
                    v67:SetPrimaryPartCFrame(workspace.GameFolder.SpaceCameras.PlayerPosition2.CFrame)
                    v67:SetPrimaryPartCFrame(CFrame.new(v67.PrimaryPart.Position, workspace.GameFolder.SpaceCameras.PlayerFace2.Position))
                    v67.Humanoid:LoadAnimation(v67.Animate.idle.Animation1):Play()
                    local v69 = Instance.new("WeldConstraint")
                    v69.Part0 = v64.PrimaryPart
                    v69.Part1 = v67.PrimaryPart
                    v69.Parent = v69.Part0
                    v66 = workspace.PlayerDummy.Humanoid:LoadAnimation(workspace.PlayerDummy.Animate.wave.WaveAnim)
                else
                    v66 = nil
                end
                for _, v70 in pairs(v64.PrimaryPart.Parent:GetDescendants()) do
                    if v70:IsA("PointLight") or v70:IsA("ParticleEmitter") then
                        v70.Enabled = true
                    elseif v70:IsA("Sound") then
                        v70:Play()
                    end
                end
                local v71 = {
                    ["CFrame"] = CFrame.new(v64.PrimaryPart.Position + Vector3.new(200, 0, 0))
                }
                u1:Create(v64.PrimaryPart, TweenInfo.new(16, Enum.EasingStyle.Linear, Enum.EasingDirection.In), v71):Play()
                u19(1)
                u30.CutsceneText.Text = ""
                u11.FadeTopBar.Visible = true
                u11.FadeTopBar:TweenPosition(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 1, true)
                u11.FadeBottomBar.Visible = true
                u11.FadeBottomBar:TweenPosition(UDim2.new(0, 0, 0.925, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 1, true)
                u29(v65, workspace.GameFolder.SpaceCameras.EscapePodCamera1, workspace.GameFolder.SpaceCameras.EscapePodFocus2, 4)
                wait(4)
                u29(v65, workspace.GameFolder.SpaceCameras.EscapePodCamera2, workspace.GameFolder.SpaceCameras.EscapePodFocus2, 1)
                u35("Looks like I made it out. So long, everyone!", 0.04)
                v66:Play()
                v66.DidLoop:Wait()
                v66:Stop()
                wait(4)
                u30.CutsceneText.Text = ""
                u22(3)
                u11.FadeTopBar.Visible = false
                u11.FadeTopBar:TweenPosition(UDim2.new(0, 0, -0.075, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 1, true)
                u11.FadeBottomBar.Visible = false
                u11.FadeBottomBar:TweenPosition(UDim2.new(0, 0, 1, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 1, true)
                for _, v72 in pairs(game.Lighting:GetChildren()) do
                    if v72:IsA("Atmosphere") or v72:IsA("Sky") then
                        v72:Destroy()
                    end
                end
                u6.SkyStorage.Desert.Sky:Clone().Parent = game.Lighting
                u6.SkyStorage.Desert.Atmosphere:Clone().Parent = game.Lighting
                _G.InGame = false
                local v73 = workspace.CurrentCamera
                v73.CameraType = Enum.CameraType.Scriptable
                v73.CameraSubject = workspace.GameFolder.MenuCameras.MainCam
                u29(v73, workspace.GameFolder.MenuCameras.MainCam, workspace.GameFolder.MenuCameras.MainFocus, 0.001)
                wait(0.001)
                script.Parent.Parent.MainMenu.Theme:Play()
                script.Parent.Parent.MainMenu.Timer.Visible = false
                script.Parent.Parent.MainMenu.Play.Visible = true
                script.Parent.Parent.MainMenu.Title.Visible = true
                script.Parent.Parent.MainMenu.Vignette.Visible = true
                if script.Parent.Parent.MainMenu:FindFirstChild("SpectatorFrame") then
                    script.Parent.Parent.MainMenu.SpectatorFrame.Visible = true
                end
                if getPlatform() == "Console" then
                    u3.SelectedObject = script.Parent.Parent.MainMenu.Play
                end
                v64:Destroy()
                wait(1)
                u19(1)
                return
            end
        elseif p48 == "ColorSafe" then
            script.Parent.ButtonClick:Play()
            if v50 and (v50[2] and v50[2]:FindFirstChildOfClass("ClickDetector")) then
                v50[2].Material = Enum.Material.Neon
                local v74 = v50[2]
                v74.Position = v74.Position + Vector3.new(0, 0, -0.075)
                wait(0.25)
                local v75 = v50[2]
                v75.Position = v75.Position + Vector3.new(0, 0, 0.075)
                v50[2].Material = Enum.Material.Plastic
            end
            if p49 == true and (v50 and v50[2]) then
                script.Parent.Unlock:Play()
                if v50 and v50[1] then
                    for _, v76 in pairs(v50[1]:GetChildren()) do
                        if v76:IsA("BasePart") and v76:FindFirstChildOfClass("ClickDetector") then
                            v76:ClearAllChildren()
                            v76.BrickColor = BrickColor.new("Really black")
                        end
                    end
                end
                v50[2].CanCollide = false
                local v77 = {
                    ["CFrame"] = v50[2].CFrame * CFrame.new(-1.6, 0, 1.75) * CFrame.Angles(0, 4.71238898038469, 0)
                }
                u1:Create(v50[2], u14, v77):Play()
                if v50[3] then
                    for _, v78 in pairs(v50[3]:GetDescendants()) do
                        if v78:IsA("BasePart") then
                            v78.Transparency = 0
                        end
                    end
                    return
                end
            end
        elseif p48 == "CombinationSafe" then
            script.Parent.ButtonClick:Play()
            if v50 and (v50[2] and v50[2]:FindFirstChildOfClass("ClickDetector")) then
                v50[2].Material = Enum.Material.Neon
                local v79 = v50[2]
                v79.Position = v79.Position + Vector3.new(0, 0, -0.075)
                wait(0.25)
                local v80 = v50[2]
                v80.Position = v80.Position + Vector3.new(0, 0, 0.075)
                v50[2].Material = Enum.Material.SmoothPlastic
            end
            if p49 == true and (v50 and v50[2]) then
                script.Parent.Unlock:Play()
                if v50 and v50[1] then
                    for _, v81 in pairs(v50[1]:GetChildren()) do
                        if v81:IsA("BasePart") and v81:FindFirstChildOfClass("ClickDetector") then
                            v81:ClearAllChildren()
                            v81.BrickColor = BrickColor.new("Really black")
                        end
                    end
                end
                v50[2].CanCollide = false
                local v82 = {
                    ["CFrame"] = v50[2].CFrame * CFrame.new(-1.6, 0, 1.75) * CFrame.Angles(0, 4.71238898038469, 0)
                }
                u1:Create(v50[2], u14, v82):Play()
                if v50[3] then
                    for _, v83 in pairs(v50[3]:GetDescendants()) do
                        if v83:IsA("BasePart") then
                            v83.Transparency = 0
                        end
                    end
                    return
                end
            end
        else
            if p48 == "GreenSafe" then
                u42(v50)
                return
            end
            if p48 == "BlueSafe" then
                u42(v50)
                return
            end
            if p48 == "PurpleSafe" then
                u42(v50)
            end
        end
    end
end)
SceneReady = true
function _G.IntroCutscene(p84, _) --[[Anonymous function at line 618]]
    --[[
    Upvalues:
        [1] = u9
        [2] = u22
        [3] = u29
        [4] = u6
        [5] = u8
        [6] = u19
        [7] = u30
        [8] = u11
        [9] = u35
    --]]
    if _G.InGame == true and (p84 and SceneReady == true) then
        SceneReady = false
        u9:ClearAllChildren()
        if p84 == "Space" then
            u22()
            script.Parent.Parent.MainMenu.Theme:Stop()
            script.Parent.Parent.MainMenu.Vignette.Visible = false
            if script.Parent.Parent.MainMenu:FindFirstChild("SpectatorFrame") then
                script.Parent.Parent.MainMenu.SpectatorFrame.Visible = false
            end
            local v85 = workspace.GameFolder[p84 .. "Cameras"]
            local v86 = workspace.CurrentCamera
            v86.CameraType = Enum.CameraType.Scriptable
            u29(v86, v85.Cam1, v85.Focus1, 0.001)
            if workspace:FindFirstChild("PlayerDummy") then
                workspace.PlayerDummy:Destroy()
            end
            if workspace:FindFirstChild("RocketFake") then
                workspace.RocketFake:Destroy()
            end
            u6.CutsceneStorage.RocketFake:Clone().Parent = workspace
            if u8.Character then
                u8.Character.Archivable = true
                local v87 = u8.Character:Clone()
                u8.Character.Archivable = false
                v87.Name = "PlayerDummy"
                v87.Humanoid.DisplayDistanceType = "None"
                v87.Humanoid.WalkSpeed = 0
                v87.Parent = workspace
                v87:SetPrimaryPartCFrame(v85.PlayerPosition1.CFrame)
                v87:SetPrimaryPartCFrame(CFrame.new(v87.PrimaryPart.Position, v85.PlayerFace1.Position))
                v87.Humanoid:LoadAnimation(v87.Animate.idle.Animation1):Play()
            end
            wait(3)
            u19()
            u30.CutsceneText.Text = ""
            u11.FadeTopBar.Visible = true
            u11.FadeTopBar:TweenPosition(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 1, true)
            u11.FadeBottomBar.Visible = true
            u11.FadeBottomBar:TweenPosition(UDim2.new(0, 0, 0.925, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 1, true)
            wait(1)
            u35("I\'ve got no idea what\'s going on, but I need to get to safety!", 0.05)
            wait(3)
            u30.CutsceneText.Text = ""
            wait(0.5)
            u29(v86, v85.Cam2, v85.Focus2, 3)
            u35("Maybe that rocket can help...", 0.04)
            wait(3)
            u11.FadeTopBar.Visible = false
            u11.FadeTopBar:TweenPosition(UDim2.new(0, 0, -0.075, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 1, true)
            u11.FadeBottomBar.Visible = false
            u11.FadeBottomBar:TweenPosition(UDim2.new(0, 0, 1, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 1, true)
            u22()
            wait(2)
            if workspace:FindFirstChild("PlayerDummy") then
                script.Parent.Enabled = true
                if workspace:FindFirstChild("RocketFake") then
                    workspace.RocketFake:Destroy()
                end
                workspace.PlayerDummy:Destroy()
                local v88 = workspace.CurrentCamera
                v88.CameraType = Enum.CameraType.Custom
                v88.CameraSubject = u8.Character.Humanoid
                u8.Character.Humanoid.JumpPower = 35
                u30.CutsceneText.Text = ""
                u19()
            end
        end
        SceneReady = true
    end
end
local u89 = false
local u90 = false
v7:FindFirstChild("ToolEffect").OnClientEvent:Connect(function(p91, ...) --[[Anonymous function at line 719]]
    --[[
    Upvalues:
        [1] = u89
        [2] = u1
        [3] = u90
        [4] = u9
        [5] = u22
        [6] = u6
        [7] = u29
        [8] = u19
        [9] = u30
        [10] = u11
        [11] = u35
        [12] = u3
    --]]
    if p91 then
        local v92 = { ... }
        if p91 == "Bonk" and not u89 then
            u89 = true
            script.Parent.StunSound:Play()
            script.Parent.Stun.Visible = true
            local v93 = {
                ["Position"] = UDim2.new(0.334, 0, 0.371, 0),
                ["Rotation"] = -10,
                ["Size"] = UDim2.new(0.331, 0, 0.157, 0)
            }
            u1:Create(script.Parent.Stun, TweenInfo.new(0.5, Enum.EasingStyle.Bounce), v93):Play()
            script.Parent.BonkEffect.Visible = true
            u1:Create(script.Parent.BonkEffect, TweenInfo.new(0.5), {
                ["ImageTransparency"] = 0
            }):Play()
            wait(0.5)
            local v94 = v92[1] or 10
            wait(2)
            local v95 = {
                ["Position"] = UDim2.new(1, 0, 0.367, 0),
                ["Rotation"] = 30,
                ["Size"] = UDim2.new(0.074, 0, 0.053, 0)
            }
            u1:Create(script.Parent.Stun, TweenInfo.new(1, Enum.EasingStyle.Quad), v95):Play()
            u1:Create(script.Parent.BonkEffect, TweenInfo.new(v94), {
                ["ImageTransparency"] = 0.9
            }):Play()
            wait(v94 - 2)
            script.Parent.Stun.Visible = false
            script.Parent.BonkEffect.ImageTransparency = 1
            script.Parent.BonkEffect.Visible = false
            u89 = false
            return
        end
        if p91 == "Egg" and not u90 then
            u90 = true
            script.Parent.Splat:Play()
            script.Parent.EggSplatEffect.BackgroundTransparency = 0.9
            for _, v96 in pairs(script.Parent.EggSplatEffect:GetChildren()) do
                if v96:IsA("ImageLabel") then
                    v96.ImageTransparency = 0
                end
            end
            script.Parent.EggSplatEffect.Visible = true
            wait(5)
            u1:Create(script.Parent.EggSplatEffect, TweenInfo.new(1), {
                ["BackgroundTransparency"] = 1
            }):Play()
            for _, v97 in pairs(script.Parent.EggSplatEffect:GetChildren()) do
                if v97:IsA("ImageLabel") then
                    u1:Create(v97, TweenInfo.new(1), {
                        ["ImageTransparency"] = 1
                    }):Play()
                end
            end
            wait(1)
            script.Parent.EggSplatEffect.Visible = false
            u90 = false
            return
        end
        if p91 == "RemoveItem" and v92[1] then
            v92[1]:Destroy()
            return
        end
        if p91 == "EndCutscene" and (v92[1] and v92[2]) then
            local v98 = v92[1]:Clone()
            v98.Parent = workspace
            u9:ClearAllChildren()
            script.Parent.Parent.MainMenu.Timer.Visible = false
            u22(0.5)
            for _, v99 in pairs(game.Lighting:GetChildren()) do
                if v99:IsA("Atmosphere") or v99:IsA("Sky") then
                    v99:Destroy()
                end
            end
            u6.SkyStorage.Space.Sky:Clone().Parent = game.Lighting
            u6.SkyStorage.Space.Atmosphere:Clone().Parent = game.Lighting
            script.Parent.SpaceAmbience:Stop()
            local v100 = workspace.CurrentCamera
            v100.CameraType = Enum.CameraType.Scriptable
            u29(v100, workspace.GameFolder.SpaceCameras.EscapePodCamera1, workspace.GameFolder.SpaceCameras.EscapePodFocus1, 0.001)
            script.Parent.Enabled = false
            if script.Parent:FindFirstChild("Crouch") then
                script.Parent.Crouch:Destroy()
            end
            local v101
            if v92[2] then
                v92[2].Archivable = true
                local v102 = v92[2]:Clone()
                v92[2].Archivable = false
                v102.Name = "PlayerDummy"
                v102.Humanoid.DisplayDistanceType = "None"
                v102.Humanoid.WalkSpeed = 6
                v102.Parent = workspace
                for _, v103 in pairs(v102:GetDescendants()) do
                    if v103:IsA("Tool") or v103:IsA("BillboardGui") then
                        v103:Destroy()
                    end
                end
                v102:SetPrimaryPartCFrame(workspace.GameFolder.SpaceCameras.PlayerPosition2.CFrame)
                v102:SetPrimaryPartCFrame(CFrame.new(v102.PrimaryPart.Position, workspace.GameFolder.SpaceCameras.PlayerFace2.Position))
                v102.Humanoid:LoadAnimation(v102.Animate.idle.Animation1):Play()
                local v104 = Instance.new("WeldConstraint")
                v104.Part0 = v98.PrimaryPart
                v104.Part1 = v102.PrimaryPart
                v104.Parent = v104.Part0
                v101 = workspace.PlayerDummy.Humanoid:LoadAnimation(workspace.PlayerDummy.Animate.wave.WaveAnim)
            else
                v101 = nil
            end
            for _, v105 in pairs(v98.PrimaryPart.Parent:GetDescendants()) do
                if v105:IsA("PointLight") or v105:IsA("ParticleEmitter") then
                    v105.Enabled = true
                elseif v105:IsA("Sound") then
                    v105:Play()
                end
            end
            local v106 = {
                ["CFrame"] = CFrame.new(v98.PrimaryPart.Position + Vector3.new(200, 0, 0))
            }
            u1:Create(v98.PrimaryPart, TweenInfo.new(16, Enum.EasingStyle.Linear, Enum.EasingDirection.In), v106):Play()
            u19(1)
            u30.CutsceneText.Text = ""
            u11.FadeTopBar.Visible = true
            u11.FadeTopBar:TweenPosition(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 1, true)
            u11.FadeBottomBar.Visible = true
            u11.FadeBottomBar:TweenPosition(UDim2.new(0, 0, 0.925, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 1, true)
            u29(v100, workspace.GameFolder.SpaceCameras.EscapePodCamera1, workspace.GameFolder.SpaceCameras.EscapePodFocus2, 4)
            wait(4)
            u29(v100, workspace.GameFolder.SpaceCameras.EscapePodCamera2, workspace.GameFolder.SpaceCameras.EscapePodFocus2, 1)
            u35("Looks like I made it out. So long, everyone!", 0.04)
            v101:Play()
            v101.DidLoop:Wait()
            v101:Stop()
            wait(4)
            u30.CutsceneText.Text = ""
            u22(3)
            u11.FadeTopBar.Visible = false
            u11.FadeTopBar:TweenPosition(UDim2.new(0, 0, -0.075, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 1, true)
            u11.FadeBottomBar.Visible = false
            u11.FadeBottomBar:TweenPosition(UDim2.new(0, 0, 1, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 1, true)
            for _, v107 in pairs(game.Lighting:GetChildren()) do
                if v107:IsA("Atmosphere") or v107:IsA("Sky") then
                    v107:Destroy()
                end
            end
            u6.SkyStorage.Desert.Sky:Clone().Parent = game.Lighting
            u6.SkyStorage.Desert.Atmosphere:Clone().Parent = game.Lighting
            _G.InGame = false
            local v108 = workspace.CurrentCamera
            v108.CameraType = Enum.CameraType.Scriptable
            v108.CameraSubject = workspace.GameFolder.MenuCameras.MainCam
            u29(v108, workspace.GameFolder.MenuCameras.MainCam, workspace.GameFolder.MenuCameras.MainFocus, 0.001)
            wait(0.001)
            script.Parent.Parent.MainMenu.Theme:Play()
            script.Parent.Parent.MainMenu.Timer.Visible = false
            script.Parent.Parent.MainMenu.Play.Visible = true
            script.Parent.Parent.MainMenu.Title.Visible = true
            script.Parent.Parent.MainMenu.Vignette.Visible = true
            if script.Parent.Parent.MainMenu:FindFirstChild("SpectatorFrame") then
                script.Parent.Parent.MainMenu.SpectatorFrame.Visible = true
            end
            if getPlatform() == "Console" then
                u3.SelectedObject = script.Parent.Parent.MainMenu.Play
            end
            v98:Destroy()
            wait(1)
            u19(1)
        end
    end
end)
for _, u109 in pairs(u5:GetPlayers()) do
    if u109:IsA("Player") then
        repeat
            wait()
        until u109:FindFirstChild("PlayerInfoFolder") and u109.PlayerInfoFolder:FindFirstChild("Progress") or not u109.Parent
        if u109 and (u109.Parent and (u109:FindFirstChild("PlayerInfoFolder") and u109.PlayerInfoFolder:FindFirstChild("Progress"))) then
            local u110 = u10.Resources.Player:Clone()
            u110.Name = u109.Name
            local u111 = nil
            u111 = not pcall(function() --[[Anonymous function at line 938]]
                --[[
                Upvalues:
                    [1] = u111
                    [2] = u5
                    [3] = u109
                --]]
                u111 = u5:GetUserThumbnailAsync(u109.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size420x420)
            end) and "http://www.roblox.com/asset/?id=6550973172" or u111
            u110.HeadImage.Image = u111
            u110.Parent = u10.Players
            u45(u110)
            u109.PlayerInfoFolder.Progress:GetPropertyChangedSignal("Value"):Connect(function() --[[Anonymous function at line 946]]
                --[[
                Upvalues:
                    [1] = u110
                    [2] = u109
                --]]
                u110:TweenPosition(UDim2.new(u109.PlayerInfoFolder.Progress.Value / 22, 0, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Bounce, 0.75, true)
            end)
            u110:TweenPosition(UDim2.new(u109.PlayerInfoFolder.Progress.Value / 22, 0, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Bounce, 0.75, true)
            u110.Visible = true
        end
    end
end
u5.PlayerAdded:Connect(function(u112) --[[Anonymous function at line 958]]
    --[[
    Upvalues:
        [1] = u10
        [2] = u5
        [3] = u45
    --]]
    repeat
        wait()
    until u112:FindFirstChild("PlayerInfoFolder") and u112.PlayerInfoFolder:FindFirstChild("Progress") or not u112.Parent
    if u112 and (u112.Parent and (u112:FindFirstChild("PlayerInfoFolder") and u112.PlayerInfoFolder:FindFirstChild("Progress"))) then
        local u113 = u10.Resources.Player:Clone()
        u113.Name = u112.Name
        local u114 = nil
        u114 = not pcall(function() --[[Anonymous function at line 965]]
            --[[
            Upvalues:
                [1] = u114
                [2] = u5
                [3] = u112
            --]]
            u114 = u5:GetUserThumbnailAsync(u112.UserId, Enum.ThumbnailType.HeadShot, Enum.ThumbnailSize.Size420x420)
        end) and "http://www.roblox.com/asset/?id=6550973172" or u114
        u113.HeadImage.Image = u114
        u113.Parent = u10.Players
        u45(u113)
        u112.PlayerInfoFolder.Progress:GetPropertyChangedSignal("Value"):Connect(function() --[[Anonymous function at line 973]]
            --[[
            Upvalues:
                [1] = u113
                [2] = u112
            --]]
            u113:TweenPosition(UDim2.new(u112.PlayerInfoFolder.Progress.Value / 22, 0, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Bounce, 0.75, true)
        end)
        u113:TweenPosition(UDim2.new(u112.PlayerInfoFolder.Progress.Value / 22, 0, 0, 0), Enum.EasingDirection.Out, Enum.EasingStyle.Bounce, 0.75, true)
        u113.Visible = true
    end
end)
u5.PlayerRemoving:Connect(function(p115) --[[Anonymous function at line 983]]
    --[[
    Upvalues:
        [1] = u10
    --]]
    local v116 = u10.Players:FindFirstChild(p115.Name)
    if v116 then
        v116:Destroy()
    end
end)
script.Archivable = false]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ItemEvents]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Sound" referent="230"><Properties><float name="RollOffMaxDistance">100</float><Content name="SoundId"><url><![CDATA[rbxassetid://2254042007]]></url></Content><float name="Volume">1</float><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Place]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Sound" referent="231"><Properties><float name="RollOffMaxDistance">100</float><Content name="SoundId"><url><![CDATA[rbxassetid://4381793351]]></url></Content><float name="Volume">2</float><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Unlock]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Sound" referent="232"><Properties><float name="RollOffMaxDistance">100</float><token name="RollOffMode">3</token><Content name="SoundId"><url><![CDATA[rbxassetid://537744814]]></url></Content><float name="Volume">1</float><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ButtonClick]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Sound" referent="233"><Properties><bool name="Looped">true</bool><float name="PlaybackSpeed">0.8999999761581421</float><float name="RollOffMaxDistance">100</float><Content name="SoundId"><url><![CDATA[rbxassetid://1846429548]]></url></Content><float name="Volume">0.25</float><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[SpaceAmbience]]></string><int64 name="SourceAssetId">1846429548</int64><BinaryString name="Tags"></BinaryString></Properties><Item class="PitchShiftSoundEffect" referent="234"><Properties><float name="Octave">0.5</float><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="Sound" referent="235"><Properties><float name="PlaybackSpeed">1.25</float><Content name="SoundId"><url><![CDATA[rbxassetid://1843035266]]></url></Content><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[StunSound]]></string><int64 name="SourceAssetId">1843035266</int64><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Sound" referent="236"><Properties><float name="PlaybackSpeed">0.5</float><float name="RollOffMaxDistance">100</float><token name="RollOffMode">3</token><Content name="SoundId"><url><![CDATA[rbxassetid://716565345]]></url></Content><float name="Volume">1</float><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Screw]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="PitchShiftSoundEffect" referent="237"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="Sound" referent="238"><Properties><float name="RollOffMaxDistance">100</float><token name="RollOffMode">3</token><Content name="SoundId"><url><![CDATA[rbxassetid://169054195]]></url></Content><float name="Volume">1.5</float><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[SpaceUnlock]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Sound" referent="239"><Properties><float name="RollOffMaxDistance">100</float><token name="RollOffMode">3</token><Content name="SoundId"><url><![CDATA[rbxassetid://1043479862]]></url></Content><float name="Volume">1</float><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Splat]]></string><int64 name="SourceAssetId">1043479862</int64><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Frame" referent="240"><Properties><Color3 name="BackgroundColor3"><R>1</R><G>1</G><B>1</B></Color3><Color3 name="BorderColor3"><R>0.10588236153125763</R><G>0.16470588743686676</G><B>0.20784315466880798</B></Color3><UDim2 name="Position"><XS>0.460999995470047</XS><XO>0</XO><YS>1</YS><YO>0</YO></UDim2><UDim2 name="Size"><XS>0.07825370877981186</XS><XO>0</XO><YS>0.12127659469842911</YS><YO>0</YO></UDim2><bool name="Visible">false</bool><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ToolBar]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="LocalScript" referent="241"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local u1 = script.Parent:WaitForChild("ViewportFrame")
local u2 = nil
local u3 = Instance.new("Camera")
u3.FieldOfView = 40
u3.Name = "vpfcam"
u3.Parent = u1.Parent
u1.CurrentCamera = u3
if u1:FindFirstChildOfClass("Model") then
    u1:FindFirstChildOfClass("Model"):Destroy()
end
if u1.Parent:FindFirstChild("vpfcam") then
    u1.Parent.vpfcam:Destroy()
end
local function u32(p4) --[[Anonymous function at line 16]]
    --[[
    Upvalues:
        [1] = u3
    --]]
    local u5 = 180
    local v6, v7 = p4:GetBoundingBox()
    local v8 = (v6 - v6.p):inverse()
    local u9 = v6 * v8
    local v10 = v8 * v7
    local v11 = v10.x
    local v12 = math.abs(v11)
    local v13 = v10.y
    local v14 = math.abs(v13)
    local v15 = v10.z
    local v16 = math.abs(v15)
    local v17 = Vector3.new(v12, v14, v16)
    local v18 = v17.x
    local v19 = v17.y
    local v20 = v17.z
    local v21 = math.max(v18, v19, v20)
    local v22 = u3.FieldOfView / 2
    local v23 = math.rad(v22)
    local v24 = math.tan(v23)
    local v25
    if v21 == v17.x then
        local v26 = v17.y * v17.y + v17.z * v17.z
        v25 = math.sqrt(v26) / 2
    elseif v21 == v17.y then
        local v27 = v17.x * v17.x + v17.z * v17.z
        v25 = math.sqrt(v27) / 2
    else
        local v28 = v17.x * v17.x + v17.y * v17.y
        v25 = math.sqrt(v28) / 2
    end
    local u29 = v21 / 2 / v24 + v25
    return game:GetService("RunService").RenderStepped:Connect(function(p30) --[[Anonymous function at line 39]]
        --[[
        Upvalues:
            [1] = u5
            [2] = u3
            [3] = u9
            [4] = u29
        --]]
        u5 = u5 + 1 * p30 * 60
        local v31 = u5
        u3.CFrame = u9 * CFrame.fromEulerAnglesYXZ(0, math.rad(v31), 0) * CFrame.new(0, 0, u29 + 1)
    end)
end
script.Parent:GetPropertyChangedSignal("Visible"):Connect(function() --[[Anonymous function at line 54]]
    --[[
    Upvalues:
        [1] = u1
        [2] = u3
        [3] = u2
        [4] = u32
    --]]
    local v33 = u1:FindFirstChildOfClass("Model")
    if script.Parent.Visible and v33 then
        if u1.Parent:FindFirstChild("vpfcam") then
            u1.Parent.vpfcam:Destroy()
        end
        u3 = Instance.new("Camera")
        u3.FieldOfView = 40
        u3.Name = "vpfcam"
        u3.Parent = u1.Parent
        u1.CurrentCamera = u3
        if u2 then
            u2:Disconnect()
        end
        u2 = u32(v33)
    else
        u2:Disconnect()
    end
end)
u1.ChildAdded:Connect(function(_) --[[Anonymous function at line 74]]
    --[[
    Upvalues:
        [1] = u1
        [2] = u3
        [3] = u2
        [4] = u32
    --]]
    local v34 = u1:FindFirstChildOfClass("Model")
    if v34 then
        if u1.Parent:FindFirstChild("vpfcam") then
            u1.Parent.vpfcam:Destroy()
        end
        u3 = Instance.new("Camera")
        u3.FieldOfView = 40
        u3.Name = "vpfcam"
        u3.Parent = u1.Parent
        u1.CurrentCamera = u3
        if u2 then
            u2:Disconnect()
        end
        u2 = u32(v34)
    else
        u2:Disconnect()
    end
end)
u1.ChildRemoved:Connect(function(_) --[[Anonymous function at line 94]]
    --[[
    Upvalues:
        [1] = u2
    --]]
    u2:Disconnect()
end)]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="UIAspectRatioConstraint" referent="242"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="UICorner" referent="243"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Frame" referent="244"><Properties><Color3 name="BackgroundColor3"><R>1</R><G>1</G><B>1</B></Color3><Color3 name="BorderColor3"><R>0.10588236153125763</R><G>0.16470588743686676</G><B>0.20784315466880798</B></Color3><UDim2 name="Position"><XS>0.05000000074505806</XS><XO>0</XO><YS>0.05000000074505806</YS><YO>0</YO></UDim2><UDim2 name="Size"><XS>0.8999999761581421</XS><XO>0</XO><YS>0.8999999761581421</YS><YO>0</YO></UDim2><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="UIAspectRatioConstraint" referent="245"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="UICorner" referent="246"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="UIGradient" referent="247"><Properties><ColorSequence name="Color">0 1 1 1 0 1 0 0 0 0 </ColorSequence><float name="Rotation">270</float><NumberSequence name="Transparency">0 0.20000000298023224 0 1 0.20000000298023224 0 </NumberSequence><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="Frame" referent="248"><Properties><Color3 name="BackgroundColor3"><R>0.5607843399047852</R><G>0.5607843399047852</G><B>0.5607843399047852</B></Color3><Color3 name="BorderColor3"><R>0.10588236153125763</R><G>0.16470588743686676</G><B>0.20784315466880798</B></Color3><UDim2 name="Position"><XS>-0.040566038340330124</XS><XO>0</XO><YS>0.9481132626533508</YS><YO>0</YO></UDim2><UDim2 name="Size"><XS>1.0783019065856934</XS><XO>0</XO><YS>0.2971698045730591</YS><YO>0</YO></UDim2><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[NameFrame]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="UICorner" referent="249"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="TextLabel" referent="250"><Properties><Font name="FontFace"><Family><url><![CDATA[rbxasset://fonts/families/GothamSSm.json]]></url></Family><Weight>900</Weight><Style>Normal</Style></Font><bool name="RichText">true</bool><string name="Text"><![CDATA[N/A]]></string><Color3 name="TextColor3"><R>1</R><G>1</G><B>1</B></Color3><bool name="TextScaled">true</bool><float name="TextSize">14</float><float name="TextStrokeTransparency">0</float><bool name="TextWrapped">true</bool><Color3 name="BackgroundColor3"><R>1</R><G>1</G><B>1</B></Color3><float name="BackgroundTransparency">1</float><Color3 name="BorderColor3"><R>0.10588236153125763</R><G>0.16470588743686676</G><B>0.20784315466880798</B></Color3><UDim2 name="Position"><XS>0.05599299818277359</XS><XO>0</XO><YS>0.05599300190806389</YS><YO>0</YO></UDim2><UDim2 name="Size"><XS>0.888014018535614</XS><XO>0</XO><YS>0.925796627998352</YS><YO>0</YO></UDim2><int name="ZIndex">2</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ToolName]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="UIAspectRatioConstraint" referent="251"><Properties><float name="AspectRatio">4</float><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="UICorner" referent="252"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="Frame" referent="253"><Properties><Color3 name="BackgroundColor3"><R>1</R><G>1</G><B>1</B></Color3><Color3 name="BorderColor3"><R>0.10588236153125763</R><G>0.16470588743686676</G><B>0.20784315466880798</B></Color3><UDim2 name="Position"><XS>0.05000000074505806</XS><XO>0</XO><YS>0.125</YS><YO>0</YO></UDim2><UDim2 name="Size"><XS>0.8999999761581421</XS><XO>0</XO><YS>0.75</YS><YO>0</YO></UDim2><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="UICorner" referent="254"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="UIGradient" referent="255"><Properties><ColorSequence name="Color">0 1 1 1 0 1 0.5764706134796143 0.5764706134796143 0.5764706134796143 0 </ColorSequence><float name="Rotation">270</float><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="UIGradient" referent="256"><Properties><ColorSequence name="Color">0 0.7921568751335144 0.7921568751335144 0.7921568751335144 0 1 0 0 0 0 </ColorSequence><float name="Rotation">90</float><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="UIGradient" referent="257"><Properties><ColorSequence name="Color">0 0.7921568751335144 0.7921568751335144 0.7921568751335144 0 0.9134775400161743 0.26362597942352295 0.26362597942352295 0.26362597942352295 0 1 0.6470588445663452 0.6470588445663452 0.6470588445663452 0 </ColorSequence><float name="Rotation">90</float><NumberSequence name="Transparency">0 0.20000000298023224 0 1 0.20000000298023224 0 </NumberSequence><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ViewportFrame" referent="258"><Properties><CoordinateFrame name="CameraCFrame"><X>0</X><Y>0</Y><Z>0</Z><R00>1</R00><R01>0</R01><R02>0</R02><R10>0</R10><R11>1</R11><R12>0</R12><R20>0</R20><R21>0</R21><R22>1</R22></CoordinateFrame><float name="CameraFieldOfView">1.2217305898666382</float><Color3 name="BackgroundColor3"><R>1</R><G>1</G><B>1</B></Color3><float name="BackgroundTransparency">0.6000000238418579</float><Color3 name="BorderColor3"><R>0.10588236153125763</R><G>0.16470588743686676</G><B>0.20784315466880798</B></Color3><UDim2 name="Position"><XS>0.05000000074505806</XS><XO>0</XO><YS>0.05000000074505806</YS><YO>0</YO></UDim2><UDim2 name="Size"><XS>0.8999999761581421</XS><XO>0</XO><YS>0.8999999761581421</YS><YO>0</YO></UDim2><int name="ZIndex">2</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="UICorner" referent="259"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item></Item><Item class="ImageLabel" referent="260"><Properties><Content name="Image"><url><![CDATA[rbxassetid://179245635]]></url></Content><float name="ImageTransparency">0.5</float><Color3 name="BackgroundColor3"><R>0</R><G>0</G><B>0</B></Color3><float name="BackgroundTransparency">1</float><Color3 name="BorderColor3"><R>0.10588236153125763</R><G>0.16470588743686676</G><B>0.20784315466880798</B></Color3><int name="BorderSizePixel">0</int><UDim2 name="Position"><XS>0</XS><XO>0</XO><YS>-0.10000000149011612</YS><YO>0</YO></UDim2><UDim2 name="Size"><XS>1</XS><XO>0</XO><YS>1.100000023841858</YS><YO>0</YO></UDim2><int name="ZIndex">0</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Vignette]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Frame" referent="261"><Properties><Color3 name="BackgroundColor3"><R>0.6392157077789307</R><G>0.6392157077789307</G><B>0.6392157077789307</B></Color3><Color3 name="BorderColor3"><R>0.10588236153125763</R><G>0.16470588743686676</G><B>0.20784315466880798</B></Color3><UDim2 name="Position"><XS>0.15870401263237</XS><XO>0</XO><YS>0.04765957593917847</YS><YO>0</YO></UDim2><UDim2 name="Size"><XS>0.6818780899047852</XS><XO>0</XO><YS>0.04127659648656845</YS><YO>0</YO></UDim2><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ProgressBar]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="UICorner" referent="262"><Properties><UDim name="CornerRadius"><S>0</S><O>24</O></UDim><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Frame" referent="263"><Properties><Color3 name="BackgroundColor3"><R>1</R><G>1</G><B>1</B></Color3><Color3 name="BorderColor3"><R>0.10588236153125763</R><G>0.16470588743686676</G><B>0.20784315466880798</B></Color3><UDim2 name="Position"><XS>0.013000000268220901</XS><XO>0</XO><YS>0.125</YS><YO>0</YO></UDim2><UDim2 name="Size"><XS>0.9750000238418579</XS><XO>0</XO><YS>0.75</YS><YO>0</YO></UDim2><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="UICorner" referent="264"><Properties><UDim name="CornerRadius"><S>0</S><O>24</O></UDim><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="UIGradient" referent="265"><Properties><ColorSequence name="Color">0 1 1 0 0 0.5239999890327454 1 0.6666666865348816 0 0 0.5249999761581421 0 0.6666666865348816 1 0 1 0 0.3333333432674408 0.49803921580314636 0 </ColorSequence><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="Frame" referent="266"><Properties><Color3 name="BackgroundColor3"><R>1</R><G>1</G><B>1</B></Color3><Color3 name="BorderColor3"><R>0.10588236153125763</R><G>0.16470588743686676</G><B>0.20784315466880798</B></Color3><UDim2 name="Position"><XS>0.013000000268220901</XS><XO>0</XO><YS>0.125</YS><YO>0</YO></UDim2><UDim2 name="Size"><XS>0.9750000238418579</XS><XO>0</XO><YS>0.75</YS><YO>0</YO></UDim2><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="UICorner" referent="267"><Properties><UDim name="CornerRadius"><S>0</S><O>24</O></UDim><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="UIGradient" referent="268"><Properties><ColorSequence name="Color">0 1 1 1 0 0.5 0.16470588743686676 0.16470588743686676 0.16470588743686676 0 1 0 0 0 0 </ColorSequence><float name="Rotation">90</float><NumberSequence name="Transparency">0 0.699999988079071 0 1 0.699999988079071 0 </NumberSequence><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="UIGradient" referent="269"><Properties><ColorSequence name="Color">0 1 1 1 0 1 0 0 0 0 </ColorSequence><float name="Rotation">90</float><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ImageLabel" referent="270"><Properties><Content name="Image"><url><![CDATA[http://www.roblox.com/asset/?id=7257356586]]></url></Content><Color3 name="BackgroundColor3"><R>1</R><G>1</G><B>1</B></Color3><float name="BackgroundTransparency">1</float><Color3 name="BorderColor3"><R>0.10588236153125763</R><G>0.16470588743686676</G><B>0.20784315466880798</B></Color3><int name="BorderSizePixel">0</int><UDim2 name="Position"><XS>0.49000000953674316</XS><XO>0</XO><YS>-0.17000000178813934</YS><YO>0</YO></UDim2><UDim2 name="Size"><XS>0.05947493761777878</XS><XO>0</XO><YS>1.7082480192184448</YS><YO>0</YO></UDim2><int name="ZIndex">2</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Rocket]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="UIAspectRatioConstraint" referent="271"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="ImageLabel" referent="272"><Properties><Content name="Image"><url><![CDATA[rbxassetid://3064960343]]></url></Content><Color3 name="ImageColor3"><R>0</R><G>1</G><B>0</B></Color3><Color3 name="BackgroundColor3"><R>1</R><G>1</G><B>1</B></Color3><float name="BackgroundTransparency">1</float><Color3 name="BorderColor3"><R>0.10588236153125763</R><G>0.16470588743686676</G><B>0.20784315466880798</B></Color3><int name="BorderSizePixel">0</int><UDim2 name="Position"><XS>0.9701207876205444</XS><XO>0</XO><YS>-0.2624742388725281</YS><YO>0</YO></UDim2><UDim2 name="Size"><XS>0.05947493761777878</XS><XO>0</XO><YS>1.7082480192184448</YS><YO>0</YO></UDim2><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Flag]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="UIAspectRatioConstraint" referent="273"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="Frame" referent="274"><Properties><Color3 name="BackgroundColor3"><R>1</R><G>1</G><B>1</B></Color3><float name="BackgroundTransparency">1</float><Color3 name="BorderColor3"><R>0.10588236153125763</R><G>0.16470588743686676</G><B>0.20784315466880798</B></Color3><int name="BorderSizePixel">0</int><UDim2 name="Position"><XS>0.01299999188631773</XS><XO>0</XO><YS>-1.0103092193603516</YS><YO>0</YO></UDim2><UDim2 name="Size"><XS>0.9750000238418579</XS><XO>0</XO><YS>1</YS><YO>0</YO></UDim2><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Players]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Folder" referent="275"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Resources]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="Frame" referent="276"><Properties><Color3 name="BackgroundColor3"><R>0.3333333432674408</R><G>1</G><B>1</B></Color3><Color3 name="BorderColor3"><R>0.10588236153125763</R><G>0.16470588743686676</G><B>0.20784315466880798</B></Color3><int name="BorderSizePixel">3</int><UDim2 name="Size"><XS>1</XS><XO>0</XO><YS>1</YS><YO>0</YO></UDim2><bool name="Visible">false</bool><int name="ZIndex">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Player]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="UIAspectRatioConstraint" referent="277"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ImageLabel" referent="278"><Properties><Content name="Image"><url><![CDATA[rbxassetid://358086049]]></url></Content><Color3 name="BackgroundColor3"><R>1</R><G>1</G><B>1</B></Color3><float name="BackgroundTransparency">1</float><Color3 name="BorderColor3"><R>0.10588236153125763</R><G>0.16470588743686676</G><B>0.20784315466880798</B></Color3><int name="BorderSizePixel">0</int><UDim2 name="Size"><XS>1</XS><XO>0</XO><YS>1</YS><YO>0</YO></UDim2><int name="ZIndex">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[HeadImage]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="TextLabel" referent="279"><Properties><Font name="FontFace"><Family><url><![CDATA[rbxasset://fonts/families/GothamSSm.json]]></url></Family><Weight>900</Weight><Style>Normal</Style></Font><bool name="RichText">true</bool><string name="Text"><![CDATA[V]]></string><Color3 name="TextColor3"><R>0</R><G>1</G><B>1</B></Color3><bool name="TextScaled">true</bool><float name="TextSize">14</float><float name="TextStrokeTransparency">0</float><bool name="TextWrapped">true</bool><Color3 name="BackgroundColor3"><R>1</R><G>1</G><B>1</B></Color3><float name="BackgroundTransparency">1</float><Color3 name="BorderColor3"><R>0.10588236153125763</R><G>0.16470588743686676</G><B>0.20784315466880798</B></Color3><int name="BorderSizePixel">0</int><UDim2 name="Position"><XS>0.25</XS><XO>0</XO><YS>1</YS><YO>0</YO></UDim2><UDim2 name="Size"><XS>0.5</XS><XO>0</XO><YS>0.5</YS><YO>0</YO></UDim2><int name="ZIndex">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="UIGradient" referent="280"><Properties><ColorSequence name="Color">0 1 1 1 0 1 0.3686274588108063 0.3686274588108063 0.3686274588108063 0 </ColorSequence><float name="Rotation">45</float><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item></Item></Item><Item class="ImageLabel" referent="281"><Properties><Content name="Image"><url><![CDATA[http://www.roblox.com/asset/?id=190596490]]></url></Content><Color3 name="ImageColor3"><R>1</R><G>0.3333333432674408</G><B>0</B></Color3><float name="ImageTransparency">1</float><Color3 name="BackgroundColor3"><R>1</R><G>1</G><B>1</B></Color3><float name="BackgroundTransparency">1</float><Color3 name="BorderColor3"><R>0.10588236153125763</R><G>0.16470588743686676</G><B>0.20784315466880798</B></Color3><int name="BorderSizePixel">0</int><UDim2 name="Position"><XS>0</XS><XO>0</XO><YS>-0.10042553395032883</YS><YO>0</YO></UDim2><UDim2 name="Size"><XS>1</XS><XO>0</XO><YS>1.100000023841858</YS><YO>0</YO></UDim2><bool name="Visible">false</bool><int name="ZIndex">0</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[BonkEffect]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="TextLabel" referent="282"><Properties><Font name="FontFace"><Family><url><![CDATA[rbxasset://fonts/families/Bangers.json]]></url></Family><Weight>400</Weight><Style>Normal</Style></Font><bool name="RichText">true</bool><string name="Text"><![CDATA[STUNNED!]]></string><Color3 name="TextColor3"><R>1</R><G>0.3333333432674408</G><B>0</B></Color3><bool name="TextScaled">true</bool><float name="TextSize">14</float><float name="TextStrokeTransparency">0</float><bool name="TextWrapped">true</bool><Color3 name="BackgroundColor3"><R>1</R><G>1</G><B>1</B></Color3><float name="BackgroundTransparency">1</float><Color3 name="BorderColor3"><R>0.10588236153125763</R><G>0.16470588743686676</G><B>0.20784315466880798</B></Color3><int name="BorderSizePixel">0</int><UDim2 name="Position"><XS>1</XS><XO>0</XO><YS>0.367000013589859</YS><YO>0</YO></UDim2><float name="Rotation">30</float><UDim2 name="Size"><XS>0.07424155622720718</XS><XO>0</XO><YS>0.05319149047136307</YS><YO>0</YO></UDim2><bool name="Visible">false</bool><int name="ZIndex">5</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Stun]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Frame" referent="283"><Properties><Color3 name="BackgroundColor3"><R>1</R><G>1</G><B>0</B></Color3><float name="BackgroundTransparency">0.8999999761581421</float><Color3 name="BorderColor3"><R>0.10588236153125763</R><G>0.16470588743686676</G><B>0.20784315466880798</B></Color3><int name="BorderSizePixel">0</int><UDim2 name="Size"><XS>1</XS><XO>0</XO><YS>1</YS><YO>0</YO></UDim2><bool name="Visible">false</bool><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[EggSplatEffect]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="ImageLabel" referent="284"><Properties><Content name="Image"><url><![CDATA[http://www.roblox.com/asset/?id=179123233]]></url></Content><Color3 name="ImageColor3"><R>1</R><G>0.7843137979507446</G><B>0</B></Color3><Color3 name="BackgroundColor3"><R>1</R><G>1</G><B>1</B></Color3><float name="BackgroundTransparency">1</float><Color3 name="BorderColor3"><R>0.10588236153125763</R><G>0.16470588743686676</G><B>0.20784315466880798</B></Color3><int name="BorderSizePixel">0</int><UDim2 name="Position"><XS>0.375</XS><XO>0</XO><YS>0.375</YS><YO>0</YO></UDim2><UDim2 name="Size"><XS>0.25</XS><XO>0</XO><YS>0.25</YS><YO>0</YO></UDim2><int name="ZIndex">2</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[EggSplat]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ImageLabel" referent="285"><Properties><Content name="Image"><url><![CDATA[http://www.roblox.com/asset/?id=177997841]]></url></Content><Color3 name="BackgroundColor3"><R>1</R><G>1</G><B>1</B></Color3><float name="BackgroundTransparency">1</float><Color3 name="BorderColor3"><R>0.10588236153125763</R><G>0.16470588743686676</G><B>0.20784315466880798</B></Color3><int name="BorderSizePixel">0</int><UDim2 name="Size"><XS>1</XS><XO>0</XO><YS>1</YS><YO>0</YO></UDim2><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[EggSplat]]></string><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="Frame" referent="286"><Properties><Color3 name="BackgroundColor3"><R>1</R><G>1</G><B>1</B></Color3><Color3 name="BorderColor3"><R>0.10588236153125763</R><G>0.16470588743686676</G><B>0.20784315466880798</B></Color3><UDim2 name="Position"><XS>0.5540000200271606</XS><XO>0</XO><YS>1</YS><YO>0</YO></UDim2><UDim2 name="Size"><XS>0.07242893427610397</XS><XO>0</XO><YS>0.11406498402357101</YS><YO>0</YO></UDim2><bool name="Visible">false</bool><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[DropItem]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="UIAspectRatioConstraint" referent="287"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="UICorner" referent="288"><Properties><UDim name="CornerRadius"><S>1</S><O>8</O></UDim><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ImageButton" referent="289"><Properties><Content name="Image"><url><![CDATA[http://www.roblox.com/asset/?id=7491255325]]></url></Content><Color3 name="ImageColor3"><R>0</R><G>0</G><B>0</B></Color3><Color3 name="BackgroundColor3"><R>1</R><G>1</G><B>1</B></Color3><float name="BackgroundTransparency">0.6000000238418579</float><UDim2 name="Position"><XS>0.05000000074505806</XS><XO>0</XO><YS>0.05000000074505806</YS><YO>0</YO></UDim2><UDim2 name="Size"><XS>0.8999999761581421</XS><XO>0</XO><YS>0.8999999761581421</YS><YO>0</YO></UDim2><int name="ZIndex">2</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="UICorner" referent="290"><Properties><UDim name="CornerRadius"><S>1</S><O>8</O></UDim><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="Frame" referent="291"><Properties><Color3 name="BackgroundColor3"><R>1</R><G>1</G><B>1</B></Color3><Color3 name="BorderColor3"><R>0.10588236153125763</R><G>0.16470588743686676</G><B>0.20784315466880798</B></Color3><UDim2 name="Position"><XS>0.05000000074505806</XS><XO>0</XO><YS>0.05000000074505806</YS><YO>0</YO></UDim2><UDim2 name="Size"><XS>0.8999999761581421</XS><XO>0</XO><YS>0.8999999761581421</YS><YO>0</YO></UDim2><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties><Item class="UIAspectRatioConstraint" referent="292"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="UICorner" referent="293"><Properties><UDim name="CornerRadius"><S>1</S><O>8</O></UDim><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="UIGradient" referent="294"><Properties><ColorSequence name="Color">0 1 1 1 0 1 0 0 0 0 </ColorSequence><float name="Rotation">270</float><NumberSequence name="Transparency">0 0.20000000298023224 0 1 0.20000000298023224 0 </NumberSequence><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="UIGradient" referent="295"><Properties><ColorSequence name="Color">0 0.7921568751335144 0.7921568751335144 0.7921568751335144 0 1 0.26274511218070984 0.26274511218070984 0.26274511218070984 0 </ColorSequence><float name="Rotation">90</float><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ImageLabel" referent="296"><Properties><Content name="Image"><url><![CDATA[http://www.roblox.com/asset/?id=3202649863]]></url></Content><token name="ScaleType">1</token><Color3 name="BackgroundColor3"><R>1</R><G>1</G><B>1</B></Color3><float name="BackgroundTransparency">1</float><Color3 name="BorderColor3"><R>0.10588236153125763</R><G>0.16470588743686676</G><B>0.20784315466880798</B></Color3><int name="BorderSizePixel">0</int><UDim2 name="Position"><XS>0.6962509751319885</XS><XO>0</XO><YS>0</YS><YO>0</YO></UDim2><UDim2 name="Size"><XS>0.30000001192092896</XS><XO>0</XO><YS>0.30000001192092896</YS><YO>0</YO></UDim2><bool name="Visible">false</bool><int name="ZIndex">3</int><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[DeviceImage]]></string><BinaryString name="Tags"></BinaryString></Properties></Item></Item></Item></Item><Item class="StarterPack" referent="297"><Properties><BinaryString name="AttributesSerialize"></BinaryString><SecurityCapabilities name="Capabilities">0</SecurityCapabilities><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[StarterPack]]></string><int64 name="SourceAssetId">-1</int64><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="StarterPlayer" referent="298"><Properties><bool name="AllowCustomAnimations">false</bool><bool name="AutoJumpEnabled">true</bool><token name="AvatarJointUpgrade_SerializedRollout">0</token><float name="CameraMaxZoomDistance">15</float><float name="CameraMinZoomDistance">0.5</float><token name="CameraMode">0</token><float name="CharacterJumpHeight">7.199999809265137</float><float name="CharacterJumpPower">30</float><float name="CharacterMaxSlopeAngle">89</float><bool name="CharacterUseJumpPower">true</bool><float name="CharacterWalkSpeed">15</float><token name="DevCameraOcclusionMode">0</token><token name="DevComputerCameraMovementMode">0</token><token name="DevComputerMovementMode">0</token><token name="DevTouchCameraMovementMode">0</token><token name="DevTouchMovementMode">0</token><token name="EnableDynamicHeads">0</token><bool name="EnableMouseLockOption">false</bool><int64 name="GameSettingsAssetIDFace">0</int64><int64 name="GameSettingsAssetIDHead">0</int64><int64 name="GameSettingsAssetIDLeftArm">0</int64><int64 name="GameSettingsAssetIDLeftLeg">0</int64><int64 name="GameSettingsAssetIDPants">0</int64><int64 name="GameSettingsAssetIDRightArm">0</int64><int64 name="GameSettingsAssetIDRightLeg">0</int64><int64 name="GameSettingsAssetIDShirt">0</int64><int64 name="GameSettingsAssetIDTeeShirt">0</int64><int64 name="GameSettingsAssetIDTorso">0</int64><token name="GameSettingsAvatar">1</token><token name="GameSettingsR15Collision">0</token><NumberRange name="GameSettingsScaleRangeBodyType">0 1</NumberRange><NumberRange name="GameSettingsScaleRangeHead">0.949999988079071 1</NumberRange><NumberRange name="GameSettingsScaleRangeHeight">0.8999999761581421 1.0499999523162842</NumberRange><NumberRange name="GameSettingsScaleRangeProportion">0 1</NumberRange><NumberRange name="GameSettingsScaleRangeWidth">0.699999988079071 1</NumberRange><float name="HealthDisplayDistance">0</float><bool name="LoadCharacterAppearance">true</bool><token name="LoadCharacterLayeredClothing">0</token><token name="LuaCharacterController">0</token><float name="NameDisplayDistance">25</float><bool name="UserEmotesEnabled">false</bool><BinaryString name="AttributesSerialize"></BinaryString><SecurityCapabilities name="Capabilities">0</SecurityCapabilities><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[StarterPlayer]]></string><int64 name="SourceAssetId">-1</int64><BinaryString name="Tags"></BinaryString></Properties><Item class="StarterPlayerScripts" referent="299"><Properties><BinaryString name="AttributesSerialize"></BinaryString><SecurityCapabilities name="Capabilities">0</SecurityCapabilities><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[StarterPlayerScripts]]></string><int64 name="SourceAssetId">-1</int64><BinaryString name="Tags"></BinaryString></Properties><Item class="LocalScript" referent="300"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1 = game:GetService("UserInputService")
local v2 = game:GetService("GuiService")
local u3 = game:GetService("Players").LocalPlayer
local u4 = u3:GetMouse()
local function u7(p5, p6) --[[Anonymous function at line 19]]
    if not p5 or (not p5:IsA("BasePart") or p5.Transparency < 1 and (string.lower(p5.Name) ~= "water" and (p5.Name ~= "Effect" and (p5.Name ~= "Rocket" and (p5.Name ~= "Bullet" and (p5.Name ~= "Handle" and not (p5.Parent and (p5.Parent:IsA("Accessory") or (p5.Parent:IsA("Tool") or p5.Parent:IsA("Hat")))))))))) then
        return false
    end
    table.insert(p6, p5)
    return true, p6
end
local function u17(p8, p9, p10, p11) --[[Anonymous function at line 30]]
    --[[
    Upvalues:
        [1] = u7
        [2] = u17
    --]]
    local v12 = p10 or {}
    local v13 = RaycastParams.new()
    v13.FilterType = Enum.RaycastFilterType.Blacklist
    v13.FilterDescendantsInstances = v12
    v13.IgnoreWater = true
    local v14 = workspace:Raycast(p8, p9, v13)
    if v14 and v14.Instance then
        local v15, v16 = u7(v14.Instance, v12)
        if v15 and v16 then
            return u17(p8, p9, v16, false)
        end
    end
    if p11 or not (v14 and v14.Instance) then
        return nil
    else
        return v14.Instance
    end
end
if (v2:IsTenFootInterface() and "Console" or (v1.TouchEnabled and not v1.MouseEnabled and "Mobile" or "Desktop")) == "Desktop" then
    v1.InputChanged:Connect(function(p18, p19) --[[Anonymous function at line 58]]
        --[[
        Upvalues:
            [1] = u3
            [2] = u4
            [3] = u17
        --]]
        if not p19 then
            if p18.UserInputType == Enum.UserInputType.MouseMovement then
                if not u3.Character then
                    return
                end
                if not u4 then
                    u4 = u3:GetMouse()
                end
                local v20 = u4.UnitRay
                local v21 = u17(v20.Origin, v20.Direction * 40, nil, true)
                if v21 and (u3.Character and v21:FindFirstChildOfClass("ClickDetector")) then
                    local v22 = v21:FindFirstChildOfClass("ClickDetector")
                    if v22.MaxActivationDistance >= u3:DistanceFromCharacter(v21.Position) then
                        if v22 and v22.CursorIcon ~= "" then
                            u4.Icon = v22.CursorIcon
                        else
                            u4.Icon = "rbxasset://textures\\DragCursor.png"
                        end
                    end
                else
                    u4.Icon = ""
                end
            end
        end
    end)
end
local u23 = true
u4.Button1Down:Connect(function() --[[Anonymous function at line 86]]
    --[[
    Upvalues:
        [1] = u3
        [2] = u4
        [3] = u17
        [4] = u23
    --]]
    if u3.Character then
        if not u4 then
            u4 = u3:GetMouse()
        end
        local v24 = u4.UnitRay
        local v25 = u17(v24.Origin, v24.Direction * 40, nil, true)
        if v25 and (u23 and (u3.Character and (v25:FindFirstChildOfClass("ClickDetector") and v25:FindFirstChildOfClass("ClickDetector").MaxActivationDistance >= u3:DistanceFromCharacter(v25.Position)))) then
            local v26 = v25:FindFirstChildOfClass("RemoteEvent")
            if v26 and u23 then
                u23 = false
                v26:FireServer()
                wait(0.05)
                u23 = true
            end
        end
    end
end)]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[CustomMouse]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="301"><Properties><ProtectedString name="Source"><![CDATA[-- Ignored]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[PlayerModule]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="ModuleScript" referent="302"><Properties><ProtectedString name="Source"><![CDATA[-- Ignored]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ControlModule]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="ModuleScript" referent="303"><Properties><ProtectedString name="Source"><![CDATA[-- Ignored]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[VRNavigation]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="304"><Properties><ProtectedString name="Source"><![CDATA[-- Ignored]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[TouchThumbstick]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="305"><Properties><ProtectedString name="Source"><![CDATA[-- Ignored]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Keyboard]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="306"><Properties><ProtectedString name="Source"><![CDATA[-- Ignored]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[BaseCharacterController]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="307"><Properties><ProtectedString name="Source"><![CDATA[-- Ignored]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[TouchJump]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="308"><Properties><ProtectedString name="Source"><![CDATA[-- Ignored]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[PathDisplay]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="309"><Properties><ProtectedString name="Source"><![CDATA[-- Ignored]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[DynamicThumbstick]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="310"><Properties><ProtectedString name="Source"><![CDATA[-- Ignored]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ClickToMoveController]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="311"><Properties><ProtectedString name="Source"><![CDATA[-- Ignored]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[VehicleController]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="312"><Properties><ProtectedString name="Source"><![CDATA[-- Ignored]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ClickToMoveDisplay]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="313"><Properties><ProtectedString name="Source"><![CDATA[-- Ignored]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Gamepad]]></string><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="ModuleScript" referent="314"><Properties><ProtectedString name="Source"><![CDATA[-- Ignored]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[CameraModule]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="ModuleScript" referent="315"><Properties><ProtectedString name="Source"><![CDATA[-- Ignored]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[TransparencyController]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="316"><Properties><ProtectedString name="Source"><![CDATA[-- Ignored]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[OrbitalCamera]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="317"><Properties><ProtectedString name="Source"><![CDATA[-- Ignored]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[MouseLockController]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="318"><Properties><ProtectedString name="Source"><![CDATA[-- Ignored]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ClassicCamera]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="319"><Properties><ProtectedString name="Source"><![CDATA[-- Ignored]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[CameraUtils]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="320"><Properties><ProtectedString name="Source"><![CDATA[-- Ignored]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Poppercam]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="321"><Properties><ProtectedString name="Source"><![CDATA[-- Ignored]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[CameraToggleStateController]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="322"><Properties><ProtectedString name="Source"><![CDATA[-- Ignored]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[CameraInput]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="323"><Properties><ProtectedString name="Source"><![CDATA[-- Ignored]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[BaseOcclusion]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="324"><Properties><ProtectedString name="Source"><![CDATA[-- Ignored]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[BaseCamera]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="325"><Properties><ProtectedString name="Source"><![CDATA[-- Ignored]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ZoomController]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="ModuleScript" referent="326"><Properties><ProtectedString name="Source"><![CDATA[-- Ignored]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Popper]]></string><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="ModuleScript" referent="327"><Properties><ProtectedString name="Source"><![CDATA[-- Ignored]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[CameraUI]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="328"><Properties><ProtectedString name="Source"><![CDATA[-- Ignored]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[LegacyCamera]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="329"><Properties><ProtectedString name="Source"><![CDATA[-- Ignored]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Invisicam]]></string><BinaryString name="Tags"></BinaryString></Properties></Item></Item></Item><Item class="LocalScript" referent="330"><Properties><ProtectedString name="Source"><![CDATA[-- Ignored]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[RbxCharacterSounds]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="ModuleScript" referent="331"><Properties><ProtectedString name="Source"><![CDATA[-- Ignored]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[AtomicBinding]]></string><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="LocalScript" referent="332"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

require(script.Parent:WaitForChild("PlayerModule"))]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[PlayerScriptsLoader]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="LocalScript" referent="333"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local u1 = game:GetService("StarterGui")
local v2 = game:GetService("GuiService")
local v3 = game:GetService("Chat")
local v4 = game:GetService("ReplicatedStorage")
local v5 = v3:WaitForChild("ClientChatModules")
local u6 = require(v5:WaitForChild("ChatSettings"))
local function v47() --[[Anonymous function at line 16]]
    --[[
    Upvalues:
        [1] = u6
    --]]
    local u7 = require(script:WaitForChild("ChatMain"))
    local v8 = {
        ["ChatWindow"] = {},
        ["SetCore"] = {},
        ["GetCore"] = {}
    }
    v8.ChatWindow.ChatTypes = {}
    v8.ChatWindow.ChatTypes.BubbleChatEnabled = u6.BubbleChatEnabled
    v8.ChatWindow.ChatTypes.ClassicChatEnabled = u6.ClassicChatEnabled
    local v9 = Instance.new("BindableEvent")
    v9.Name = "ToggleVisibility"
    v8.ChatWindow.ToggleVisibility = v9
    local u10 = "ToggleVisibility"
    v9.Event:connect(function(...) --[[Anonymous function at line 34]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u10
        --]]
        u7[u10](u7, ...)
    end)
    local v11 = Instance.new("BindableEvent")
    v11.Name = "SetVisible"
    v8.ChatWindow.SetVisible = v11
    local u12 = "SetVisible"
    v11.Event:connect(function(...) --[[Anonymous function at line 34]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u12
        --]]
        u7[u12](u7, ...)
    end)
    local v13 = Instance.new("BindableEvent")
    v13.Name = "FocusChatBar"
    v8.ChatWindow.FocusChatBar = v13
    local u14 = "FocusChatBar"
    v13.Event:connect(function(...) --[[Anonymous function at line 34]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u14
        --]]
        u7[u14](u7, ...)
    end)
    local v15 = Instance.new("BindableEvent")
    v15.Name = "EnterWhisperState"
    v8.ChatWindow.EnterWhisperState = v15
    local u16 = "EnterWhisperState"
    v15.Event:connect(function(...) --[[Anonymous function at line 34]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u16
        --]]
        u7[u16](u7, ...)
    end)
    local v17 = Instance.new("BindableFunction")
    v17.Name = "GetVisibility"
    v8.ChatWindow.GetVisibility = v17
    local u18 = "GetVisibility"
    function v17.OnInvoke(...) --[[Anonymous function at line 42]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u18
        --]]
        return u7[u18](u7, ...)
    end
    local v19 = Instance.new("BindableFunction")
    v19.Name = "GetMessageCount"
    v8.ChatWindow.GetMessageCount = v19
    local u20 = "GetMessageCount"
    function v19.OnInvoke(...) --[[Anonymous function at line 42]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u20
        --]]
        return u7[u20](u7, ...)
    end
    local v21 = Instance.new("BindableEvent")
    v21.Name = "TopbarEnabledChanged"
    v8.ChatWindow.TopbarEnabledChanged = v21
    local u22 = "TopbarEnabledChanged"
    v21.Event:connect(function(...) --[[Anonymous function at line 34]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u22
        --]]
        u7[u22](u7, ...)
    end)
    local v23 = Instance.new("BindableFunction")
    v23.Name = "IsFocused"
    v8.ChatWindow.IsFocused = v23
    local u24 = "IsFocused"
    function v23.OnInvoke(...) --[[Anonymous function at line 42]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u24
        --]]
        return u7[u24](u7, ...)
    end
    local u25 = Instance.new("BindableEvent")
    u25.Name = "ChatBarFocusChanged"
    v8.ChatWindow.ChatBarFocusChanged = u25
    u7.ChatBarFocusChanged:connect(function(...) --[[Anonymous function at line 50]]
        --[[
        Upvalues:
            [1] = u25
        --]]
        u25:Fire(...)
    end)
    local u26 = Instance.new("BindableEvent")
    u26.Name = "VisibilityStateChanged"
    v8.ChatWindow.VisibilityStateChanged = u26
    u7.VisibilityStateChanged:connect(function(...) --[[Anonymous function at line 50]]
        --[[
        Upvalues:
            [1] = u26
        --]]
        u26:Fire(...)
    end)
    local u27 = Instance.new("BindableEvent")
    u27.Name = "MessagesChanged"
    v8.ChatWindow.MessagesChanged = u27
    u7.MessagesChanged:connect(function(...) --[[Anonymous function at line 50]]
        --[[
        Upvalues:
            [1] = u27
        --]]
        u27:Fire(...)
    end)
    local u28 = Instance.new("BindableEvent")
    u28.Name = "MessagePosted"
    v8.ChatWindow.MessagePosted = u28
    u7.MessagePosted:connect(function(...) --[[Anonymous function at line 50]]
        --[[
        Upvalues:
            [1] = u28
        --]]
        u28:Fire(...)
    end)
    local v29 = Instance.new("BindableEvent")
    v29.Name = "CoreGuiEnabled"
    v8.ChatWindow.CoreGuiEnabled = v29
    local u30 = "CoreGuiEnabled"
    v29.Event:connect(function(...) --[[Anonymous function at line 58]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u30
        --]]
        u7[u30]:fire(...)
    end)
    local v31 = Instance.new("BindableEvent")
    v31.Name = "ChatMakeSystemMessage"
    v8.SetCore.ChatMakeSystemMessage = v31
    local u32 = "ChatMakeSystemMessage"
    v31.Event:connect(function(...) --[[Anonymous function at line 66]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u32
        --]]
        u7[u32 .. "Event"]:fire(...)
    end)
    local v33 = Instance.new("BindableEvent")
    v33.Name = "ChatWindowPosition"
    v8.SetCore.ChatWindowPosition = v33
    local u34 = "ChatWindowPosition"
    v33.Event:connect(function(...) --[[Anonymous function at line 66]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u34
        --]]
        u7[u34 .. "Event"]:fire(...)
    end)
    local v35 = Instance.new("BindableEvent")
    v35.Name = "ChatWindowSize"
    v8.SetCore.ChatWindowSize = v35
    local u36 = "ChatWindowSize"
    v35.Event:connect(function(...) --[[Anonymous function at line 66]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u36
        --]]
        u7[u36 .. "Event"]:fire(...)
    end)
    local v37 = Instance.new("BindableFunction")
    v37.Name = "ChatWindowPosition"
    v8.GetCore.ChatWindowPosition = v37
    local u38 = "ChatWindowPosition"
    function v37.OnInvoke(...) --[[Anonymous function at line 74]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u38
        --]]
        return u7["f" .. u38](...)
    end
    local v39 = Instance.new("BindableFunction")
    v39.Name = "ChatWindowSize"
    v8.GetCore.ChatWindowSize = v39
    local u40 = "ChatWindowSize"
    function v39.OnInvoke(...) --[[Anonymous function at line 74]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u40
        --]]
        return u7["f" .. u40](...)
    end
    local v41 = Instance.new("BindableEvent")
    v41.Name = "ChatBarDisabled"
    v8.SetCore.ChatBarDisabled = v41
    local u42 = "ChatBarDisabled"
    v41.Event:connect(function(...) --[[Anonymous function at line 66]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u42
        --]]
        u7[u42 .. "Event"]:fire(...)
    end)
    local v43 = Instance.new("BindableFunction")
    v43.Name = "ChatBarDisabled"
    v8.GetCore.ChatBarDisabled = v43
    local u44 = "ChatBarDisabled"
    function v43.OnInvoke(...) --[[Anonymous function at line 74]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u44
        --]]
        return u7["f" .. u44](...)
    end
    local v45 = Instance.new("BindableEvent")
    v45.Name = "SpecialKeyPressed"
    v8.ChatWindow.SpecialKeyPressed = v45
    local u46 = "SpecialKeyPressed"
    v45.Event:connect(function(...) --[[Anonymous function at line 34]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u46
        --]]
        u7[u46](u7, ...)
    end)
    SetCoreGuiChatConnections(v8)
end
function SetCoreGuiChatConnections(u48)
    --[[
    Upvalues:
        [1] = u1
    --]]
    local v49 = 0
    while v49 < 10 do
        v49 = v49 + 1
        local v50, v51 = pcall(function() --[[Anonymous function at line 111]]
            --[[
            Upvalues:
                [1] = u1
                [2] = u48
            --]]
            u1:SetCore("CoreGuiChatConnections", u48)
        end)
        if v50 then
            break
        end
        if not v50 and v49 == 10 then
            error("Error calling SetCore CoreGuiChatConnections: " .. v51)
        end
        wait()
    end
end
function checkBothChatTypesDisabled()
    --[[
    Upvalues:
        [1] = u6
    --]]
    if u6.BubbleChatEnabled == nil or u6.ClassicChatEnabled == nil then
        return false
    else
        return not (u6.BubbleChatEnabled or u6.ClassicChatEnabled)
    end
end
if v2:IsTenFootInterface() then
    v4:WaitForChild("DefaultChatSystemChatEvents").GetInitDataRequest:InvokeServer()
    return
elseif checkBothChatTypesDisabled() then
    local v52 = {
        ["ChatWindow"] = {}
    }
    v52.ChatWindow.ChatTypes = {}
    v52.ChatWindow.ChatTypes.BubbleChatEnabled = false
    v52.ChatWindow.ChatTypes.ClassicChatEnabled = false
    SetCoreGuiChatConnections(v52)
else
    v47()
end]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ChatScript]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="ModuleScript" referent="334"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local u1 = {
    ["Visible"] = nil,
    ["IsCoreGuiEnabled"] = nil,
    ["TopbarEnabled"] = nil,
    ["VisibilityStateChanged"] = nil
}
local v2, v3 = pcall(function() --[[Anonymous function at line 22]]
    return UserSettings():IsUserFeatureEnabled("UserHandleFriendJoinNotifierOnClient")
end)
if not v2 then
    v3 = false
end
local v4, v5 = pcall(function() --[[Anonymous function at line 32]]
    return UserSettings():IsUserFeatureEnabled("UserIsChatTranslationEnabled2")
end)
local u6 = v4 and v5
local v7, v8 = pcall(function() --[[Anonymous function at line 39]]
    return UserSettings():IsUserFeatureEnabled("UserAddBetterConsoleCheckForLegacyChat")
end)
local v9 = v7 and v8
game:GetService("RunService")
local v10 = game:GetService("ReplicatedStorage")
local u11 = game:GetService("Chat")
local u12 = game:GetService("StarterGui")
game:GetService("ContextActionService")
local u13 = v10:WaitForChild("DefaultChatSystemChatEvents")
local v14 = v10:WaitForChild("DefaultChatSystemChatEvents")
local v15 = u11:WaitForChild("ClientChatModules")
local u16 = require(v15:WaitForChild("ChatConstants"))
local u17 = require(v15:WaitForChild("ChatSettings"))
local v18 = v15:WaitForChild("MessageCreatorModules")
local v19 = require(v18:WaitForChild("Util"))
local u20 = nil
pcall(function() --[[Anonymous function at line 63]]
    --[[
    Upvalues:
        [1] = u20
    --]]
    u20 = require(game:GetService("Chat").ClientChatModules.ChatLocalization)
end)
local u22 = u20 == nil and {
    ["Get"] = function(_, _, p21) --[[Function name: Get, line 64]]
        return p21
    end
} or u20
local u23
if u6 then
    u23 = script:FindFirstChild("ChatTranslationEnabled")
    if u23 == nil then
        local u24 = nil
        u24 = script.ChildAdded:Connect(function(p25) --[[Anonymous function at line 71]]
            --[[
            Upvalues:
                [1] = u23
                [2] = u24
            --]]
            if p25.Name == "ChatTranslationEnabled" then
                u23 = p25
                u24:Disconnect()
            end
        end)
    end
else
    u23 = nil
end
local u26 = 10
local u27 = {
    ["OnNewMessage"] = "RemoteEvent",
    ["OnMessageDoneFiltering"] = "RemoteEvent",
    ["OnNewSystemMessage"] = "RemoteEvent",
    ["OnChannelJoined"] = "RemoteEvent",
    ["OnChannelLeft"] = "RemoteEvent",
    ["OnMuted"] = "RemoteEvent",
    ["OnUnmuted"] = "RemoteEvent",
    ["OnMainChannelSet"] = "RemoteEvent",
    ["SayMessageRequest"] = "RemoteEvent",
    ["GetInitDataRequest"] = "RemoteFunction"
}
local u28 = {}
local u29 = Instance.new("BindableEvent")
function TryRemoveChildWithVerifyingIsCorrectType(p30)
    --[[
    Upvalues:
        [1] = u27
        [2] = u28
        [3] = u26
    --]]
    if u27[p30.Name] and p30:IsA(u27[p30.Name]) then
        u27[p30.Name] = nil
        u28[p30.Name] = p30
        u26 = u26 - 1
    end
end
local u31 = u26
for _, v32 in pairs(v14:GetChildren()) do
    TryRemoveChildWithVerifyingIsCorrectType(v32)
end
if u31 > 0 then
    local v34 = v14.ChildAdded:connect(function(p33) --[[Anonymous function at line 117]]
        --[[
        Upvalues:
            [1] = u31
            [2] = u29
        --]]
        TryRemoveChildWithVerifyingIsCorrectType(p33)
        if u31 < 1 then
            u29:Fire()
        end
    end)
    u29.Event:wait()
    v34:disconnect()
    u29:Destroy()
end
local u35 = game:GetService("UserInputService")
local u36 = game:GetService("RunService")
local u37 = game:GetService("Players")
local u38 = u37.LocalPlayer
while not u38 do
    u37.ChildAdded:wait()
    u38 = u37.LocalPlayer
end
local u39 = true
local v40 = u17.ScreenGuiDisplayOrder == nil and 6 or u17.ScreenGuiDisplayOrder
local v41 = u38:WaitForChild("PlayerGui")
local u42 = Instance.new("ScreenGui")
u42.Name = "Chat"
u42.ResetOnSpawn = false
u42.DisplayOrder = v40
u42.Parent = v41
if v9 and game:GetService("GuiService"):IsTenFootInterface() then
    u42.Enabled = false
end
local u43 = false
local u44 = script
local v45 = require(u44:WaitForChild("ChatWindow"))
local v46 = require(u44:WaitForChild("ChatBar"))
local v47 = require(u44:WaitForChild("ChannelsBar"))
require(u44:WaitForChild("MessageLabelCreator"))
local u48 = require(u44:WaitForChild("MessageLogDisplay"))
require(u44:WaitForChild("ChatChannel"))
local v49 = require(u44:WaitForChild("CommandProcessor"))
local u50 = v45.new()
local u51 = v47.new()
local u52 = u48.new()
local u53 = v49.new()
local u54 = v46.new(u53, u50)
u50:CreateGuiObjects(u42)
u50:RegisterChatBar(u54)
u50:RegisterChannelsBar(u51)
u50:RegisterMessageLogDisplay(u52)
v19:RegisterChatWindow(u50)
local u55 = require(u44:WaitForChild("MessageSender"))
u55:RegisterSayMessageFunction(u28.SayMessageRequest)
if u35.TouchEnabled then
    u54:SetTextLabelText(u22:Get("GameChat_ChatMain_ChatBarTextTouch", "Tap here to chat"))
else
    u54:SetTextLabelText(u22:Get("GameChat_ChatMain_ChatBarText", "To chat click here or press \"/\" key"))
end
spawn(function() --[[Anonymous function at line 204]]
    --[[
    Upvalues:
        [1] = u44
        [2] = u17
        [3] = u50
    --]]
    local v56 = require(u44:WaitForChild("CurveUtil"))
    local v57 = 1 / (u17.ChatAnimationFPS or 20)
    local v58 = tick()
    while true do
        local v59 = tick()
        local v60 = v56:DeltaTimeToTimescale(v59 - v58)
        if v60 ~= 0 then
            u50:Update(v60)
        end
        wait(v57)
        v58 = v59
    end
end)
function CheckIfPointIsInSquare(p61, p62, p63)
    local v64
    if p62.X <= p61.X and (p61.X <= p63.X and p62.Y <= p61.Y) then
        v64 = p61.Y <= p63.Y
    else
        v64 = false
    end
    return v64
end
local u65 = false
local u66 = false
local u67 = 0
local u68 = 0
local u69 = Instance.new("BindableEvent")
local u70 = Instance.new("BindableEvent")
local u71 = Instance.new("BindableEvent")
function DoBackgroundFadeIn(p72)
    --[[
    Upvalues:
        [1] = u68
        [2] = u65
        [3] = u69
        [4] = u50
        [5] = u17
        [6] = u52
        [7] = u48
    --]]
    u68 = tick()
    u65 = false
    u69:Fire()
    u50:FadeInBackground(p72 or u17.ChatDefaultFadeDuration)
    if u50:GetCurrentChannel() then
        local v73 = u52.Scroller
        v73.ScrollingEnabled = true
        v73.ScrollBarThickness = u48.ScrollBarThickness
    end
end
function DoBackgroundFadeOut(p74)
    --[[
    Upvalues:
        [1] = u68
        [2] = u65
        [3] = u69
        [4] = u50
        [5] = u17
        [6] = u52
    --]]
    u68 = tick()
    u65 = true
    u69:Fire()
    u50:FadeOutBackground(p74 or u17.ChatDefaultFadeDuration)
    if u50:GetCurrentChannel() then
        local v75 = u52.Scroller
        v75.ScrollingEnabled = false
        v75.ScrollBarThickness = 0
    end
end
function DoTextFadeIn(p76)
    --[[
    Upvalues:
        [1] = u67
        [2] = u66
        [3] = u69
        [4] = u50
        [5] = u17
    --]]
    u67 = tick()
    u66 = false
    u69:Fire()
    u50:FadeInText((p76 or u17.ChatDefaultFadeDuration) * 0)
end
function DoTextFadeOut(p77)
    --[[
    Upvalues:
        [1] = u67
        [2] = u66
        [3] = u69
        [4] = u50
        [5] = u17
    --]]
    u67 = tick()
    u66 = true
    u69:Fire()
    u50:FadeOutText(p77 or u17.ChatDefaultFadeDuration)
end
function DoFadeInFromNewInformation()
    --[[
    Upvalues:
        [1] = u17
    --]]
    DoTextFadeIn()
    if u17.ChatShouldFadeInFromNewInformation then
        DoBackgroundFadeIn()
    end
end
function InstantFadeIn()
    DoBackgroundFadeIn(0)
    DoTextFadeIn(0)
end
function InstantFadeOut()
    DoBackgroundFadeOut(0)
    DoTextFadeOut(0)
end
local u78 = nil
function UpdateFadingForMouseState(p79)
    --[[
    Upvalues:
        [1] = u78
        [2] = u70
        [3] = u54
    --]]
    u78 = p79
    u70:Fire()
    if u54:IsFocused() then
        return
    elseif p79 then
        DoBackgroundFadeIn()
        DoTextFadeIn()
    else
        DoBackgroundFadeIn()
    end
end
spawn(function() --[[Anonymous function at line 322]]
    --[[
    Upvalues:
        [1] = u36
        [2] = u78
        [3] = u54
        [4] = u70
        [5] = u71
        [6] = u65
        [7] = u68
        [8] = u17
        [9] = u66
        [10] = u67
        [11] = u69
    --]]
    while true do
        u36.RenderStepped:wait()
        while u78 or u54:IsFocused() do
            if u78 then
                u70.Event:wait()
            end
            if u54:IsFocused() then
                u71.Event:wait()
            end
        end
        if u65 then
            if u66 then
                u69.Event:wait()
            elseif tick() - u67 > u17.ChatWindowTextFadeOutTime then
                DoTextFadeOut()
            end
        elseif tick() - u68 > u17.ChatWindowBackgroundFadeOutTime then
            DoBackgroundFadeOut()
        end
    end
end)
function getClassicChatEnabled()
    --[[
    Upvalues:
        [1] = u17
        [2] = u37
    --]]
    if u17.ClassicChatEnabled == nil then
        return u37.ClassicChat
    else
        return u17.ClassicChatEnabled
    end
end
function getBubbleChatEnabled()
    --[[
    Upvalues:
        [1] = u17
        [2] = u37
    --]]
    if u17.BubbleChatEnabled == nil then
        return u37.BubbleChat
    else
        return u17.BubbleChatEnabled
    end
end
function bubbleChatOnly()
    local v80 = not getClassicChatEnabled()
    if v80 then
        v80 = getBubbleChatEnabled()
    end
    return v80
end
function UpdateMousePosition(p81)
    --[[
    Upvalues:
        [1] = u1
        [2] = u17
        [3] = u50
        [4] = u78
    --]]
    if u1.Visible and (u1.IsCoreGuiEnabled and (u1.TopbarEnabled or u17.ChatOnWithTopBarOff)) then
        if not bubbleChatOnly() then
            local v82 = u50.GuiObject.AbsolutePosition
            local v83 = u50.GuiObject.AbsoluteSize
            local v84 = CheckIfPointIsInSquare(p81, v82, v82 + v83)
            if v84 ~= u78 then
                UpdateFadingForMouseState(v84)
            end
        end
    else
        return
    end
end
u35.InputChanged:connect(function(p85, _) --[[Anonymous function at line 390]]
    if p85.UserInputType == Enum.UserInputType.MouseMovement then
        local v86 = Vector2.new(p85.Position.X, p85.Position.Y)
        UpdateMousePosition(v86)
    end
end)
u35.TouchTap:connect(function(p87, _) --[[Anonymous function at line 397]]
    UpdateMousePosition(p87[1])
end)
u35.TouchMoved:connect(function(p88, _) --[[Anonymous function at line 401]]
    local v89 = Vector2.new(p88.Position.X, p88.Position.Y)
    UpdateMousePosition(v89)
end)
u35.Changed:connect(function(p90) --[[Anonymous function at line 406]]
    --[[
    Upvalues:
        [1] = u35
        [2] = u50
        [3] = u42
    --]]
    if p90 == "MouseBehavior" and u35.MouseBehavior == Enum.MouseBehavior.LockCenter then
        local v91 = u50.GuiObject.AbsolutePosition
        local v92 = u50.GuiObject.AbsoluteSize
        local v93 = u42.AbsoluteSize
        if CheckIfPointIsInSquare(v93 / 2, v91, v91 + v92) then
            u35.MouseBehavior = Enum.MouseBehavior.Default
        end
    end
end)
UpdateFadingForMouseState(true)
UpdateFadingForMouseState(false)
local v104 = {
    ["Signal"] = function() --[[Function name: Signal, line 431]]
        local v94 = {}
        local u95 = Instance.new("BindableEvent")
        local u96 = nil
        local u97 = nil
        function v94.fire(_, ...) --[[Anonymous function at line 439]]
            --[[
            Upvalues:
                [1] = u96
                [2] = u97
                [3] = u95
            --]]
            u96 = { ... }
            u97 = select("#", ...)
            u95:Fire()
        end
        function v94.connect(_, u98) --[[Anonymous function at line 445]]
            --[[
            Upvalues:
                [1] = u95
                [2] = u96
                [3] = u97
            --]]
            if not u98 then
                error("connect(nil)", 2)
            end
            return u95.Event:connect(function() --[[Anonymous function at line 447]]
                --[[
                Upvalues:
                    [1] = u98
                    [2] = u96
                    [3] = u97
                --]]
                local v99 = u96
                local v100 = u97
                u98(unpack(v99, 1, v100))
            end)
        end
        function v94.wait(_) --[[Anonymous function at line 452]]
            --[[
            Upvalues:
                [1] = u95
                [2] = u96
                [3] = u97
            --]]
            u95.Event:wait()
            local v101 = u96
            assert(v101, "Missing arg data, likely due to :TweenSize/Position corrupting threadrefs.")
            local v102 = u96
            local v103 = u97
            return unpack(v102, 1, v103)
        end
        return v94
    end
}
function SetVisibility(p105)
    --[[
    Upvalues:
        [1] = u50
        [2] = u1
    --]]
    u50:SetVisible(p105)
    u1.VisibilityStateChanged:fire(p105)
    u1.Visible = p105
    if u1.IsCoreGuiEnabled then
        if p105 then
            InstantFadeIn()
            return
        end
        InstantFadeOut()
    end
end
local u106 = nil
u1.TopbarEnabled = true
u1.MessageCount = 0
u1.Visible = true
u1.IsCoreGuiEnabled = true
function u1.ToggleVisibility(_) --[[Anonymous function at line 485]]
    --[[
    Upvalues:
        [1] = u50
    --]]
    SetVisibility(not u50:GetVisible())
end
function u1.SetVisible(_, p107) --[[Anonymous function at line 489]]
    --[[
    Upvalues:
        [1] = u50
    --]]
    if u50:GetVisible() ~= p107 then
        SetVisibility(p107)
    end
end
function u1.FocusChatBar(_) --[[Anonymous function at line 495]]
    --[[
    Upvalues:
        [1] = u54
    --]]
    u54:CaptureFocus()
end
function u1.EnterWhisperState(_, p108) --[[Anonymous function at line 499]]
    --[[
    Upvalues:
        [1] = u54
    --]]
    u54:EnterWhisperState(p108)
end
function u1.GetVisibility(_) --[[Anonymous function at line 503]]
    --[[
    Upvalues:
        [1] = u50
    --]]
    return u50:GetVisible()
end
function u1.GetMessageCount(p109) --[[Anonymous function at line 507]]
    return p109.MessageCount
end
function u1.TopbarEnabledChanged(p110, p111) --[[Anonymous function at line 511]]
    p110.TopbarEnabled = p111
    p110.CoreGuiEnabled:fire(game:GetService("StarterGui"):GetCoreGuiEnabled(Enum.CoreGuiType.Chat))
end
function u1.IsFocused(_, _) --[[Anonymous function at line 516]]
    --[[
    Upvalues:
        [1] = u54
    --]]
    return u54:IsFocused()
end
u1.ChatBarFocusChanged = v104.Signal()
u1.VisibilityStateChanged = v104.Signal()
u1.MessagesChanged = v104.Signal()
u1.MessagePosted = v104.Signal()
u1.CoreGuiEnabled = v104.Signal()
u1.ChatMakeSystemMessageEvent = v104.Signal()
u1.ChatWindowPositionEvent = v104.Signal()
u1.ChatWindowSizeEvent = v104.Signal()
u1.ChatBarDisabledEvent = v104.Signal()
function u1.fChatWindowPosition(_) --[[Anonymous function at line 534]]
    --[[
    Upvalues:
        [1] = u50
    --]]
    return u50.GuiObject.Position
end
function u1.fChatWindowSize(_) --[[Anonymous function at line 538]]
    --[[
    Upvalues:
        [1] = u50
    --]]
    return u50.GuiObject.Size
end
function u1.fChatBarDisabled(_) --[[Anonymous function at line 542]]
    --[[
    Upvalues:
        [1] = u54
    --]]
    return not u54:GetEnabled()
end
function u1.SpecialKeyPressed(_, p112, _) --[[Anonymous function at line 546]]
    --[[
    Upvalues:
        [1] = u39
        [2] = u106
    --]]
    if p112 == Enum.SpecialKey.ChatHotkey and u39 then
        u106()
    end
end
u1.CoreGuiEnabled:connect(function(p113) --[[Anonymous function at line 555]]
    --[[
    Upvalues:
        [1] = u1
        [2] = u17
        [3] = u50
        [4] = u54
    --]]
    u1.IsCoreGuiEnabled = p113
    if p113 then
        p113 = u1.TopbarEnabled or u17.ChatOnWithTopBarOff
    end
    u50:SetCoreGuiEnabled(p113)
    if p113 then
        InstantFadeIn()
    else
        u54:ReleaseFocus()
        InstantFadeOut()
    end
end)
function trimTrailingSpaces(p114)
    local v115 = #p114
    while v115 > 0 and p114:find("^%s", v115) do
        v115 = v115 - 1
    end
    return p114:sub(1, v115)
end
u1.ChatMakeSystemMessageEvent:connect(function(p116) --[[Anonymous function at line 583]]
    --[[
    Upvalues:
        [1] = u43
        [2] = u17
        [3] = u50
        [4] = u16
        [5] = u51
        [6] = u1
    --]]
    if p116.Text then
        local v117 = p116.Text
        if type(v117) == "string" then
            while not u43 do
                wait()
            end
            local v118 = u17.GeneralChannelName
            local v119 = u50:GetChannel(v118)
            if v119 then
                local v120 = {
                    ["ID"] = -1,
                    ["FromSpeaker"] = nil,
                    ["SpeakerUserId"] = 0,
                    ["OriginalChannel"] = v118,
                    ["IsFiltered"] = true
                }
                local v121 = p116.Text
                v120.MessageLength = string.len(v121)
                v120.MessageLengthUtf8 = utf8.len(utf8.nfcnormalize(p116.Text))
                v120.Message = trimTrailingSpaces(p116.Text)
                v120.MessageType = u16.MessageTypeSetCore
                v120.Time = os.time()
                v120.ExtraData = p116
                v119:AddMessageToChannel(v120)
                u51:UpdateMessagePostedInChannel(v118)
                u1.MessageCount = u1.MessageCount + 1
                u1.MessagesChanged:fire(u1.MessageCount)
            end
        end
    end
end)
u1.ChatBarDisabledEvent:connect(function(p122) --[[Anonymous function at line 613]]
    --[[
    Upvalues:
        [1] = u39
        [2] = u54
    --]]
    if u39 then
        u54:SetEnabled(not p122)
        if p122 then
            u54:ReleaseFocus()
        end
    end
end)
u1.ChatWindowSizeEvent:connect(function(p123) --[[Anonymous function at line 622]]
    --[[
    Upvalues:
        [1] = u50
    --]]
    u50.GuiObject.Size = p123
end)
u1.ChatWindowPositionEvent:connect(function(p124) --[[Anonymous function at line 626]]
    --[[
    Upvalues:
        [1] = u50
    --]]
    u50.GuiObject.Position = p124
end)
u106 = function() --[[Function name: DoChatBarFocus, line 634]]
    --[[
    Upvalues:
        [1] = u50
        [2] = u54
        [3] = u1
    --]]
    if u50:GetCoreGuiEnabled() then
        if u54:GetEnabled() then
            if not u54:IsFocused() and u54:GetVisible() then
                u1:SetVisible(true)
                InstantFadeIn()
                u54:CaptureFocus()
                u1.ChatBarFocusChanged:fire(true)
            end
        end
    else
        return
    end
end
u71.Event:connect(function(p125) --[[Anonymous function at line 646]]
    --[[
    Upvalues:
        [1] = u1
    --]]
    u1.ChatBarFocusChanged:fire(p125)
end)
function DoSwitchCurrentChannel(p126)
    --[[
    Upvalues:
        [1] = u50
    --]]
    if u50:GetChannel(p126) then
        u50:SwitchCurrentChannel(p126)
    end
end
function SendMessageToSelfInTargetChannel(p127, p128, p129)
    --[[
    Upvalues:
        [1] = u50
        [2] = u16
    --]]
    local v130 = u50:GetChannel(p128)
    if v130 then
        v130:AddMessageToChannel({
            ["ID"] = -1,
            ["FromSpeaker"] = nil,
            ["SpeakerUserId"] = 0,
            ["OriginalChannel"] = p128,
            ["IsFiltered"] = true,
            ["MessageLength"] = string.len(p127),
            ["MessageLengthUtf8"] = utf8.len(utf8.nfcnormalize(p127)),
            ["Message"] = trimTrailingSpaces(p127),
            ["MessageType"] = u16.MessageTypeSystem,
            ["Time"] = os.time(),
            ["ExtraData"] = p129
        })
    end
end
function chatBarFocused()
    --[[
    Upvalues:
        [1] = u78
        [2] = u66
        [3] = u71
    --]]
    if not u78 then
        DoBackgroundFadeIn()
        if u66 then
            DoTextFadeIn()
        end
    end
    u71:Fire(true)
end
function chatBarFocusLost(p131, _)
    --[[
    Upvalues:
        [1] = u71
        [2] = u54
        [3] = u1
        [4] = u53
        [5] = u50
        [6] = u17
        [7] = u55
    --]]
    DoBackgroundFadeIn()
    u71:Fire(false)
    if p131 then
        local v132 = u54:GetTextBox().Text
        if u54:IsInCustomState() then
            v132 = u54:GetCustomMessage() or v132
            local v133 = u54:CustomStateProcessCompletedMessage(v132)
            u54:ResetCustomState()
            if v133 then
                return
            end
        end
        u54:GetTextBox().Text = ""
        if v132 ~= "" then
            u1.MessagePosted:fire(v132)
            if not u53:ProcessCompletedChatMessage(v132, u50) then
                if u17.DisallowedWhiteSpace then
                    for v134 = 1, #u17.DisallowedWhiteSpace do
                        if u17.DisallowedWhiteSpace[v134] == "\t" then
                            v132 = string.gsub(v132, u17.DisallowedWhiteSpace[v134], " ")
                        else
                            v132 = string.gsub(v132, u17.DisallowedWhiteSpace[v134], "")
                        end
                    end
                end
                local v135 = string.gsub(v132, "\n", "")
                local v136 = string.gsub(v135, "[ ]+", " ")
                local v137 = u50:GetTargetMessageChannel()
                if v137 then
                    u55:SendMessage(v136, v137)
                    return
                end
                u55:SendMessage(v136, nil)
            end
        end
    end
end
local u138 = {}
function setupChatBarConnections()
    --[[
    Upvalues:
        [1] = u138
        [2] = u54
    --]]
    for v139 = 1, #u138 do
        u138[v139]:Disconnect()
    end
    u138 = {}
    local v140 = u54:GetTextBox().FocusLost:connect(chatBarFocusLost)
    local v141 = u138
    table.insert(v141, v140)
    local v142 = u54:GetTextBox().Focused:connect(chatBarFocused)
    local v143 = u138
    table.insert(v143, v142)
end
setupChatBarConnections()
u54.GuiObjectsChanged:connect(setupChatBarConnections)
function getEchoMessagesInGeneral()
    --[[
    Upvalues:
        [1] = u17
    --]]
    return u17.EchoMessagesInGeneralChannel == nil and true or u17.EchoMessagesInGeneralChannel
end
u28.OnMessageDoneFiltering.OnClientEvent:connect(function(p144) --[[Anonymous function at line 763]]
    --[[
    Upvalues:
        [1] = u17
        [2] = u38
        [3] = u50
    --]]
    if u17.ShowUserOwnFilteredMessage or p144.FromSpeaker ~= u38.Name then
        local v145 = p144.OriginalChannel
        local v146 = u50:GetChannel(v145)
        if v146 then
            v146:UpdateMessageFiltered(p144)
        end
        local v147 = getEchoMessagesInGeneral() and u17.GeneralChannelName and (v145 ~= u17.GeneralChannelName and u50:GetChannel(u17.GeneralChannelName))
        if v147 then
            v147:UpdateMessageFiltered(p144)
        end
    end
end)
u28.OnNewMessage.OnClientEvent:connect(function(p148, p149) --[[Anonymous function at line 784]]
    --[[
    Upvalues:
        [1] = u50
        [2] = u38
        [3] = u51
        [4] = u17
        [5] = u1
    --]]
    local v150 = u50:GetChannel(p149)
    if v150 then
        v150:AddMessageToChannel(p148)
        if p148.FromSpeaker ~= u38.Name then
            u51:UpdateMessagePostedInChannel(p149)
        end
        local v151 = getEchoMessagesInGeneral() and u17.GeneralChannelName and (p149 ~= u17.GeneralChannelName and u50:GetChannel(u17.GeneralChannelName))
        if v151 then
            v151:AddMessageToChannel(p148)
        end
        u1.MessageCount = u1.MessageCount + 1
        u1.MessagesChanged:fire(u1.MessageCount)
        DoFadeInFromNewInformation()
    end
end)
u28.OnNewSystemMessage.OnClientEvent:connect(function(p152, p153) --[[Anonymous function at line 807]]
    --[[
    Upvalues:
        [1] = u50
        [2] = u51
        [3] = u1
        [4] = u17
    --]]
    local v154 = p153 or "System"
    local v155 = u50:GetChannel(v154)
    if v155 then
        v155:AddMessageToChannel(p152)
        u51:UpdateMessagePostedInChannel(v154)
        u1.MessageCount = u1.MessageCount + 1
        u1.MessagesChanged:fire(u1.MessageCount)
        DoFadeInFromNewInformation()
        local v156 = getEchoMessagesInGeneral() and u17.GeneralChannelName and (v154 ~= u17.GeneralChannelName and u50:GetChannel(u17.GeneralChannelName))
        if v156 then
            v156:AddMessageToChannel(p152)
            return
        end
    else
        warn(string.format("Just received system message for channel I\'m not in [%s]", v154))
    end
end)
function HandleChannelJoined(p157, p158, p159, p160, p161, p162)
    --[[
    Upvalues:
        [1] = u50
        [2] = u17
        [3] = u43
        [4] = u54
        [5] = u16
        [6] = u22
        [7] = u6
        [8] = u23
    --]]
    if u50:GetChannel(p157) then
        u50:RemoveChannel(p157)
    end
    if p157 == u17.GeneralChannelName then
        u43 = true
    end
    if p160 then
        u54:SetChannelNameColor(p157, p160)
    end
    local v163 = u50:AddChannel(p157)
    if v163 then
        if p157 == u17.GeneralChannelName then
            DoSwitchCurrentChannel(p157)
        end
        if p159 then
            local v164 = #p159 <= u17.MessageHistoryLengthPerChannel and 1 or #p159 - u17.MessageHistoryLengthPerChannel
            for v165 = v164, #p159 do
                v163:AddMessageToChannel(p159[v165])
            end
            if getEchoMessagesInGeneral() and (p161 and (u17.GeneralChannelName and p157 ~= u17.GeneralChannelName)) then
                local v166 = u50:GetChannel(u17.GeneralChannelName)
                if v166 then
                    v166:AddMessagesToChannelByTimeStamp(p159, v164)
                end
            end
        end
        if p158 ~= "" then
            local v167 = {
                ["ID"] = -1,
                ["FromSpeaker"] = nil,
                ["SpeakerUserId"] = 0,
                ["OriginalChannel"] = p157,
                ["IsFiltered"] = true,
                ["MessageLength"] = string.len(p158),
                ["MessageLengthUtf8"] = utf8.len(utf8.nfcnormalize(p158)),
                ["Message"] = trimTrailingSpaces(p158),
                ["MessageType"] = u16.MessageTypeWelcome,
                ["Time"] = os.time(),
                ["ExtraData"] = nil
            }
            v163:AddMessageToChannel(v167)
            local v168 = getEchoMessagesInGeneral() and (p162 and (not u17.ShowChannelsBar and p157 ~= u17.GeneralChannelName)) and u50:GetChannel(u17.GeneralChannelName)
            if v168 then
                v168:AddMessageToChannel(v167)
            end
        end
        local v169 = u22:Get("GameChat_ChatMain_ChatTranslationOnboarding", "Text chat will be translated into your language. Tap the symbol in front of the message to see the original. You can turn off translations in the Settings menu.")
        if u6 and (v169 ~= "" and (p157 == u17.GeneralChannelName and (u23 ~= nil and u23.Value))) then
            v163:AddMessageToChannel({
                ["ID"] = -2,
                ["FromSpeaker"] = nil,
                ["SpeakerUserId"] = 0,
                ["OriginalChannel"] = p157,
                ["IsFiltered"] = true,
                ["MessageLength"] = string.len(v169),
                ["MessageLengthUtf8"] = utf8.len(utf8.nfcnormalize(v169)),
                ["Message"] = trimTrailingSpaces(v169),
                ["MessageType"] = u16.MessageTypeWelcome,
                ["Time"] = os.time(),
                ["ExtraData"] = nil
            })
        end
        DoFadeInFromNewInformation()
    end
end
u28.OnChannelJoined.OnClientEvent:connect(function(p170, p171, p172, p173) --[[Anonymous function at line 925]]
    HandleChannelJoined(p170, p171, p172, p173, false, true)
end)
u28.OnChannelLeft.OnClientEvent:connect(function(p174) --[[Anonymous function at line 929]]
    --[[
    Upvalues:
        [1] = u50
    --]]
    u50:RemoveChannel(p174)
    DoFadeInFromNewInformation()
end)
u28.OnMuted.OnClientEvent:connect(function(_) --[[Anonymous function at line 935]] end)
u28.OnUnmuted.OnClientEvent:connect(function(_) --[[Anonymous function at line 941]] end)
u28.OnMainChannelSet.OnClientEvent:connect(function(p175) --[[Anonymous function at line 945]]
    DoSwitchCurrentChannel(p175)
end)
coroutine.wrap(function() --[[Anonymous function at line 949]]
    --[[
    Upvalues:
        [1] = u13
        [2] = u54
    --]]
    local v176 = u13:WaitForChild("ChannelNameColorUpdated", 5)
    if v176 then
        v176.OnClientEvent:connect(function(p177, p178) --[[Anonymous function at line 953]]
            --[[
            Upvalues:
                [1] = u54
            --]]
            u54:SetChannelNameColor(p177, p178)
        end)
    end
end)()
local u179 = nil
local u180 = nil
local u181 = nil
local u182 = nil
pcall(function() --[[Anonymous function at line 969]]
    --[[
    Upvalues:
        [1] = u179
        [2] = u12
        [3] = u180
        [4] = u181
        [5] = u182
    --]]
    u179 = u12:GetCore("PlayerBlockedEvent")
    u180 = u12:GetCore("PlayerMutedEvent")
    u181 = u12:GetCore("PlayerUnblockedEvent")
    u182 = u12:GetCore("PlayerUnmutedEvent")
end)
function SendSystemMessageToSelf(p183)
    --[[
    Upvalues:
        [1] = u50
        [2] = u16
    --]]
    local v184 = u50:GetCurrentChannel()
    if v184 then
        v184:AddMessageToChannel({
            ["ID"] = -1,
            ["FromSpeaker"] = nil,
            ["SpeakerUserId"] = 0,
            ["OriginalChannel"] = v184.Name,
            ["IsFiltered"] = true,
            ["MessageLength"] = string.len(p183),
            ["MessageLengthUtf8"] = utf8.len(utf8.nfcnormalize(p183)),
            ["Message"] = trimTrailingSpaces(p183),
            ["MessageType"] = u16.MessageTypeSystem,
            ["Time"] = os.time(),
            ["ExtraData"] = nil
        })
    end
end
function MutePlayer(p185)
    --[[
    Upvalues:
        [1] = u13
    --]]
    local v186 = u13:FindFirstChild("MutePlayerRequest")
    if v186 then
        return v186:InvokeServer(p185.Name)
    else
        return false
    end
end
if u179 then
    u179.Event:connect(function(p187) --[[Anonymous function at line 1007]]
        --[[
        Upvalues:
            [1] = u17
            [2] = u22
        --]]
        if MutePlayer(p187) then
            local v188
            if u17.PlayerDisplayNamesEnabled then
                v188 = p187.DisplayName
            else
                v188 = p187.Name
            end
            SendSystemMessageToSelf(u22:Get("GameChat_ChatMain_SpeakerHasBeenBlocked", string.format("Speaker \'%s\' has been blocked.", v188), {
                ["RBX_NAME"] = v188
            }))
        end
    end)
end
if v3 then
    local v189
    if u17.ShowFriendJoinNotification == nil then
        v189 = false
    else
        v189 = u17.ShowFriendJoinNotification
    end
    if v189 then
        u37.PlayerAdded:Connect(function(u190) --[[Anonymous function at line 1037]]
            --[[
            Upvalues:
                [1] = u38
                [2] = u17
                [3] = u22
            --]]
            local v191, v192 = pcall(function() --[[Anonymous function at line 1038]]
                --[[
                Upvalues:
                    [1] = u190
                    [2] = u38
                --]]
                return u190:IsFriendsWith(u38.UserId)
            end)
            if v191 and v192 then
                local v193 = u190.Name
                if u17.PlayerDisplayNamesEnabled then
                    v193 = u190.DisplayName
                end
                local v194 = u22:FormatMessageToSend("GameChat_FriendChatNotifier_JoinMessage", string.format("Your friend %s has joined the game.", v193), "RBX_NAME", v193)
                SendSystemMessageToSelf(v194)
            end
        end)
    end
end
if u180 then
    u180.Event:connect(function(p195) --[[Anonymous function at line 1060]]
        --[[
        Upvalues:
            [1] = u17
            [2] = u22
        --]]
        if MutePlayer(p195) then
            local v196
            if u17.PlayerDisplayNamesEnabled then
                v196 = p195.DisplayName
            else
                v196 = p195.Name
            end
            SendSystemMessageToSelf(u22:Get("GameChat_ChatMain_SpeakerHasBeenMuted", string.format("Speaker \'%s\' has been muted.", v196), {
                ["RBX_NAME"] = v196
            }))
        end
    end)
end
function UnmutePlayer(p197)
    --[[
    Upvalues:
        [1] = u13
    --]]
    local v198 = u13:FindFirstChild("UnMutePlayerRequest")
    if v198 then
        return v198:InvokeServer(p197.Name)
    else
        return false
    end
end
if u181 then
    u181.Event:connect(function(p199) --[[Anonymous function at line 1090]]
        --[[
        Upvalues:
            [1] = u17
            [2] = u22
        --]]
        if UnmutePlayer(p199) then
            local v200
            if u17.PlayerDisplayNamesEnabled then
                v200 = p199.DisplayName
            else
                v200 = p199.Name
            end
            SendSystemMessageToSelf(u22:Get("GameChat_ChatMain_SpeakerHasBeenUnBlocked", string.format("Speaker \'%s\' has been unblocked.", v200), {
                ["RBX_NAME"] = v200
            }))
        end
    end)
end
if u182 then
    u182.Event:connect(function(p201) --[[Anonymous function at line 1112]]
        --[[
        Upvalues:
            [1] = u17
            [2] = u22
        --]]
        if UnmutePlayer(p201) then
            local v202
            if u17.PlayerDisplayNamesEnabled then
                v202 = p201.DisplayName
            else
                v202 = p201.Name
            end
            SendSystemMessageToSelf(u22:Get("GameChat_ChatMain_SpeakerHasBeenUnMuted", string.format("Speaker \'%s\' has been unmuted.", v202), {
                ["RBX_NAME"] = v202
            }))
        end
    end)
end
spawn(function() --[[Anonymous function at line 1135]]
    --[[
    Upvalues:
        [1] = u38
        [2] = u12
        [3] = u13
    --]]
    if u38.UserId > 0 then
        pcall(function() --[[Anonymous function at line 1138]]
            --[[
            Upvalues:
                [1] = u12
                [2] = u13
            --]]
            local v203 = u12:GetCore("GetBlockedUserIds")
            local v204 = #v203 > 0 and u13:FindFirstChild("SetBlockedUserIdsRequest")
            if v204 then
                v204:FireServer(v203)
            end
        end)
    end
end)
spawn(function() --[[Anonymous function at line 1150]]
    --[[
    Upvalues:
        [1] = u11
        [2] = u38
        [3] = u39
        [4] = u36
    --]]
    local v205, v206 = pcall(function() --[[Anonymous function at line 1151]]
        --[[
        Upvalues:
            [1] = u11
            [2] = u38
        --]]
        return u11:CanUserChatAsync(u38.UserId)
    end)
    if v205 then
        u39 = u36:IsStudio() or v206
    end
end)
local v207 = u28.GetInitDataRequest:InvokeServer()
for _, v208 in pairs(v207.Channels) do
    if v208[1] == u17.GeneralChannelName then
        HandleChannelJoined(v208[1], v208[2], v208[3], v208[4], true, false)
    end
end
for _, v209 in pairs(v207.Channels) do
    if v209[1] ~= u17.GeneralChannelName then
        HandleChannelJoined(v209[1], v209[2], v209[3], v209[4], true, false)
    end
end
return u1]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ChatMain]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="ModuleScript" referent="335"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1 = {}
local v2 = game:GetService("Chat"):WaitForChild("ClientChatModules")
local v3 = script.Parent
local u4 = require(v3:WaitForChild("ChannelsTab"))
local u5 = require(v3:WaitForChild("MessageSender"))
local u6 = require(v2:WaitForChild("ChatSettings"))
local u7 = require(v3:WaitForChild("CurveUtil"))
local u8 = {}
u8.__index = u8
function u8.CreateGuiObjects(u9, p10) --[[Anonymous function at line 23]]
    --[[
    Upvalues:
        [1] = u6
        [2] = u5
    --]]
    local v11 = Instance.new("Frame")
    v11.Selectable = false
    v11.Size = UDim2.new(1, 0, 1, 0)
    v11.BackgroundTransparency = 1
    v11.Parent = p10
    local v12 = Instance.new("Frame")
    v12.Selectable = false
    v12.Name = "ScrollingBase"
    v12.BackgroundTransparency = 1
    v12.ClipsDescendants = true
    v12.Size = UDim2.new(1, 0, 1, 0)
    v12.Position = UDim2.new(0, 0, 0, 0)
    v12.Parent = v11
    local v13 = Instance.new("Frame")
    v13.Selectable = false
    v13.Name = "ScrollerSizer"
    v13.BackgroundTransparency = 1
    v13.Size = UDim2.new(1, 0, 1, 0)
    v13.Position = UDim2.new(0, 0, 0, 0)
    v13.Parent = v12
    local v14 = Instance.new("Frame")
    v14.Selectable = false
    v14.Name = "ScrollerFrame"
    v14.BackgroundTransparency = 1
    v14.Size = UDim2.new(1, 0, 1, 0)
    v14.Position = UDim2.new(0, 0, 0, 0)
    v14.Parent = v13
    local v15 = Instance.new("Frame")
    v15.Selectable = false
    v15.Size = UDim2.new(1, 0, 1, 0)
    v15.Position = UDim2.new(0, 0, 0, 0)
    v15.ClipsDescendants = true
    v15.BackgroundTransparency = 1
    v15.Parent = v11
    local u16 = Instance.new("Frame")
    u16.Selectable = false
    u16.Name = "LeaveConfirmationFrame"
    u16.Size = UDim2.new(1, 0, 1, 0)
    u16.Position = UDim2.new(0, 0, 1, 0)
    u16.BackgroundTransparency = 0.6
    u16.BorderSizePixel = 0
    u16.BackgroundColor3 = Color3.new(0, 0, 0)
    u16.Parent = v15
    local v17 = Instance.new("TextButton")
    v17.Selectable = false
    v17.Size = UDim2.new(1, 0, 1, 0)
    v17.BackgroundTransparency = 1
    v17.Text = ""
    v17.Parent = u16
    local v18 = Instance.new("TextButton")
    v18.Selectable = false
    v18.Size = UDim2.new(0.25, 0, 1, 0)
    v18.BackgroundTransparency = 1
    v18.Font = u6.DefaultFont
    v18.TextSize = 18
    v18.TextStrokeTransparency = 0.75
    v18.Position = UDim2.new(0, 0, 0, 0)
    v18.TextColor3 = Color3.new(0, 1, 0)
    v18.Text = "Confirm"
    v18.Parent = u16
    local v19 = v18:Clone()
    v19.Parent = u16
    v19.Position = UDim2.new(0.75, 0, 0, 0)
    v19.TextColor3 = Color3.new(1, 0, 0)
    v19.Text = "Cancel"
    local v20 = Instance.new("TextLabel")
    v20.Selectable = false
    v20.Size = UDim2.new(0.5, 0, 1, 0)
    v20.Position = UDim2.new(0.25, 0, 0, 0)
    v20.BackgroundTransparency = 1
    v20.TextColor3 = Color3.new(1, 1, 1)
    v20.TextStrokeTransparency = 0.75
    v20.Text = "Leave channel <XX>?"
    v20.Font = u6.DefaultFont
    v20.TextSize = 18
    v20.Parent = u16
    local u21 = Instance.new("StringValue")
    u21.Name = "LeaveTarget"
    u21.Parent = u16
    local u22 = u16.Position
    v18.MouseButton1Click:connect(function() --[[Anonymous function at line 115]]
        --[[
        Upvalues:
            [1] = u5
            [2] = u21
            [3] = u16
            [4] = u22
        --]]
        u5:SendMessage(string.format("/leave %s", u21.Value), nil)
        u16:TweenPosition(u22, Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true)
    end)
    v19.MouseButton1Click:connect(function() --[[Anonymous function at line 119]]
        --[[
        Upvalues:
            [1] = u16
            [2] = u22
        --]]
        u16:TweenPosition(u22, Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true)
    end)
    local v23 = Instance.new("ImageButton", v11)
    v23.Selectable = u6.GamepadNavigationEnabled
    v23.Name = "PageLeftButton"
    v23.SizeConstraint = Enum.SizeConstraint.RelativeYY
    v23.Size = UDim2.new(0.7, 0, 0.7, 0)
    v23.BackgroundTransparency = 1
    v23.Position = UDim2.new(0, 4, 0.15000000000000002, 0)
    v23.Visible = false
    v23.Image = "rbxassetid://471630199"
    local v24 = Instance.new("ImageLabel", v23)
    v24.Name = "ArrowLabel"
    v24.BackgroundTransparency = 1
    v24.Size = UDim2.new(0.4, 0, 0.4, 0)
    v24.Image = "rbxassetid://471630112"
    local v25 = Instance.new("Frame", v11)
    v25.Selectable = false
    v25.BackgroundTransparency = 1
    v25.Name = "PositionalHelper"
    v25.Size = v23.Size
    v25.SizeConstraint = v23.SizeConstraint
    v25.Position = UDim2.new(1, 0, 0.15000000000000002, 0)
    local v26 = v23:Clone()
    v26.Parent = v25
    v26.Name = "PageRightButton"
    v26.Size = UDim2.new(1, 0, 1, 0)
    v26.SizeConstraint = Enum.SizeConstraint.RelativeXY
    v26.Position = UDim2.new(-1, -4, 0, 0)
    local v27 = UDim2.new(0.05, 0, 0, 0)
    v26.ArrowLabel.Position = UDim2.new(0.3, 0, 0.3, 0) + v27
    v23.ArrowLabel.Position = UDim2.new(0.3, 0, 0.3, 0) - v27
    v23.ArrowLabel.Rotation = 180
    u9.GuiObject = v11
    u9.GuiObjects.BaseFrame = v11
    u9.GuiObjects.ScrollerSizer = v13
    u9.GuiObjects.ScrollerFrame = v14
    u9.GuiObjects.PageLeftButton = v23
    u9.GuiObjects.PageRightButton = v26
    u9.GuiObjects.LeaveConfirmationFrame = u16
    u9.GuiObjects.LeaveConfirmationNotice = v20
    u9.GuiObjects.PageLeftButtonArrow = v23.ArrowLabel
    u9.GuiObjects.PageRightButtonArrow = v26.ArrowLabel
    u9:AnimGuiObjects()
    v23.MouseButton1Click:connect(function() --[[Anonymous function at line 187]]
        --[[
        Upvalues:
            [1] = u9
        --]]
        u9:ScrollChannelsFrame(-1)
    end)
    v26.MouseButton1Click:connect(function() --[[Anonymous function at line 188]]
        --[[
        Upvalues:
            [1] = u9
        --]]
        u9:ScrollChannelsFrame(1)
    end)
    u9:ScrollChannelsFrame(0)
end
function u8.UpdateMessagePostedInChannel(p28, p29) --[[Anonymous function at line 194]]
    local v30 = p28:GetChannelTab(p29)
    if v30 then
        v30:UpdateMessagePostedInChannel()
    else
        warn("ChannelsTab \'" .. p29 .. "\' does not exist!")
    end
end
function u8.AddChannelTab(u31, p32) --[[Anonymous function at line 203]]
    --[[
    Upvalues:
        [1] = u4
        [2] = u6
    --]]
    if u31:GetChannelTab(p32) then
        error("Channel tab \'" .. p32 .. "\'already exists!")
    end
    local u33 = u4.new(p32)
    u33.GuiObject.Parent = u31.GuiObjects.ScrollerFrame
    u31.ChannelTabs[p32:lower()] = u33
    u31.NumTabs = u31.NumTabs + 1
    u31:OrganizeChannelTabs()
    if u6.RightClickToLeaveChannelEnabled then
        u33.NameTag.MouseButton2Click:connect(function() --[[Anonymous function at line 216]]
            --[[
            Upvalues:
                [1] = u31
                [2] = u33
            --]]
            u31.LeaveConfirmationNotice.Text = string.format("Leave channel %s?", u33.ChannelName)
            u31.LeaveConfirmationFrame.LeaveTarget.Value = u33.ChannelName
            u31.LeaveConfirmationFrame:TweenPosition(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.In, Enum.EasingStyle.Quad, 0.2, true)
        end)
    end
    return u33
end
function u8.RemoveChannelTab(p34, p35) --[[Anonymous function at line 226]]
    if not p34:GetChannelTab(p35) then
        error("Channel tab \'" .. p35 .. "\'does not exist!")
    end
    local v36 = p35:lower()
    p34.ChannelTabs[v36]:Destroy()
    p34.ChannelTabs[v36] = nil
    p34.NumTabs = p34.NumTabs - 1
    p34:OrganizeChannelTabs()
end
function u8.GetChannelTab(p37, p38) --[[Anonymous function at line 239]]
    return p37.ChannelTabs[p38:lower()]
end
function u8.OrganizeChannelTabs(p39) --[[Anonymous function at line 243]]
    --[[
    Upvalues:
        [1] = u6
    --]]
    local v40 = {}
    local v41 = u6.GeneralChannelName
    table.insert(v40, p39:GetChannelTab(v41))
    table.insert(v40, p39:GetChannelTab("System"))
    for _, v42 in pairs(p39.ChannelTabs) do
        if v42.ChannelName ~= u6.GeneralChannelName and v42.ChannelName ~= "System" then
            table.insert(v40, v42)
        end
    end
    for v43, v44 in pairs(v40) do
        v44.GuiObject.Position = UDim2.new(v43 - 1, 0, 0, 0)
    end
    local v45 = p39.GuiObjects.ScrollerSizer
    local v46 = UDim2.new
    local v47 = u6.ChannelsBarFullTabSize
    local v48 = p39.NumTabs
    local v49 = math.min(v47, v48)
    v45.Size = v46(1 / math.max(1, v49), 0, 1, 0)
    p39:ScrollChannelsFrame(0)
end
function u8.ResizeChannelTabText(p50, p51) --[[Anonymous function at line 265]]
    for _, v52 in pairs(p50.ChannelTabs) do
        v52:SetTextSize(p51)
    end
end
function u8.ScrollChannelsFrame(u53, p54) --[[Anonymous function at line 271]]
    --[[
    Upvalues:
        [1] = u6
    --]]
    if u53.ScrollChannelsFrameLock then
        return
    else
        u53.ScrollChannelsFrameLock = true
        local v55 = u6.ChannelsBarFullTabSize
        local v56 = u53.CurPageNum + p54
        if v56 < 0 then
            v56 = 0
        elseif v56 > 0 and v56 + v55 > u53.NumTabs then
            v56 = u53.NumTabs - v55
        end
        u53.CurPageNum = v56
        local v57 = UDim2.new(-u53.CurPageNum, 0, 0, 0)
        u53.GuiObjects.PageLeftButton.Visible = u53.CurPageNum > 0
        u53.GuiObjects.PageRightButton.Visible = u53.CurPageNum + v55 < u53.NumTabs
        if p54 == 0 then
            u53.ScrollChannelsFrameLock = false
        else
            u53:WaitUntilParentedCorrectly()
            u53.GuiObjects.ScrollerFrame:TweenPosition(v57, Enum.EasingDirection.InOut, Enum.EasingStyle.Quad, 0.15, true, function() --[[Function name: UnlockFunc, line 297]]
                --[[
                Upvalues:
                    [1] = u53
                --]]
                u53.ScrollChannelsFrameLock = false
            end)
        end
    end
end
function u8.FadeOutBackground(p58, p59) --[[Anonymous function at line 306]]
    --[[
    Upvalues:
        [1] = u7
    --]]
    for _, v60 in pairs(p58.ChannelTabs) do
        v60:FadeOutBackground(p59)
    end
    p58.AnimParams.Background_TargetTransparency = 1
    p58.AnimParams.Background_NormalizedExptValue = u7:NormalizedDefaultExptValueInSeconds(p59)
end
function u8.FadeInBackground(p61, p62) --[[Anonymous function at line 315]]
    --[[
    Upvalues:
        [1] = u7
    --]]
    for _, v63 in pairs(p61.ChannelTabs) do
        v63:FadeInBackground(p62)
    end
    p61.AnimParams.Background_TargetTransparency = 0.6
    p61.AnimParams.Background_NormalizedExptValue = u7:NormalizedDefaultExptValueInSeconds(p62)
end
function u8.FadeOutText(p64, p65) --[[Anonymous function at line 324]]
    for _, v66 in pairs(p64.ChannelTabs) do
        v66:FadeOutText(p65)
    end
end
function u8.FadeInText(p67, p68) --[[Anonymous function at line 330]]
    for _, v69 in pairs(p67.ChannelTabs) do
        v69:FadeInText(p68)
    end
end
function u8.AnimGuiObjects(p70) --[[Anonymous function at line 336]]
    p70.GuiObjects.PageLeftButton.ImageTransparency = p70.AnimParams.Background_CurrentTransparency
    p70.GuiObjects.PageRightButton.ImageTransparency = p70.AnimParams.Background_CurrentTransparency
    p70.GuiObjects.PageLeftButtonArrow.ImageTransparency = p70.AnimParams.Background_CurrentTransparency
    p70.GuiObjects.PageRightButtonArrow.ImageTransparency = p70.AnimParams.Background_CurrentTransparency
end
function u8.InitializeAnimParams(p71) --[[Anonymous function at line 343]]
    --[[
    Upvalues:
        [1] = u7
    --]]
    p71.AnimParams.Background_TargetTransparency = 0.6
    p71.AnimParams.Background_CurrentTransparency = 0.6
    p71.AnimParams.Background_NormalizedExptValue = u7:NormalizedDefaultExptValueInSeconds(0)
end
function u8.Update(p72, p73) --[[Anonymous function at line 349]]
    --[[
    Upvalues:
        [1] = u7
    --]]
    for _, v74 in pairs(p72.ChannelTabs) do
        v74:Update(p73)
    end
    p72.AnimParams.Background_CurrentTransparency = u7:Expt(p72.AnimParams.Background_CurrentTransparency, p72.AnimParams.Background_TargetTransparency, p72.AnimParams.Background_NormalizedExptValue, p73)
    p72:AnimGuiObjects()
end
function u8.WaitUntilParentedCorrectly(p75) --[[Anonymous function at line 365]]
    while not p75.GuiObject:IsDescendantOf(game:GetService("Players").LocalPlayer) do
        p75.GuiObject.AncestryChanged:wait()
    end
end
function v1.new() --[[Anonymous function at line 374]]
    --[[
    Upvalues:
        [1] = u8
        [2] = u6
    --]]
    local v76 = u8
    local u77 = setmetatable({}, v76)
    u77.GuiObject = nil
    u77.GuiObjects = {}
    u77.ChannelTabs = {}
    u77.NumTabs = 0
    u77.CurPageNum = 0
    u77.ScrollChannelsFrameLock = false
    u77.AnimParams = {}
    u77:InitializeAnimParams()
    u6.SettingsChanged:connect(function(p78, p79) --[[Anonymous function at line 390]]
        --[[
        Upvalues:
            [1] = u77
        --]]
        if p78 == "ChatChannelsTabTextSize" then
            u77:ResizeChannelTabText(p79)
        end
    end)
    return u77
end
return v1]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ChannelsBar]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="336"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local u1 = game:GetService("UserInputService")
local u2 = game:GetService("RunService")
local v3 = game:GetService("Players")
local u4 = game:GetService("TextService")
local u5 = v3.LocalPlayer
local v6 = {}
while not u5 do
    v3.PlayerAdded:wait()
    u5 = v3.LocalPlayer
end
local u7 = game:GetService("Chat")
local v8 = u7:WaitForChild("ClientChatModules")
local v9 = script.Parent
local u10 = require(v8:WaitForChild("ChatSettings"))
local u11 = require(v9:WaitForChild("CurveUtil"))
local v12 = v8:WaitForChild("CommandModules")
local u13 = require(v12:WaitForChild("Whisper"))
require(v9:WaitForChild("MessageSender"))
local u14 = nil
pcall(function() --[[Anonymous function at line 34]]
    --[[
    Upvalues:
        [1] = u14
    --]]
    u14 = require(game:GetService("Chat").ClientChatModules.ChatLocalization)
end)
u14 = u14 == nil and {
    ["Get"] = function(_, _, p15) --[[Function name: Get, line 35]]
        return p15
    end
} or u14
local u16 = {}
u16.__index = u16
function u16.CreateGuiObjects(p17, p18) --[[Anonymous function at line 42]]
    --[[
    Upvalues:
        [1] = u10
    --]]
    p17.ChatBarParentFrame = p18
    local v19 = Instance.new("Frame")
    v19.Selectable = false
    v19.Size = UDim2.new(1, 0, 1, 0)
    v19.BackgroundTransparency = 0.6
    v19.BorderSizePixel = 0
    v19.BackgroundColor3 = u10.ChatBarBackGroundColor
    v19.Parent = p18
    local v20 = Instance.new("Frame")
    v20.Selectable = false
    v20.Name = "BoxFrame"
    v20.BackgroundTransparency = 0.6
    v20.BorderSizePixel = 0
    v20.BackgroundColor3 = u10.ChatBarBoxColor
    v20.Size = UDim2.new(1, -14, 1, -14)
    v20.Position = UDim2.new(0, 7, 0, 7)
    v20.Parent = v19
    local v21 = Instance.new("Frame")
    v21.BackgroundTransparency = 1
    v21.Size = UDim2.new(1, -10, 1, -10)
    v21.Position = UDim2.new(0, 5, 0, 5)
    v21.Parent = v20
    local v22 = Instance.new("TextBox")
    v22.Selectable = u10.GamepadNavigationEnabled
    v22.Name = "ChatBar"
    v22.BackgroundTransparency = 1
    v22.Size = UDim2.new(1, 0, 1, 0)
    v22.Position = UDim2.new(0, 0, 0, 0)
    v22.TextSize = u10.ChatBarTextSize
    v22.Font = u10.ChatBarFont
    v22.TextColor3 = u10.ChatBarTextColor
    v22.TextTransparency = 0.4
    v22.TextStrokeTransparency = 1
    v22.ClearTextOnFocus = false
    v22.TextXAlignment = Enum.TextXAlignment.Left
    v22.TextYAlignment = Enum.TextYAlignment.Top
    v22.TextWrapped = true
    v22.Text = ""
    v22.Parent = v21
    local v23 = Instance.new("TextButton")
    v23.Selectable = false
    v23.Name = "MessageMode"
    v23.BackgroundTransparency = 1
    v23.Position = UDim2.new(0, 0, 0, 0)
    v23.TextSize = u10.ChatBarTextSize
    v23.Font = u10.ChatBarFont
    v23.TextXAlignment = Enum.TextXAlignment.Left
    v23.TextWrapped = true
    v23.Text = ""
    v23.Size = UDim2.new(0, 0, 0, 0)
    v23.TextYAlignment = Enum.TextYAlignment.Center
    v23.TextColor3 = p17:GetDefaultChannelNameColor()
    v23.Visible = true
    v23.Parent = v21
    local v24 = Instance.new("TextLabel")
    v24.Selectable = false
    v24.TextWrapped = true
    v24.BackgroundTransparency = 1
    v24.Size = v22.Size
    v24.Position = v22.Position
    v24.TextSize = v22.TextSize
    v24.Font = v22.Font
    v24.TextColor3 = v22.TextColor3
    v24.TextTransparency = v22.TextTransparency
    v24.TextStrokeTransparency = v22.TextStrokeTransparency
    v24.TextXAlignment = v22.TextXAlignment
    v24.TextYAlignment = v22.TextYAlignment
    v24.Text = "..."
    v24.Parent = v21
    p17.GuiObject = v19
    p17.TextBox = v22
    p17.TextLabel = v24
    p17.GuiObjects.BaseFrame = v19
    p17.GuiObjects.TextBoxFrame = v20
    p17.GuiObjects.TextBox = v22
    p17.GuiObjects.TextLabel = v24
    p17.GuiObjects.MessageModeTextButton = v23
    p17:AnimGuiObjects()
    p17:SetUpTextBoxEvents(v22, v24, v23)
    if p17.UserHasChatOff then
        p17:DoLockChatBar()
    end
    p17.eGuiObjectsChanged:Fire()
end
function u16.DoLockChatBar(u25) --[[Anonymous function at line 141]]
    --[[
    Upvalues:
        [1] = u5
        [2] = u14
    --]]
    if u25.TextLabel then
        if u5.UserId > 0 then
            u25.TextLabel.Text = u14:Get("GameChat_ChatMessageValidator_SettingsError", "To chat in game, turn on chat in your Privacy Settings.")
        else
            u25.TextLabel.Text = u14:Get("GameChat_SwallowGuestChat_Message", "Sign up to chat in game.")
        end
        u25:CalculateSize()
    end
    if u25.TextBox then
        u25.TextBox.Active = false
        u25.TextBox.Focused:connect(function() --[[Anonymous function at line 158]]
            --[[
            Upvalues:
                [1] = u25
            --]]
            u25.TextBox:ReleaseFocus()
        end)
    end
end
function u16.SetUpTextBoxEvents(u26, u27, u28, u29) --[[Anonymous function at line 164]]
    --[[
    Upvalues:
        [1] = u1
        [2] = u10
    --]]
    for v30, v31 in pairs(u26.TextBoxConnections) do
        v31:disconnect()
        u26.TextBoxConnections[v30] = nil
    end
    u26.TextBoxConnections.UserInputBegan = u1.InputBegan:connect(function(p32, _) --[[Anonymous function at line 172]]
        --[[
        Upvalues:
            [1] = u26
            [2] = u27
            [3] = u10
        --]]
        if p32.KeyCode == Enum.KeyCode.Backspace and (u26:IsFocused() and u27.Text == "") then
            u26:SetChannelTarget(u10.GeneralChannelName)
        end
    end)
    u26.TextBoxConnections.TextBoxChanged = u27.Changed:connect(function(p33) --[[Anonymous function at line 180]]
        --[[
        Upvalues:
            [1] = u26
            [2] = u27
            [3] = u10
        --]]
        if p33 == "AbsoluteSize" then
            u26:CalculateSize()
            return
        elseif p33 == "Text" then
            u26:CalculateSize()
            if utf8.len(utf8.nfcnormalize(u27.Text)) > u10.MaximumMessageLength then
                u27.Text = u26.PreviousText
            else
                u26.PreviousText = u27.Text
            end
            if u26.InCustomState then
                u26.CustomState:TextUpdated()
            else
                local v34 = u26.CommandProcessor:ProcessInProgressChatMessage(u27.Text, u26.ChatWindow, u26)
                if v34 then
                    u26.InCustomState = true
                    u26.CustomState = v34
                    return
                end
            end
        end
    end)
    u26.TextBoxConnections.MessageModeClick = u29.MouseButton1Click:connect(function() --[[Anonymous function at line 217]]
        --[[
        Upvalues:
            [1] = u29
            [2] = u26
            [3] = u10
        --]]
        if u29.Text ~= "" then
            u26:SetChannelTarget(u10.GeneralChannelName)
        end
    end)
    u26.TextBoxConnections.TextBoxFocused = u27.Focused:connect(function() --[[Anonymous function at line 223]]
        --[[
        Upvalues:
            [1] = u26
            [2] = u28
        --]]
        if not u26.UserHasChatOff then
            u26:CalculateSize()
            u28.Visible = false
        end
    end)
    u26.TextBoxConnections.TextBoxFocusLost = u27.FocusLost:connect(function(_, p35) --[[Anonymous function at line 230]]
        --[[
        Upvalues:
            [1] = u26
            [2] = u27
            [3] = u28
        --]]
        u26:CalculateSize()
        if p35 and p35.KeyCode == Enum.KeyCode.Escape then
            u27.Text = ""
        end
        if u27.Text == "" then
            u28.Visible = true
        else
            u28.Visible = false
        end
    end)
end
function u16.GetTextBox(p36) --[[Anonymous function at line 239]]
    return p36.TextBox
end
function u16.GetMessageModeTextButton(p37) --[[Anonymous function at line 243]]
    return p37.GuiObjects.MessageModeTextButton
end
function u16.GetMessageModeTextLabel(p38) --[[Anonymous function at line 249]]
    return p38:GetMessageModeTextButton()
end
function u16.IsFocused(p39) --[[Anonymous function at line 253]]
    if p39.UserHasChatOff then
        return false
    else
        return p39:GetTextBox():IsFocused()
    end
end
function u16.GetVisible(p40) --[[Anonymous function at line 261]]
    return p40.GuiObject.Visible
end
function u16.CaptureFocus(p41) --[[Anonymous function at line 265]]
    if not p41.UserHasChatOff then
        p41:GetTextBox():CaptureFocus()
    end
end
function u16.ReleaseFocus(p42, p43) --[[Anonymous function at line 271]]
    p42:GetTextBox():ReleaseFocus(p43)
end
function u16.ResetText(p44) --[[Anonymous function at line 275]]
    p44:GetTextBox().Text = ""
end
function u16.SetText(p45, p46) --[[Anonymous function at line 279]]
    p45:GetTextBox().Text = p46
end
function u16.GetEnabled(p47) --[[Anonymous function at line 283]]
    return p47.GuiObject.Visible
end
function u16.SetEnabled(p48, p49) --[[Anonymous function at line 287]]
    if p48.UserHasChatOff then
        p48.GuiObject.Visible = true
    else
        p48.GuiObject.Visible = p49
    end
end
function u16.SetTextLabelText(p50, p51) --[[Anonymous function at line 297]]
    if not p50.UserHasChatOff then
        p50.TextLabel.Text = p51
    end
end
function u16.SetTextBoxText(p52, p53) --[[Anonymous function at line 303]]
    p52.TextBox.Text = p53
end
function u16.GetTextBoxText(p54) --[[Anonymous function at line 307]]
    return p54.TextBox.Text
end
function u16.ResetSize(p55) --[[Anonymous function at line 311]]
    p55.TargetYSize = 0
    p55:TweenToTargetYSize()
end
function u16.CalculateSize(p56) --[[Anonymous function at line 325]]
    --[[
    Upvalues:
        [1] = u4
    --]]
    if not p56.CalculatingSizeLock then
        p56.CalculatingSizeLock = true
        local v57, v58
        if p56:IsFocused() or p56.TextBox.Text ~= "" then
            v57 = p56.TextBox.TextSize
            local v59 = p56.TextBox
            v58 = u4:GetTextSize(v59.Text, v59.TextSize, v59.Font, Vector2.new(v59.AbsoluteSize.X, 10000)).Y
        else
            v57 = p56.TextLabel.TextSize
            local v60 = p56.TextLabel
            v58 = u4:GetTextSize(v60.Text, v60.TextSize, v60.Font, Vector2.new(v60.AbsoluteSize.X, 10000)).Y
        end
        local v61 = v58 - v57
        if p56.TargetYSize ~= v61 then
            p56.TargetYSize = v61
            p56:TweenToTargetYSize()
        end
        p56.CalculatingSizeLock = false
    end
end
function u16.TweenToTargetYSize(u62) --[[Anonymous function at line 351]]
    local u63 = UDim2.new(1, 0, 1, u62.TargetYSize)
    local v64 = u62.GuiObject.Size
    local v65 = u62.GuiObject.AbsoluteSize.Y
    u62.GuiObject.Size = u63
    local v66 = u62.GuiObject.AbsoluteSize.Y
    u62.GuiObject.Size = v64
    local v67 = v66 - v65
    local v68 = math.abs(v67) * (1 / u62.TweenPixelsPerSecond)
    local u69 = math.min(1, v68)
    if not pcall(function() --[[Anonymous function at line 363]]
        --[[
        Upvalues:
            [1] = u62
            [2] = u63
            [3] = u69
        --]]
        u62.GuiObject:TweenSize(u63, Enum.EasingDirection.Out, Enum.EasingStyle.Quad, u69, true)
    end) then
        u62.GuiObject.Size = u63
    end
end
function u16.SetTextSize(p70, p71) --[[Anonymous function at line 369]]
    if not p70:IsInCustomState() then
        if p70.TextBox then
            p70.TextBox.TextSize = p71
        end
        if p70.TextLabel then
            p70.TextLabel.TextSize = p71
        end
    end
end
function u16.GetDefaultChannelNameColor(_) --[[Anonymous function at line 380]]
    --[[
    Upvalues:
        [1] = u10
    --]]
    if u10.DefaultChannelNameColor then
        return u10.DefaultChannelNameColor
    else
        return Color3.fromRGB(35, 76, 142)
    end
end
function u16.SetChannelTarget(p72, p73) --[[Anonymous function at line 387]]
    --[[
    Upvalues:
        [1] = u10
        [2] = u14
    --]]
    local v74 = p72.GuiObjects.MessageModeTextButton
    local v75 = p72.TextBox
    local v76 = p72.TextLabel
    p72.TargetChannel = p73
    if not p72:IsInCustomState() then
        if p73 ~= u10.GeneralChannelName then
            v74.Size = UDim2.new(0, 1000, 1, 0)
            local v77
            if u14.tryLocalize then
                v77 = u14:tryLocalize(p73)
            else
                v77 = p73
            end
            v74.Text = string.format("[%s] ", v77)
            local v78 = p72:GetChannelNameColor(p73)
            if v78 then
                v74.TextColor3 = v78
            else
                v74.TextColor3 = p72:GetDefaultChannelNameColor()
            end
            local v79 = v74.TextBounds.X
            v74.Size = UDim2.new(0, v79, 1, 0)
            v75.Size = UDim2.new(1, -v79, 1, 0)
            v75.Position = UDim2.new(0, v79, 0, 0)
            v76.Size = UDim2.new(1, -v79, 1, 0)
            v76.Position = UDim2.new(0, v79, 0, 0)
            return
        end
        v74.Text = ""
        v74.Size = UDim2.new(0, 0, 0, 0)
        v75.Size = UDim2.new(1, 0, 1, 0)
        v75.Position = UDim2.new(0, 0, 0, 0)
        v76.Size = UDim2.new(1, 0, 1, 0)
        v76.Position = UDim2.new(0, 0, 0, 0)
    end
end
function u16.IsInCustomState(p80) --[[Anonymous function at line 427]]
    return p80.InCustomState
end
function u16.ResetCustomState(p81) --[[Anonymous function at line 431]]
    --[[
    Upvalues:
        [1] = u14
    --]]
    if p81.InCustomState then
        p81.CustomState:Destroy()
        p81.CustomState = nil
        p81.InCustomState = false
        p81.ChatBarParentFrame:ClearAllChildren()
        p81:CreateGuiObjects(p81.ChatBarParentFrame)
        p81:SetTextLabelText(u14:Get("GameChat_ChatMain_ChatBarText", "To chat click here or press \"/\" key"))
    end
end
function u16.EnterWhisperState(p82, p83) --[[Anonymous function at line 448]]
    --[[
    Upvalues:
        [1] = u13
        [2] = u10
    --]]
    p82:ResetCustomState()
    if u13.CustomStateCreator then
        p82.CustomState = u13.CustomStateCreator(p83, p82.ChatWindow, p82, u10)
        p82.InCustomState = true
    else
        local v84
        if u10.PlayerDisplayNamesEnabled then
            v84 = p83.DisplayName
        else
            v84 = p83.Name
        end
        p82:SetText("/w " .. v84)
    end
    p82:CaptureFocus()
end
function u16.GetCustomMessage(p85) --[[Anonymous function at line 472]]
    if p85.InCustomState then
        return p85.CustomState:GetMessage()
    else
        return nil
    end
end
function u16.CustomStateProcessCompletedMessage(p86, _) --[[Anonymous function at line 479]]
    if p86.InCustomState then
        return p86.CustomState:ProcessCompletedMessage()
    else
        return false
    end
end
function u16.FadeOutBackground(p87, p88) --[[Anonymous function at line 486]]
    --[[
    Upvalues:
        [1] = u11
    --]]
    p87.AnimParams.Background_TargetTransparency = 1
    p87.AnimParams.Background_NormalizedExptValue = u11:NormalizedDefaultExptValueInSeconds(p88)
    p87:FadeOutText(p88)
end
function u16.FadeInBackground(p89, p90) --[[Anonymous function at line 492]]
    --[[
    Upvalues:
        [1] = u11
    --]]
    p89.AnimParams.Background_TargetTransparency = 0.6
    p89.AnimParams.Background_NormalizedExptValue = u11:NormalizedDefaultExptValueInSeconds(p90)
    p89:FadeInText(p90)
end
function u16.FadeOutText(p91, p92) --[[Anonymous function at line 498]]
    --[[
    Upvalues:
        [1] = u11
    --]]
    p91.AnimParams.Text_TargetTransparency = 1
    p91.AnimParams.Text_NormalizedExptValue = u11:NormalizedDefaultExptValueInSeconds(p92)
end
function u16.FadeInText(p93, p94) --[[Anonymous function at line 503]]
    --[[
    Upvalues:
        [1] = u11
    --]]
    p93.AnimParams.Text_TargetTransparency = 0.4
    p93.AnimParams.Text_NormalizedExptValue = u11:NormalizedDefaultExptValueInSeconds(p94)
end
function u16.AnimGuiObjects(p95) --[[Anonymous function at line 508]]
    p95.GuiObject.BackgroundTransparency = p95.AnimParams.Background_CurrentTransparency
    p95.GuiObjects.TextBoxFrame.BackgroundTransparency = p95.AnimParams.Background_CurrentTransparency
    p95.GuiObjects.TextLabel.TextTransparency = p95.AnimParams.Text_CurrentTransparency
    p95.GuiObjects.TextBox.TextTransparency = p95.AnimParams.Text_CurrentTransparency
    p95.GuiObjects.MessageModeTextButton.TextTransparency = p95.AnimParams.Text_CurrentTransparency
end
function u16.InitializeAnimParams(p96) --[[Anonymous function at line 517]]
    p96.AnimParams.Text_TargetTransparency = 0.4
    p96.AnimParams.Text_CurrentTransparency = 0.4
    p96.AnimParams.Text_NormalizedExptValue = 1
    p96.AnimParams.Background_TargetTransparency = 0.6
    p96.AnimParams.Background_CurrentTransparency = 0.6
    p96.AnimParams.Background_NormalizedExptValue = 1
end
function u16.Update(p97, p98) --[[Anonymous function at line 527]]
    --[[
    Upvalues:
        [1] = u11
    --]]
    p97.AnimParams.Text_CurrentTransparency = u11:Expt(p97.AnimParams.Text_CurrentTransparency, p97.AnimParams.Text_TargetTransparency, p97.AnimParams.Text_NormalizedExptValue, p98)
    p97.AnimParams.Background_CurrentTransparency = u11:Expt(p97.AnimParams.Background_CurrentTransparency, p97.AnimParams.Background_TargetTransparency, p97.AnimParams.Background_NormalizedExptValue, p98)
    p97:AnimGuiObjects()
end
function u16.SetChannelNameColor(p99, p100, p101) --[[Anonymous function at line 544]]
    p99.ChannelNameColors[p100] = p101
    if p99.GuiObjects.MessageModeTextButton.Text == p100 then
        p99.GuiObjects.MessageModeTextButton.TextColor3 = p101
    end
end
function u16.GetChannelNameColor(p102, p103) --[[Anonymous function at line 551]]
    return p102.ChannelNameColors[p103]
end
function v6.new(p104, p105) --[[Anonymous function at line 558]]
    --[[
    Upvalues:
        [1] = u16
        [2] = u10
        [3] = u7
        [4] = u5
        [5] = u2
    --]]
    local v106 = u16
    local u107 = setmetatable({}, v106)
    u107.GuiObject = nil
    u107.ChatBarParentFrame = nil
    u107.TextBox = nil
    u107.TextLabel = nil
    u107.GuiObjects = {}
    u107.eGuiObjectsChanged = Instance.new("BindableEvent")
    u107.GuiObjectsChanged = u107.eGuiObjectsChanged.Event
    u107.TextBoxConnections = {}
    u107.PreviousText = ""
    u107.InCustomState = false
    u107.CustomState = nil
    u107.TargetChannel = nil
    u107.CommandProcessor = p104
    u107.ChatWindow = p105
    u107.TweenPixelsPerSecond = 500
    u107.TargetYSize = 0
    u107.AnimParams = {}
    u107.CalculatingSizeLock = false
    u107.ChannelNameColors = {}
    u107.UserHasChatOff = false
    u107:InitializeAnimParams()
    u10.SettingsChanged:connect(function(p108, p109) --[[Anonymous function at line 590]]
        --[[
        Upvalues:
            [1] = u107
        --]]
        if p108 == "ChatBarTextSize" then
            u107:SetTextSize(p109)
        end
    end)
    coroutine.wrap(function() --[[Anonymous function at line 596]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u5
            [3] = u2
            [4] = u107
        --]]
        local v110, v111 = pcall(function() --[[Anonymous function at line 597]]
            --[[
            Upvalues:
                [1] = u7
                [2] = u5
            --]]
            return u7:CanUserChatAsync(u5.UserId)
        end)
        if v110 then
            v110 = u2:IsStudio() or v111
        end
        if v110 == false then
            u107.UserHasChatOff = true
            u107:DoLockChatBar()
        end
    end)()
    return u107
end
return v6]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ChatBar]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="337"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1, v2 = pcall(function() --[[Anonymous function at line 7]]
    return UserSettings():IsUserFeatureEnabled("UserFlagRemoveMessageFromMessageLog")
end)
local u3 = v1 and v2
local v4, v5 = pcall(function() --[[Anonymous function at line 15]]
    return UserSettings():IsUserFeatureEnabled("UserIsChatTranslationEnabled2")
end)
local u6 = v4 and v5
local v7 = {}
local v8 = game:GetService("Chat"):WaitForChild("ClientChatModules")
local v9 = script.Parent
local u10 = require(v8:WaitForChild("ChatSettings"))
local u11
if u6 then
    u11 = v9:FindFirstChild("ChatTranslationEnabled")
    if u11 == nil then
        local u12 = nil
        u12 = v9.ChildAdded:Connect(function(p13) --[[Anonymous function at line 35]]
            --[[
            Upvalues:
                [1] = u11
                [2] = u12
            --]]
            if p13.Name == "ChatTranslationEnabled" then
                u11 = p13
                u12:Disconnect()
            end
        end)
    end
else
    u11 = nil
end
local u14 = {}
u14.__index = u14
function u14.Destroy(p15) --[[Anonymous function at line 50]]
    p15.Destroyed = true
end
function u14.SetActive(p16, p17) --[[Anonymous function at line 54]]
    if p17 ~= p16.Active then
        if p17 == false then
            p16.MessageLogDisplay:Clear()
        else
            p16.MessageLogDisplay:SetCurrentChannelName(p16.Name)
            for v18 = 1, #p16.MessageLog do
                p16.MessageLogDisplay:AddMessage(p16.MessageLog[v18])
            end
        end
        p16.Active = p17
    end
end
function u14.UpdateMessageFiltered(p19, p20) --[[Anonymous function at line 69]]
    --[[
    Upvalues:
        [1] = u6
        [2] = u11
        [3] = u3
    --]]
    local v21 = p19.MessageLog
    local v22 = 1
    local v23 = nil
    while true do
        if v22 > #v21 then
            v24 = v23
            break
        end
        local v24 = v21[v22]
        if v24.ID == p20.ID then
            break
        end
        v22 = v22 + 1
    end
    if v24 then
        v24.Message = p20.Message
        v24.IsFiltered = true
        if u6 and (u11 ~= nil and u11.Value) then
            v24.TranslatedMessage = p20.TranslatedMessage
            v24.ShowTranslated = true
        end
        if p19.Active then
            if u3 and v24.Message == "" then
                table.remove(p19.MessageLog, v22)
            end
            p19.MessageLogDisplay:UpdateMessageFiltered(v24)
            return
        end
    else
        p19:AddMessageToChannelByTimeStamp(p20)
    end
end
function u14.AddMessageToChannel(p25, p26) --[[Anonymous function at line 105]]
    --[[
    Upvalues:
        [1] = u10
    --]]
    local v27 = p25.MessageLog
    table.insert(v27, p26)
    if p25.Active then
        p25.MessageLogDisplay:AddMessage(p26)
    end
    if #p25.MessageLog > u10.MessageHistoryLengthPerChannel then
        p25:RemoveLastMessageFromChannel()
    end
end
function u14.InternalAddMessageAtTimeStamp(p28, p29) --[[Anonymous function at line 115]]
    for v30 = 1, #p28.MessageLog do
        if p29.Time < p28.MessageLog[v30].Time then
            local v31 = p28.MessageLog
            table.insert(v31, v30, p29)
            return
        end
    end
    local v32 = p28.MessageLog
    table.insert(v32, p29)
end
function u14.AddMessagesToChannelByTimeStamp(p33, p34, p35) --[[Anonymous function at line 125]]
    --[[
    Upvalues:
        [1] = u10
    --]]
    for v36 = p35, #p34 do
        p33:InternalAddMessageAtTimeStamp(p34[v36])
    end
    while #p33.MessageLog > u10.MessageHistoryLengthPerChannel do
        table.remove(p33.MessageLog, 1)
    end
    if p33.Active then
        p33.MessageLogDisplay:Clear()
        for v37 = 1, #p33.MessageLog do
            p33.MessageLogDisplay:AddMessage(p33.MessageLog[v37])
        end
    end
end
function u14.AddMessageToChannelByTimeStamp(p38, p39) --[[Anonymous function at line 140]]
    --[[
    Upvalues:
        [1] = u10
    --]]
    if #p38.MessageLog >= 1 then
        if p38.MessageLog[1].Time > p39.Time then
            return
        elseif p39.Time >= p38.MessageLog[#p38.MessageLog].Time then
            p38:AddMessageToChannel(p39)
        else
            for v40 = 1, #p38.MessageLog do
                if p39.Time < p38.MessageLog[v40].Time then
                    local v41 = p38.MessageLog
                    table.insert(v41, v40, p39)
                    if #p38.MessageLog > u10.MessageHistoryLengthPerChannel then
                        p38:RemoveLastMessageFromChannel()
                    end
                    if p38.Active then
                        p38.MessageLogDisplay:AddMessageAtIndex(p39, v40)
                    end
                    return
                end
            end
        end
    else
        p38:AddMessageToChannel(p39)
        return
    end
end
function u14.RemoveLastMessageFromChannel(p42) --[[Anonymous function at line 170]]
    table.remove(p42.MessageLog, 1)
    if p42.Active then
        p42.MessageLogDisplay:RemoveLastMessage()
    end
end
function u14.ClearMessageLog(p43) --[[Anonymous function at line 178]]
    p43.MessageLog = {}
    if p43.Active then
        p43.MessageLogDisplay:Clear()
    end
end
function u14.RegisterChannelTab(p44, p45) --[[Anonymous function at line 186]]
    p44.ChannelTab = p45
end
function v7.new(p46, p47) --[[Anonymous function at line 193]]
    --[[
    Upvalues:
        [1] = u14
    --]]
    local v48 = u14
    local v49 = setmetatable({}, v48)
    v49.Destroyed = false
    v49.Active = false
    v49.MessageLog = {}
    v49.MessageLogDisplay = p47
    v49.ChannelTab = nil
    v49.Name = p46
    return v49
end
return v7]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ChatChannel]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="338"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1, v2 = pcall(function() --[[Anonymous function at line 7]]
    return UserSettings():IsUserFeatureEnabled("UserRemoveMessageOnTextFilterFailures")
end)
local u3 = v1 and v2
local v4, v5 = pcall(function() --[[Anonymous function at line 15]]
    return UserSettings():IsUserFeatureEnabled("UserIsChatTranslationEnabled2")
end)
local u6 = v4 and v5
local u7 = {
    ["ScrollBarThickness"] = 4
}
local v8 = game:GetService("Chat"):WaitForChild("ClientChatModules")
local v9 = script.Parent
local v10 = require(v9:WaitForChild("MessageLabelCreator"))
local u11 = require(v9:WaitForChild("CurveUtil"))
local u12 = require(v8:WaitForChild("ChatSettings"))
local u13 = v10.new()
local u14 = {}
u14.__index = u14
local function u18() --[[Anonymous function at line 42]]
    --[[
    Upvalues:
        [1] = u12
        [2] = u7
    --]]
    local v15 = Instance.new("Frame")
    v15.Selectable = false
    v15.Size = UDim2.new(1, 0, 1, 0)
    v15.BackgroundTransparency = 1
    local v16 = Instance.new("ScrollingFrame")
    v16.Selectable = u12.GamepadNavigationEnabled
    v16.Name = "Scroller"
    v16.BackgroundTransparency = 1
    v16.BorderSizePixel = 0
    v16.Position = UDim2.new(0, 0, 0, 3)
    v16.Size = UDim2.new(1, -4, 1, -6)
    v16.CanvasSize = UDim2.new(0, 0, 0, 0)
    v16.ScrollBarThickness = u7.ScrollBarThickness
    v16.Active = true
    v16.Parent = v15
    local v17 = Instance.new("UIListLayout")
    v17.SortOrder = Enum.SortOrder.LayoutOrder
    v17.Parent = v16
    return v15, v16, v17
end
function u14.Destroy(p19) --[[Anonymous function at line 67]]
    p19.GuiObject:Destroy()
    p19.Destroyed = true
end
function u14.SetActive(p20, p21) --[[Anonymous function at line 72]]
    p20.GuiObject.Visible = p21
end
function u14.UpdateMessageFiltered(p22, p23) --[[Anonymous function at line 76]]
    --[[
    Upvalues:
        [1] = u3
    --]]
    local v24 = p22.MessageObjectLog
    local v25 = 1
    local v26 = nil
    while true do
        if v25 > #v24 then
            v27 = v26
            break
        end
        local v27 = v24[v25]
        if v27.ID == p23.ID then
            break
        end
        v25 = v25 + 1
    end
    if v27 then
        if u3 then
            if p23.Message == "" then
                p22:RemoveMessageAtIndex(v25)
            else
                v27.UpdateTextFunction(p23)
                p22:PositionMessageLabelInWindow(v27, v25)
            end
        end
        v27.UpdateTextFunction(p23)
        p22:PositionMessageLabelInWindow(v27, v25)
    end
end
function u14.RefreshMessagePlacement(p28, p29) --[[Anonymous function at line 107]]
    local v30 = p28.MessageObjectLog
    local v31 = 1
    local v32 = nil
    while true do
        if v31 > #v30 then
            v33 = v32
            break
        end
        local v33 = v30[v31]
        if v33.ID == p29.ID then
            break
        end
        v31 = v31 + 1
    end
    if v33 then
        p28:PositionMessageLabelInWindow(v33, v31)
    end
end
function u14.AddMessage(u34, u35) --[[Anonymous function at line 129]]
    --[[
    Upvalues:
        [1] = u6
        [2] = u13
    --]]
    u34:WaitUntilParentedCorrectly()
    local v36
    if u6 then
        v36 = u13:CreateMessageLabel_Chat(u35, u34.CurrentChannelName, function() --[[Anonymous function at line 134]]
            --[[
            Upvalues:
                [1] = u34
                [2] = u35
            --]]
            u34:RefreshMessagePlacement(u35)
        end)
    else
        v36 = u13:CreateMessageLabel(u35, u34.CurrentChannelName)
    end
    if v36 ~= nil then
        local v37 = u34.MessageObjectLog
        table.insert(v37, v36)
        u34:PositionMessageLabelInWindow(v36, #u34.MessageObjectLog)
    end
end
function u14.RemoveMessageAtIndex(p38, p39) --[[Anonymous function at line 151]]
    p38:WaitUntilParentedCorrectly()
    local v40 = p38.MessageObjectLog[p39]
    if v40 then
        v40:Destroy()
        table.remove(p38.MessageObjectLog, p39)
    end
end
function u14.AddMessageAtIndex(u41, u42, p43) --[[Anonymous function at line 162]]
    --[[
    Upvalues:
        [1] = u6
        [2] = u13
    --]]
    local v44
    if u6 then
        v44 = u13:CreateMessageLabel_Chat(u42, u41.CurrentChannelName, function() --[[Anonymous function at line 165]]
            --[[
            Upvalues:
                [1] = u41
                [2] = u42
            --]]
            u41:RefreshMessagePlacement(u42)
        end)
    else
        v44 = u13:CreateMessageLabel(u42, u41.CurrentChannelName)
    end
    if v44 ~= nil then
        local v45 = u41.MessageObjectLog
        table.insert(v45, p43, v44)
        u41:PositionMessageLabelInWindow(v44, p43)
    end
end
function u14.RemoveLastMessage(p46) --[[Anonymous function at line 183]]
    p46:WaitUntilParentedCorrectly()
    p46.MessageObjectLog[1]:Destroy()
    table.remove(p46.MessageObjectLog, 1)
end
function u14.IsScrolledDown(p47) --[[Anonymous function at line 192]]
    local v48 = p47.Scroller.CanvasSize.Y.Offset
    local v49 = p47.Scroller.AbsoluteWindowSize.Y
    local v50 = p47.Scroller.CanvasPosition.Y
    return v48 < v49 and true or v48 - v50 <= v49 + 5
end
function u14.UpdateMessageTextHeight(p51, p52) --[[Anonymous function at line 201]]
    local v53 = p52.BaseFrame
    for v54 = 1, 10 do
        if p52.BaseMessage.TextFits then
            break
        end
        local v55 = p51.Scroller.AbsoluteSize.X - v54
        v53.Size = UDim2.new(1, 0, 0, p52.GetHeightFunction(v55))
    end
end
function u14.PositionMessageLabelInWindow(p56, p57, p58) --[[Anonymous function at line 213]]
    p56:WaitUntilParentedCorrectly()
    local v59 = p56:IsScrolledDown()
    local v60 = p57.BaseFrame
    local v61
    if p56.MessageObjectLog[p58 - 1] then
        if p58 == #p56.MessageObjectLog then
            v61 = p56.MessageObjectLog[p58 - 1].BaseFrame.LayoutOrder + 1
        else
            v61 = p56.MessageObjectLog[p58 - 1].BaseFrame.LayoutOrder
        end
    else
        v61 = 1
    end
    v60.LayoutOrder = v61
    v60.Size = UDim2.new(1, 0, 0, p57.GetHeightFunction(p56.Scroller.AbsoluteSize.X))
    v60.Parent = p56.Scroller
    if p57.BaseMessage then
        p56:UpdateMessageTextHeight(p57)
    end
    if v59 then
        local v62 = p56.Scroller
        local v63 = Vector2.new
        local v64 = p56.Scroller.CanvasSize.Y.Offset - p56.Scroller.AbsoluteSize.Y
        v62.CanvasPosition = v63(0, (math.max(0, v64)))
    end
end
function u14.ReorderAllMessages(p65) --[[Anonymous function at line 243]]
    p65:WaitUntilParentedCorrectly()
    if p65.GuiObject.AbsoluteSize.Y < 1 then
        return
    else
        local v66 = p65.Scroller.CanvasPosition
        local v67 = p65:IsScrolledDown()
        for _, v68 in pairs(p65.MessageObjectLog) do
            p65:UpdateMessageTextHeight(v68)
        end
        if v67 then
            local v69 = p65.Scroller
            local v70 = Vector2.new
            local v71 = p65.Scroller.CanvasSize.Y.Offset - p65.Scroller.AbsoluteSize.Y
            v69.CanvasPosition = v70(0, (math.max(0, v71)))
        else
            p65.Scroller.CanvasPosition = v66
        end
    end
end
function u14.Clear(p72) --[[Anonymous function at line 265]]
    for _, v73 in pairs(p72.MessageObjectLog) do
        v73:Destroy()
    end
    p72.MessageObjectLog = {}
end
function u14.SetCurrentChannelName(p74, p75) --[[Anonymous function at line 272]]
    p74.CurrentChannelName = p75
end
function u14.FadeOutBackground(_, _) --[[Anonymous function at line 276]] end
function u14.FadeInBackground(_, _) --[[Anonymous function at line 280]] end
function u14.FadeOutText(p76, p77) --[[Anonymous function at line 284]]
    --[[
    Upvalues:
        [1] = u11
    --]]
    for v78 = 1, #p76.MessageObjectLog do
        if p76.MessageObjectLog[v78].FadeOutFunction then
            p76.MessageObjectLog[v78].FadeOutFunction(p77, u11)
        end
    end
end
function u14.FadeInText(p79, p80) --[[Anonymous function at line 292]]
    --[[
    Upvalues:
        [1] = u11
    --]]
    for v81 = 1, #p79.MessageObjectLog do
        if p79.MessageObjectLog[v81].FadeInFunction then
            p79.MessageObjectLog[v81].FadeInFunction(p80, u11)
        end
    end
end
function u14.Update(p82, p83) --[[Anonymous function at line 300]]
    --[[
    Upvalues:
        [1] = u11
    --]]
    for v84 = 1, #p82.MessageObjectLog do
        if p82.MessageObjectLog[v84].UpdateAnimFunction then
            p82.MessageObjectLog[v84].UpdateAnimFunction(p83, u11)
        end
    end
end
function u14.WaitUntilParentedCorrectly(p85) --[[Anonymous function at line 309]]
    while not p85.GuiObject:IsDescendantOf(game:GetService("Players").LocalPlayer) do
        p85.GuiObject.AncestryChanged:wait()
    end
end
function u7.new() --[[Anonymous function at line 318]]
    --[[
    Upvalues:
        [1] = u14
        [2] = u18
    --]]
    local v86 = u14
    local u87 = setmetatable({}, v86)
    u87.Destroyed = false
    local v88, v89, v90 = u18()
    u87.GuiObject = v88
    u87.Scroller = v89
    u87.Layout = v90
    u87.MessageObjectLog = {}
    u87.Name = "MessageLogDisplay"
    u87.GuiObject.Name = "Frame_" .. u87.Name
    u87.CurrentChannelName = ""
    u87.GuiObject:GetPropertyChangedSignal("AbsoluteSize"):Connect(function() --[[Anonymous function at line 334]]
        --[[
        Upvalues:
            [1] = u87
        --]]
        spawn(function() --[[Anonymous function at line 335]]
            --[[
            Upvalues:
                [1] = u87
            --]]
            u87:ReorderAllMessages()
        end)
    end)
    local u91 = true
    u87.Layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function() --[[Anonymous function at line 340]]
        --[[
        Upvalues:
            [1] = u87
            [2] = u91
        --]]
        local v92 = u87.Layout.AbsoluteContentSize
        u87.Scroller.CanvasSize = UDim2.new(0, 0, 0, v92.Y)
        if u91 then
            local v93 = u87.Scroller.AbsoluteWindowSize
            u87.Scroller.CanvasPosition = Vector2.new(0, v92.Y - v93.Y)
        end
    end)
    u87.Scroller:GetPropertyChangedSignal("CanvasPosition"):Connect(function() --[[Anonymous function at line 349]]
        --[[
        Upvalues:
            [1] = u91
            [2] = u87
        --]]
        u91 = u87:IsScrolledDown()
    end)
    return u87
end
return u7]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[MessageLogDisplay]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="339"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1 = {}
local u2 = game:GetService("Players")
game:GetService("Chat")
local u3 = u2.LocalPlayer:WaitForChild("PlayerGui")
local u4 = game:GetService("Chat")
local v5 = u4:WaitForChild("ClientChatModules")
local v6 = script.Parent
local u7 = require(v6:WaitForChild("ChatChannel"))
local u8 = require(v5:WaitForChild("ChatSettings"))
local u9 = require(v6:WaitForChild("CurveUtil"))
local u10 = {}
u10.__index = u10
function getClassicChatEnabled()
    --[[
    Upvalues:
        [1] = u8
        [2] = u2
    --]]
    if u8.ClassicChatEnabled == nil then
        return u2.ClassicChat
    else
        return u8.ClassicChatEnabled
    end
end
function getBubbleChatEnabled()
    --[[
    Upvalues:
        [1] = u8
        [2] = u2
    --]]
    if u8.BubbleChatEnabled == nil then
        return u2.BubbleChat
    else
        return u8.BubbleChatEnabled
    end
end
function bubbleChatOnly()
    local v11 = not getClassicChatEnabled()
    if v11 then
        v11 = getBubbleChatEnabled()
    end
    return v11
end
function mergeProps(p12, p13)
    if p12 and p13 then
        for v14, v15 in pairs(p12) do
            if p13[v14] ~= nil then
                p13[v14] = v15
            end
        end
    end
end
function u10.CreateGuiObjects(p16, p17) --[[Anonymous function at line 62]]
    --[[
    Upvalues:
        [1] = u4
        [2] = u8
        [3] = u3
    --]]
    local u18 = nil
    pcall(function() --[[Anonymous function at line 64]]
        --[[
        Upvalues:
            [1] = u18
            [2] = u4
        --]]
        u18 = u4:InvokeChatCallback(Enum.ChatCallbackType.OnCreatingChatWindow, nil)
    end)
    mergeProps(u18, u8)
    local v19 = Instance.new("Frame")
    v19.BackgroundTransparency = 1
    v19.Active = u8.WindowDraggable
    v19.Parent = p17
    v19.AutoLocalize = false
    local u20 = Instance.new("Frame")
    u20.Selectable = false
    u20.Name = "ChatBarParentFrame"
    u20.BackgroundTransparency = 1
    u20.Parent = v19
    local u21 = Instance.new("Frame")
    u21.Selectable = false
    u21.Name = "ChannelsBarParentFrame"
    u21.BackgroundTransparency = 1
    u21.Position = UDim2.new(0, 0, 0, 0)
    u21.Parent = v19
    local u22 = Instance.new("Frame")
    u22.Selectable = false
    u22.Name = "ChatChannelParentFrame"
    u22.BackgroundTransparency = 1
    u22.BackgroundColor3 = u8.BackGroundColor
    u22.BackgroundTransparency = 0.6
    u22.BorderSizePixel = 0
    u22.Parent = v19
    local u23 = Instance.new("ImageButton")
    u23.Selectable = false
    u23.Image = ""
    u23.BackgroundTransparency = 0.6
    u23.BorderSizePixel = 0
    u23.Visible = false
    u23.BackgroundColor3 = u8.BackGroundColor
    u23.Active = true
    if bubbleChatOnly() then
        u23.Position = UDim2.new(1, -u23.AbsoluteSize.X, 0, 0)
    else
        u23.Position = UDim2.new(1, -u23.AbsoluteSize.X, 1, -u23.AbsoluteSize.Y)
    end
    u23.Parent = v19
    local v24 = Instance.new("ImageLabel")
    v24.Selectable = false
    v24.Size = UDim2.new(0.8, 0, 0.8, 0)
    v24.Position = UDim2.new(0.2, 0, 0.2, 0)
    v24.BackgroundTransparency = 1
    v24.Image = "rbxassetid://261880743"
    v24.Parent = u23
    local u25 = v19
    local v26 = 3
    while v19 and not v19:IsA("ScreenGui") do
        v19 = v19.Parent
    end
    local u27 = v19.AbsoluteSize.X <= 640 and 1 or (v19.AbsoluteSize.X <= 1024 and 2 or v26)
    local u28 = false
    local function u46() --[[Anonymous function at line 145]]
        --[[
        Upvalues:
            [1] = u28
            [2] = u25
            [3] = u3
            [4] = u8
            [5] = u21
            [6] = u20
        --]]
        if u28 then
            return
        else
            u28 = true
            if u25:IsDescendantOf(u3) then
                local v29 = u25
                while v29 and not v29:IsA("ScreenGui") do
                    v29 = v29.Parent
                end
                local v30 = u8.MinimumWindowSize
                local v31 = u8.MaximumWindowSize
                local v32 = u21.AbsoluteSize.Y + u20.AbsoluteSize.Y
                local v33 = v30.X.Scale * v29.AbsoluteSize.X + v30.X.Offset
                local v34 = v30.Y.Scale * v29.AbsoluteSize.Y + v30.Y.Offset
                local v35 = math.max(v34, v32)
                local v36 = v31.X.Scale * v29.AbsoluteSize.X + v31.X.Offset
                local v37 = v31.Y.Scale * v29.AbsoluteSize.Y + v31.Y.Offset
                local v38 = u25.AbsoluteSize.X
                local v39 = u25.AbsoluteSize.Y
                if v38 < v33 then
                    local v40 = UDim2.new(0, v33 - v38, 0, 0)
                    u25.Size = u25.Size + v40
                elseif v36 < v38 then
                    local v41 = UDim2.new(0, v36 - v38, 0, 0)
                    u25.Size = u25.Size + v41
                end
                if v39 < v35 then
                    local v42 = UDim2.new(0, 0, 0, v35 - v39)
                    u25.Size = u25.Size + v42
                elseif v37 < v39 then
                    local v43 = UDim2.new(0, 0, 0, v37 - v39)
                    u25.Size = u25.Size + v43
                end
                local v44 = u25.AbsoluteSize.X / v29.AbsoluteSize.X
                local v45 = u25.AbsoluteSize.Y / v29.AbsoluteSize.Y
                u25.Size = UDim2.new(v44, 0, v45, 0)
                u28 = false
            end
        end
    end
    u25.Changed:connect(function(p47) --[[Anonymous function at line 196]]
        --[[
        Upvalues:
            [1] = u46
        --]]
        if p47 == "AbsoluteSize" then
            u46()
        end
    end)
    u23.DragBegin:connect(function(_) --[[Anonymous function at line 202]]
        --[[
        Upvalues:
            [1] = u25
        --]]
        u25.Draggable = false
    end)
    local function u50(p48) --[[Anonymous function at line 206]]
        --[[
        Upvalues:
            [1] = u8
            [2] = u25
            [3] = u23
        --]]
        if u8.WindowDraggable == false and u8.WindowResizable == false then
            return
        else
            local v49 = p48 - u25.AbsolutePosition + u23.AbsoluteSize
            u25.Size = UDim2.new(0, v49.X, 0, v49.Y)
            if bubbleChatOnly() then
                u23.Position = UDim2.new(1, -u23.AbsoluteSize.X, 0, 0)
            else
                u23.Position = UDim2.new(1, -u23.AbsoluteSize.X, 1, -u23.AbsoluteSize.Y)
            end
        end
    end
    u23.DragStopped:connect(function(_, _) --[[Anonymous function at line 219]]
        --[[
        Upvalues:
            [1] = u25
            [2] = u8
        --]]
        u25.Draggable = u8.WindowDraggable
    end)
    local u51 = false
    u23.Changed:connect(function(p52) --[[Anonymous function at line 225]]
        --[[
        Upvalues:
            [1] = u25
            [2] = u51
            [3] = u50
            [4] = u23
        --]]
        if p52 == "AbsolutePosition" and not u25.Draggable then
            if u51 then
                return
            end
            u51 = true
            u50(u23.AbsolutePosition)
            u51 = false
        end
    end)
    local u53
    if bubbleChatOnly() then
        u20.Position = UDim2.new(0, 0, 0, 0)
        u21.Visible = false
        u21.Active = false
        u22.Visible = false
        u22.Active = false
        u53 = u25
        while u25 and not u25:IsA("ScreenGui") do
            u25 = u25.Parent
        end
        local v54, v55
        if u27 == 1 then
            v54 = u8.DefaultWindowSizePhone.X.Scale
            v55 = u8.DefaultWindowSizePhone.X.Offset
        elseif u27 == 2 then
            v54 = u8.DefaultWindowSizeTablet.X.Scale
            v55 = u8.DefaultWindowSizeTablet.X.Offset
        else
            v54 = u8.DefaultWindowSizeDesktop.X.Scale
            v55 = u8.DefaultWindowSizeDesktop.X.Offset
        end
        local v56 = nil
        local v57
        if u27 == 1 then
            v57 = v56 or u8.ChatBarTextSizePhone
        else
            v57 = v56 or u8.ChatBarTextSize
        end
        local v58 = v57 + 14 + 10
        u53.Size = UDim2.new(v54, v55, 0, v58)
        u53.Position = u8.DefaultWindowPosition
    else
        u53 = u25
        while u25 and not u25:IsA("ScreenGui") do
            u25 = u25.Parent
        end
        if u27 == 1 then
            u53.Size = u8.DefaultWindowSizePhone
        elseif u27 == 2 then
            u53.Size = u8.DefaultWindowSizeTablet
        else
            u53.Size = u8.DefaultWindowSizeDesktop
        end
        u53.Position = u8.DefaultWindowPosition
    end
    if u27 == 1 then
        u8.ChatWindowTextSize = u8.ChatWindowTextSizePhone
        u8.ChatChannelsTabTextSize = u8.ChatChannelsTabTextSizePhone
        u8.ChatBarTextSize = u8.ChatBarTextSizePhone
    end
    local function u61(p59) --[[Anonymous function at line 323]]
        --[[
        Upvalues:
            [1] = u23
            [2] = u20
        --]]
        u23.Visible = p59
        u23.Draggable = p59
        local v60 = u20.Size.Y.Offset
        if p59 then
            u20.Size = UDim2.new(1, -v60 - 2, 0, v60)
            if not bubbleChatOnly() then
                u20.Position = UDim2.new(0, 0, 1, -v60)
                return
            end
        else
            u20.Size = UDim2.new(1, 0, 0, v60)
            if not bubbleChatOnly() then
                u20.Position = UDim2.new(0, 0, 1, -v60)
            end
        end
    end
    local function u69() --[[Anonymous function at line 342]]
        --[[
        Upvalues:
            [1] = u27
            [2] = u8
            [3] = u22
        --]]
        local v62 = nil
        local v63
        if u27 == 1 then
            v63 = v62 or u8.ChatChannelsTabTextSizePhone
        else
            v63 = v62 or u8.ChatChannelsTabTextSize
        end
        local v64 = v63 + 8
        local v65 = math.max(32, v64) + 2
        local v66 = nil
        local v67
        if u27 == 1 then
            v67 = v66 or u8.ChatBarTextSizePhone
        else
            v67 = v66 or u8.ChatBarTextSize
        end
        local v68 = v67 + 14 + 10
        if u8.ShowChannelsBar then
            u22.Size = UDim2.new(1, 0, 1, -(v65 + v68 + 2 + 2))
            u22.Position = UDim2.new(0, 0, 0, v65 + 2)
        else
            u22.Size = UDim2.new(1, 0, 1, -(v68 + 2 + 2))
            u22.Position = UDim2.new(0, 0, 0, 2)
        end
    end
    local function u73(p70) --[[Anonymous function at line 364]]
        --[[
        Upvalues:
            [1] = u27
            [2] = u8
            [3] = u20
            [4] = u23
            [5] = u69
            [6] = u61
        --]]
        local v71
        if u27 == 1 then
            v71 = p70 or u8.ChatBarTextSizePhone
        else
            v71 = p70 or u8.ChatBarTextSize
        end
        local v72 = v71 + 14 + 10
        u20.Size = UDim2.new(1, 0, 0, v72)
        if not bubbleChatOnly() then
            u20.Position = UDim2.new(0, 0, 1, -v72)
        end
        u23.Size = UDim2.new(0, v72, 0, v72)
        u23.Position = UDim2.new(1, -v72, 1, -v72)
        u69()
        u61(u8.WindowResizable)
    end
    local v74 = u8.ChatChannelsTabTextSize
    local v75
    if u27 == 1 then
        v75 = v74 or u8.ChatChannelsTabTextSizePhone
    else
        v75 = v74 or u8.ChatChannelsTabTextSize
    end
    local v76 = v75 + 8
    local v77 = math.max(32, v76) + 2
    u21.Size = UDim2.new(1, 0, 0, v77)
    u69()
    u73(u8.ChatBarTextSize)
    local v78 = u8.WindowDraggable
    u53.Active = v78
    u53.Draggable = v78
    u61(u8.WindowResizable)
    u21.Visible = u8.ShowChannelsBar
    u69()
    u8.SettingsChanged:connect(function(p79, p80) --[[Anonymous function at line 390]]
        --[[
        Upvalues:
            [1] = u53
            [2] = u61
            [3] = u27
            [4] = u8
            [5] = u21
            [6] = u69
            [7] = u73
        --]]
        if p79 == "WindowDraggable" then
            u53.Active = p80
            u53.Draggable = p80
            return
        elseif p79 == "WindowResizable" then
            u61(p80)
            return
        elseif p79 == "ChatChannelsTabTextSize" then
            local v81
            if u27 == 1 then
                v81 = p80 or u8.ChatChannelsTabTextSizePhone
            else
                v81 = p80 or u8.ChatChannelsTabTextSize
            end
            local v82 = v81 + 8
            local v83 = math.max(32, v82) + 2
            u21.Size = UDim2.new(1, 0, 0, v83)
            u69()
            return
        elseif p79 == "ChatBarTextSize" then
            u73(p80)
        elseif p79 == "ShowChannelsBar" then
            u21.Visible = p80
            u69()
        end
    end)
    p16.GuiObject = u53
    p16.GuiObjects.BaseFrame = u53
    p16.GuiObjects.ChatBarParentFrame = u20
    p16.GuiObjects.ChannelsBarParentFrame = u21
    p16.GuiObjects.ChatChannelParentFrame = u22
    p16.GuiObjects.ChatResizerFrame = u23
    p16.GuiObjects.ResizeIcon = v24
    p16:AnimGuiObjects()
end
function u10.GetChatBar(p84) --[[Anonymous function at line 420]]
    return p84.ChatBar
end
function u10.RegisterChatBar(p85, p86) --[[Anonymous function at line 424]]
    p85.ChatBar = p86
    p85.ChatBar:CreateGuiObjects(p85.GuiObjects.ChatBarParentFrame)
end
function u10.RegisterChannelsBar(p87, p88) --[[Anonymous function at line 429]]
    p87.ChannelsBar = p88
    p87.ChannelsBar:CreateGuiObjects(p87.GuiObjects.ChannelsBarParentFrame)
end
function u10.RegisterMessageLogDisplay(p89, p90) --[[Anonymous function at line 434]]
    p89.MessageLogDisplay = p90
    p89.MessageLogDisplay.GuiObject.Parent = p89.GuiObjects.ChatChannelParentFrame
end
function u10.AddChannel(u91, u92) --[[Anonymous function at line 439]]
    --[[
    Upvalues:
        [1] = u7
    --]]
    if not u91:GetChannel(u92) then
        local v93 = u7.new(u92, u91.MessageLogDisplay)
        u91.Channels[u92:lower()] = v93
        v93:SetActive(false)
        local v94 = u91.ChannelsBar:AddChannelTab(u92)
        v94.NameTag.MouseButton1Click:connect(function() --[[Anonymous function at line 451]]
            --[[
            Upvalues:
                [1] = u91
                [2] = u92
            --]]
            u91:SwitchCurrentChannel(u92)
        end)
        v93:RegisterChannelTab(v94)
        return v93
    end
    error("Channel \'" .. u92 .. "\' already exists!")
end
function u10.GetFirstChannel(p95) --[[Anonymous function at line 460]]
    -- block 4
    local v96, v97, v98
    -- GenericForInit
v96, v97, v98 = pairs(p95.Channels)
[internal control] = v98
-- end GenericForInit
    local v99, v100
    -- GenericForNext
v99, v100 = v96(v97, [internal control])
if v99 ~= nil
[internal control] = v99
-- end GenericForNext
    -- block 0
    goto l1
    ::l1::
    return v100
    ::l3::
    return nil
    -- block 5
    goto l3
end
function u10.RemoveChannel(p101, p102) --[[Anonymous function at line 469]]
    --[[
    Upvalues:
        [1] = u8
    --]]
    if not p101:GetChannel(p102) then
        error("Channel \'" .. p102 .. "\' does not exist!")
    end
    local v103 = p102:lower()
    local v104
    if p101.Channels[v103] == p101:GetCurrentChannel() then
        p101:SwitchCurrentChannel(nil)
        v104 = true
    else
        v104 = false
    end
    p101.Channels[v103]:Destroy()
    p101.Channels[v103] = nil
    p101.ChannelsBar:RemoveChannelTab(p102)
    if v104 then
        local v105
        if p101:GetChannel(u8.GeneralChannelName) ~= nil and v103 ~= u8.GeneralChannelName:lower() then
            v105 = u8.GeneralChannelName
        else
            local v106 = p101:GetFirstChannel()
            v105 = v106 and v106.Name or nil
        end
        p101:SwitchCurrentChannel(v105)
    end
    if not u8.ShowChannelsBar and p101.ChatBar.TargetChannel == p102 then
        p101.ChatBar:SetChannelTarget(u8.GeneralChannelName)
    end
end
function u10.GetChannel(p107, p108) --[[Anonymous function at line 511]]
    return p108 and p107.Channels[p108:lower()] or nil
end
function u10.GetTargetMessageChannel(p109) --[[Anonymous function at line 515]]
    --[[
    Upvalues:
        [1] = u8
    --]]
    if not u8.ShowChannelsBar then
        return p109.ChatBar.TargetChannel
    end
    local v110 = p109:GetCurrentChannel()
    if v110 then
        v110 = v110.Name
    end
    return v110
end
function u10.GetCurrentChannel(p111) --[[Anonymous function at line 524]]
    return p111.CurrentChannel
end
function u10.SwitchCurrentChannel(p112, p113) --[[Anonymous function at line 528]]
    --[[
    Upvalues:
        [1] = u8
    --]]
    if not u8.ShowChannelsBar then
        local v114 = p112:GetChannel(p113)
        if v114 then
            p112.ChatBar:SetChannelTarget(v114.Name)
        end
        p113 = u8.GeneralChannelName
    end
    local v115 = p112:GetCurrentChannel()
    local v116 = p112:GetChannel(p113)
    if v116 == nil then
        error(string.format("Channel \'%s\' does not exist.", p113))
    end
    if v116 ~= v115 then
        if v115 then
            v115:SetActive(false)
            p112.ChannelsBar:GetChannelTab(v115.Name):SetActive(false)
        end
        if v116 then
            v116:SetActive(true)
            p112.ChannelsBar:GetChannelTab(v116.Name):SetActive(true)
        end
        p112.CurrentChannel = v116
    end
end
function u10.UpdateFrameVisibility(p117) --[[Anonymous function at line 562]]
    local v118 = p117.GuiObject
    local v119 = p117.Visible
    if v119 then
        v119 = p117.CoreGuiEnabled
    end
    v118.Visible = v119
end
function u10.GetVisible(p120) --[[Anonymous function at line 566]]
    return p120.Visible
end
function u10.SetVisible(p121, p122) --[[Anonymous function at line 570]]
    p121.Visible = p122
    p121:UpdateFrameVisibility()
end
function u10.GetCoreGuiEnabled(p123) --[[Anonymous function at line 575]]
    return p123.CoreGuiEnabled
end
function u10.SetCoreGuiEnabled(p124, p125) --[[Anonymous function at line 579]]
    p124.CoreGuiEnabled = p125
    p124:UpdateFrameVisibility()
end
function u10.EnableResizable(p126) --[[Anonymous function at line 584]]
    p126.GuiObjects.ChatResizerFrame.Active = true
end
function u10.DisableResizable(p127) --[[Anonymous function at line 588]]
    p127.GuiObjects.ChatResizerFrame.Active = false
end
function u10.FadeOutBackground(p128, p129) --[[Anonymous function at line 592]]
    --[[
    Upvalues:
        [1] = u9
    --]]
    p128.ChannelsBar:FadeOutBackground(p129)
    p128.MessageLogDisplay:FadeOutBackground(p129)
    p128.ChatBar:FadeOutBackground(p129)
    p128.AnimParams.Background_TargetTransparency = 1
    p128.AnimParams.Background_NormalizedExptValue = u9:NormalizedDefaultExptValueInSeconds(p129)
end
function u10.FadeInBackground(p130, p131) --[[Anonymous function at line 601]]
    --[[
    Upvalues:
        [1] = u9
    --]]
    p130.ChannelsBar:FadeInBackground(p131)
    p130.MessageLogDisplay:FadeInBackground(p131)
    p130.ChatBar:FadeInBackground(p131)
    p130.AnimParams.Background_TargetTransparency = 0.6
    p130.AnimParams.Background_NormalizedExptValue = u9:NormalizedDefaultExptValueInSeconds(p131)
end
function u10.FadeOutText(p132, p133) --[[Anonymous function at line 610]]
    p132.MessageLogDisplay:FadeOutText(p133)
    p132.ChannelsBar:FadeOutText(p133)
end
function u10.FadeInText(p134, p135) --[[Anonymous function at line 615]]
    p134.MessageLogDisplay:FadeInText(p135)
    p134.ChannelsBar:FadeInText(p135)
end
function u10.AnimGuiObjects(p136) --[[Anonymous function at line 620]]
    p136.GuiObjects.ChatChannelParentFrame.BackgroundTransparency = p136.AnimParams.Background_CurrentTransparency
    p136.GuiObjects.ChatResizerFrame.BackgroundTransparency = p136.AnimParams.Background_CurrentTransparency
    p136.GuiObjects.ResizeIcon.ImageTransparency = p136.AnimParams.Background_CurrentTransparency
end
function u10.InitializeAnimParams(p137) --[[Anonymous function at line 626]]
    --[[
    Upvalues:
        [1] = u9
    --]]
    p137.AnimParams.Background_TargetTransparency = 0.6
    p137.AnimParams.Background_CurrentTransparency = 0.6
    p137.AnimParams.Background_NormalizedExptValue = u9:NormalizedDefaultExptValueInSeconds(0)
end
function u10.Update(p138, p139) --[[Anonymous function at line 632]]
    --[[
    Upvalues:
        [1] = u9
    --]]
    p138.ChatBar:Update(p139)
    p138.ChannelsBar:Update(p139)
    p138.MessageLogDisplay:Update(p139)
    p138.AnimParams.Background_CurrentTransparency = u9:Expt(p138.AnimParams.Background_CurrentTransparency, p138.AnimParams.Background_TargetTransparency, p138.AnimParams.Background_NormalizedExptValue, p139)
    p138:AnimGuiObjects()
end
function v1.new() --[[Anonymous function at line 650]]
    --[[
    Upvalues:
        [1] = u10
    --]]
    local v140 = u10
    local v141 = setmetatable({}, v140)
    v141.GuiObject = nil
    v141.GuiObjects = {}
    v141.ChatBar = nil
    v141.ChannelsBar = nil
    v141.MessageLogDisplay = nil
    v141.Channels = {}
    v141.CurrentChannel = nil
    v141.Visible = true
    v141.CoreGuiEnabled = true
    v141.AnimParams = {}
    v141:InitializeAnimParams()
    return v141
end
return v1]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ChatWindow]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="340"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1 = {}
local u2 = game:GetService("Chat")
local v3 = u2:WaitForChild("ClientChatModules")
local u4 = v3:WaitForChild("MessageCreatorModules")
local u5 = require(u4:WaitForChild("Util"))
local v6 = script.Parent
require(v3:WaitForChild("ChatSettings"))
local u7 = require(v6:WaitForChild("ObjectPool"))
require(v6:WaitForChild("MessageSender"))
local u8 = {}
u8.__index = u8
function mergeProps(p9, p10)
    if p9 then
        for v11, v12 in pairs(p9) do
            p10[v11] = v12
        end
    end
end
function ReturnToObjectPoolRecursive(p13, p14)
    local v15 = p13:GetChildren()
    for v16 = 1, #v15 do
        ReturnToObjectPoolRecursive(v15[v16], p14)
    end
    p13.Parent = nil
    p14:ReturnInstance(p13)
end
function GetMessageCreators()
    --[[
    Upvalues:
        [1] = u4
        [2] = u5
    --]]
    local v17 = u4:GetChildren()
    local v18 = {}
    for v19 = 1, #v17 do
        if v17[v19]:IsA("ModuleScript") and v17[v19].Name ~= "Util" then
            local v20 = require(v17[v19])
            v18[v20[u5.KEY_MESSAGE_TYPE]] = v20[u5.KEY_CREATOR_FUNCTION]
        end
    end
    return v18
end
function u8.WrapIntoMessageObject(p21, p22, p23) --[[Anonymous function at line 56]]
    --[[
    Upvalues:
        [1] = u5
    --]]
    local v24 = p23[u5.KEY_BASE_FRAME]
    local v25
    if u5.KEY_BASE_MESSAGE then
        v25 = p23[u5.KEY_BASE_MESSAGE]
    else
        v25 = nil
    end
    local v26 = p23[u5.KEY_UPDATE_TEXT_FUNC]
    local v27 = p23[u5.KEY_GET_HEIGHT]
    local v28 = p23[u5.KEY_FADE_IN]
    local v29 = p23[u5.KEY_FADE_OUT]
    local v30 = p23[u5.KEY_UPDATE_ANIMATION]
    return {
        ["ID"] = p22.ID,
        ["BaseFrame"] = v24,
        ["BaseMessage"] = v25,
        ["UpdateTextFunction"] = v26 or function() --[[Anonymous function at line 73]]
            warn("NO MESSAGE RESIZE FUNCTION")
        end,
        ["GetHeightFunction"] = v27,
        ["FadeInFunction"] = v28,
        ["FadeOutFunction"] = v29,
        ["UpdateAnimFunction"] = v30,
        ["ObjectPool"] = p21.ObjectPool,
        ["Destroyed"] = false,
        ["Destroy"] = function(p31) --[[Function name: Destroy, line 81]]
            ReturnToObjectPoolRecursive(p31.BaseFrame, p31.ObjectPool)
            p31.Destroyed = true
        end
    }
end
function u8.CreateMessageLabel_Chat(p32, u33, p34, p35) --[[Anonymous function at line 89]]
    --[[
    Upvalues:
        [1] = u2
    --]]
    u33.Channel = p34
    local u36 = nil
    pcall(function() --[[Anonymous function at line 92]]
        --[[
        Upvalues:
            [1] = u36
            [2] = u2
            [3] = u33
        --]]
        u36 = u2:InvokeChatCallback(Enum.ChatCallbackType.OnClientFormattingMessage, u33)
    end)
    u33.ExtraData = u33.ExtraData or {}
    mergeProps(u36, u33.ExtraData)
    local v37 = u33.MessageType
    if p32.MessageCreators[v37] then
        local v38 = p32.MessageCreators[v37](u33, p34, p35)
        if v38 then
            return p32:WrapIntoMessageObject(u33, v38)
        end
    elseif p32.DefaultCreatorType then
        local v39 = p32.MessageCreators[p32.DefaultCreatorType](u33, p34, p35)
        if v39 then
            return p32:WrapIntoMessageObject(u33, v39)
        end
    else
        error("No message creator available for message type: " .. v37)
    end
end
function u8.CreateMessageLabel(p40, u41, p42) --[[Anonymous function at line 114]]
    --[[
    Upvalues:
        [1] = u2
    --]]
    u41.Channel = p42
    local u43 = nil
    pcall(function() --[[Anonymous function at line 118]]
        --[[
        Upvalues:
            [1] = u43
            [2] = u2
            [3] = u41
        --]]
        u43 = u2:InvokeChatCallback(Enum.ChatCallbackType.OnClientFormattingMessage, u41)
    end)
    u41.ExtraData = u41.ExtraData or {}
    mergeProps(u43, u41.ExtraData)
    local v44 = u41.MessageType
    if p40.MessageCreators[v44] then
        local v45 = p40.MessageCreators[v44](u41, p42)
        if v45 then
            return p40:WrapIntoMessageObject(u41, v45)
        end
    elseif p40.DefaultCreatorType then
        local v46 = p40.MessageCreators[p40.DefaultCreatorType](u41, p42)
        if v46 then
            return p40:WrapIntoMessageObject(u41, v46)
        end
    else
        error("No message creator available for message type: " .. v44)
    end
end
function v1.new() --[[Anonymous function at line 143]]
    --[[
    Upvalues:
        [1] = u8
        [2] = u7
        [3] = u5
    --]]
    local v47 = u8
    local v48 = setmetatable({}, v47)
    v48.ObjectPool = u7.new(50)
    v48.MessageCreators = GetMessageCreators()
    v48.DefaultCreatorType = u5.DEFAULT_MESSAGE_CREATOR
    u5:RegisterObjectPool(v48.ObjectPool)
    return v48
end
function v1.GetStringTextBounds(_, p49, p50, p51, p52) --[[Anonymous function at line 155]]
    --[[
    Upvalues:
        [1] = u5
    --]]
    return u5:GetStringTextBounds(p49, p50, p51, p52)
end
return v1]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[MessageLabelCreator]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="341"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1 = {}
local u2 = {}
u2.__index = u2
local v3 = game:GetService("Chat"):WaitForChild("ClientChatModules")
local u4 = v3:WaitForChild("CommandModules")
local u5 = require(u4:WaitForChild("Util"))
local _ = script.Parent
local u6 = require(v3:WaitForChild("ChatSettings"))
function u2.SetupCommandProcessors(p7) --[[Anonymous function at line 19]]
    --[[
    Upvalues:
        [1] = u4
        [2] = u5
    --]]
    local v8 = u4:GetChildren()
    for v9 = 1, #v8 do
        if v8[v9]:IsA("ModuleScript") and v8[v9].Name ~= "Util" then
            local v10 = require(v8[v9])
            local v11 = v10[u5.KEY_COMMAND_PROCESSOR_TYPE]
            local v12 = v10[u5.KEY_PROCESSOR_FUNCTION]
            if v11 == u5.IN_PROGRESS_MESSAGE_PROCESSOR then
                local v13 = p7.InProgressMessageProcessors
                table.insert(v13, v12)
            elseif v11 == u5.COMPLETED_MESSAGE_PROCESSOR then
                local v14 = p7.CompletedMessageProcessors
                table.insert(v14, v12)
            end
        end
    end
end
function u2.ProcessCompletedChatMessage(p15, p16, p17) --[[Anonymous function at line 37]]
    --[[
    Upvalues:
        [1] = u6
    --]]
    for v18 = 1, #p15.CompletedMessageProcessors do
        if p15.CompletedMessageProcessors[v18](p16, p17, u6) then
            return true
        end
    end
    return false
end
function u2.ProcessInProgressChatMessage(p19, p20, p21, p22) --[[Anonymous function at line 47]]
    --[[
    Upvalues:
        [1] = u6
    --]]
    for v23 = 1, #p19.InProgressMessageProcessors do
        local v24 = p19.InProgressMessageProcessors[v23](p20, p21, p22, u6)
        if v24 then
            return v24
        end
    end
    return nil
end
function v1.new() --[[Anonymous function at line 60]]
    --[[
    Upvalues:
        [1] = u2
    --]]
    local v25 = u2
    local v26 = setmetatable({}, v25)
    v26.CompletedMessageProcessors = {}
    v26.InProgressMessageProcessors = {}
    v26:SetupCommandProcessors()
    return v26
end
return v1]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[CommandProcessor]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="342"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1 = {}
local v2 = game:GetService("Chat"):WaitForChild("ClientChatModules")
local v3 = script.Parent
local u4 = require(v2:WaitForChild("ChatSettings"))
local u5 = require(v3:WaitForChild("CurveUtil"))
local u6 = {}
u6.__index = u6
local function u20() --[[Anonymous function at line 20]]
    --[[
    Upvalues:
        [1] = u4
    --]]
    local v7 = Instance.new("Frame")
    v7.Selectable = false
    v7.Size = UDim2.new(1, 0, 1, 0)
    v7.BackgroundTransparency = 1
    local v8 = Instance.new("Frame")
    v8.Selectable = false
    v8.Name = "BackgroundFrame"
    v8.Size = UDim2.new(1, -2, 1, -2)
    v8.Position = UDim2.new(0, 1, 0, 1)
    v8.BackgroundTransparency = 1
    v8.Parent = v7
    local v9 = Instance.new("Frame")
    v9.Selectable = false
    v9.Name = "UnselectedFrame"
    v9.Size = UDim2.new(1, 0, 1, 0)
    v9.Position = UDim2.new(0, 0, 0, 0)
    v9.BorderSizePixel = 0
    v9.BackgroundColor3 = u4.ChannelsTabUnselectedColor
    v9.BackgroundTransparency = 0.6
    v9.Parent = v8
    local v10 = Instance.new("Frame")
    v10.Selectable = false
    v10.Name = "SelectedFrame"
    v10.Size = UDim2.new(1, 0, 1, 0)
    v10.Position = UDim2.new(0, 0, 0, 0)
    v10.BorderSizePixel = 0
    v10.BackgroundColor3 = u4.ChannelsTabSelectedColor
    v10.BackgroundTransparency = 1
    v10.Parent = v8
    local v11 = Instance.new("ImageLabel")
    v11.Selectable = false
    v11.Name = "BackgroundImage"
    v11.BackgroundTransparency = 1
    v11.BorderSizePixel = 0
    v11.Size = UDim2.new(1, 0, 1, 0)
    v11.Position = UDim2.new(0, 0, 0, 0)
    v11.ScaleType = Enum.ScaleType.Slice
    v11.Parent = v10
    v11.BackgroundTransparency = -0.4
    v11.BackgroundColor3 = Color3.fromRGB(93.6, 100.8, 115.19999999999999)
    local v12 = Instance.new("ImageLabel")
    v12.Selectable = false
    v12.Size = UDim2.new(0.5, -2, 0, 4)
    v12.BackgroundTransparency = 1
    v12.ScaleType = Enum.ScaleType.Slice
    v12.SliceCenter = Rect.new(3, 3, 32, 21)
    v12.Parent = v10
    local v13 = v12:Clone()
    v13.Parent = v10
    v12.Position = UDim2.new(0, 2, 1, -4)
    v13.Position = UDim2.new(0.5, 0, 1, -4)
    v12.Image = "rbxasset://textures/ui/Settings/Slider/SelectedBarLeft.png"
    v13.Image = "rbxasset://textures/ui/Settings/Slider/SelectedBarRight.png"
    v12.Name = "BlueBarLeft"
    v13.Name = "BlueBarRight"
    local v14 = Instance.new("TextButton")
    v14.Selectable = u4.GamepadNavigationEnabled
    v14.Size = UDim2.new(1, 0, 1, 0)
    v14.Position = UDim2.new(0, 0, 0, 0)
    v14.BackgroundTransparency = 1
    v14.Font = u4.DefaultFont
    v14.TextSize = u4.ChatChannelsTabTextSize
    v14.TextColor3 = Color3.new(1, 1, 1)
    v14.TextStrokeTransparency = 0.75
    v14.Parent = v8
    local v15 = v14:Clone()
    local v16 = v14:Clone()
    v15.Parent = v9
    v16.Parent = v10
    v15.Font = Enum.Font.SourceSans
    v15.Active = false
    v16.Active = false
    local v17 = Instance.new("Frame")
    v17.Selectable = false
    v17.Size = UDim2.new(0, 18, 0, 18)
    v17.Position = UDim2.new(0.8, -9, 0.5, -9)
    v17.BackgroundTransparency = 1
    v17.Parent = v8
    local v18 = Instance.new("ImageLabel")
    v18.Selectable = false
    v18.Size = UDim2.new(1, 0, 1, 0)
    v18.BackgroundTransparency = 1
    v18.Image = "rbxasset://textures/ui/Chat/MessageCounter.png"
    v18.Visible = false
    v18.Parent = v17
    local v19 = Instance.new("TextLabel")
    v19.Selectable = false
    v19.BackgroundTransparency = 1
    v19.Size = UDim2.new(0, 13, 0, 9)
    v19.Position = UDim2.new(0.5, -7, 0.5, -7)
    v19.Font = u4.DefaultFont
    v19.TextSize = 14
    v19.TextColor3 = Color3.new(1, 1, 1)
    v19.Text = ""
    v19.Parent = v18
    return v7, v14, v15, v16, v18, v9, v10
end
function u6.Destroy(p21) --[[Anonymous function at line 140]]
    p21.GuiObject:Destroy()
end
function u6.UpdateMessagePostedInChannel(p22, p23) --[[Anonymous function at line 144]]
    if not p22.Active or p23 == true then
        local v24 = p22.UnreadMessageCount + 1
        p22.UnreadMessageCount = v24
        local v25 = p22.NewMessageIcon
        v25.Visible = true
        v25.TextLabel.Text = v24 < 100 and tostring(v24) or "!"
        local v26 = UDim2.new(0, 0, -0.1, 0)
        local _ = v25.Position + v26
        local v27 = Enum.EasingDirection.Out
        local v28 = Enum.EasingStyle.Quad
        v25.Position = UDim2.new(0, 0, -0.15, 0)
        v25:TweenPosition(UDim2.new(0, 0, 0, 0), v27, v28, 0.15, true)
    end
end
function u6.SetActive(p29, p30) --[[Anonymous function at line 167]]
    p29.Active = p30
    p29.UnselectedFrame.Visible = not p30
    p29.SelectedFrame.Visible = p30
    if p30 then
        p29.UnreadMessageCount = 0
        p29.NewMessageIcon.Visible = false
        p29.NameTag.Font = Enum.Font.SourceSansBold
    else
        p29.NameTag.Font = Enum.Font.SourceSans
    end
end
function u6.SetTextSize(p31, p32) --[[Anonymous function at line 183]]
    p31.NameTag.TextSize = p32
end
function u6.FadeOutBackground(p33, p34) --[[Anonymous function at line 187]]
    --[[
    Upvalues:
        [1] = u5
    --]]
    p33.AnimParams.Background_TargetTransparency = 1
    p33.AnimParams.Background_NormalizedExptValue = u5:NormalizedDefaultExptValueInSeconds(p34)
end
function u6.FadeInBackground(p35, p36) --[[Anonymous function at line 192]]
    --[[
    Upvalues:
        [1] = u5
    --]]
    p35.AnimParams.Background_TargetTransparency = 0.6
    p35.AnimParams.Background_NormalizedExptValue = u5:NormalizedDefaultExptValueInSeconds(p36)
end
function u6.FadeOutText(p37, p38) --[[Anonymous function at line 197]]
    --[[
    Upvalues:
        [1] = u5
    --]]
    p37.AnimParams.Text_TargetTransparency = 1
    p37.AnimParams.Text_NormalizedExptValue = u5:NormalizedDefaultExptValueInSeconds(p38)
    p37.AnimParams.TextStroke_TargetTransparency = 1
    p37.AnimParams.TextStroke_NormalizedExptValue = u5:NormalizedDefaultExptValueInSeconds(p38)
end
function u6.FadeInText(p39, p40) --[[Anonymous function at line 204]]
    --[[
    Upvalues:
        [1] = u5
    --]]
    p39.AnimParams.Text_TargetTransparency = 0
    p39.AnimParams.Text_NormalizedExptValue = u5:NormalizedDefaultExptValueInSeconds(p40)
    p39.AnimParams.TextStroke_TargetTransparency = 0.75
    p39.AnimParams.TextStroke_NormalizedExptValue = u5:NormalizedDefaultExptValueInSeconds(p40)
end
function u6.AnimGuiObjects(p41) --[[Anonymous function at line 211]]
    p41.UnselectedFrame.BackgroundTransparency = p41.AnimParams.Background_CurrentTransparency
    p41.SelectedFrame.BackgroundImage.BackgroundTransparency = p41.AnimParams.Background_CurrentTransparency
    p41.SelectedFrame.BlueBarLeft.ImageTransparency = p41.AnimParams.Background_CurrentTransparency
    p41.SelectedFrame.BlueBarRight.ImageTransparency = p41.AnimParams.Background_CurrentTransparency
    p41.NameTagNonSelect.TextTransparency = p41.AnimParams.Background_CurrentTransparency
    p41.NameTagNonSelect.TextStrokeTransparency = p41.AnimParams.Background_CurrentTransparency
    p41.NameTag.TextTransparency = p41.AnimParams.Text_CurrentTransparency
    p41.NewMessageIcon.ImageTransparency = p41.AnimParams.Text_CurrentTransparency
    p41.WhiteTextNewMessageNotification.TextTransparency = p41.AnimParams.Text_CurrentTransparency
    p41.NameTagSelect.TextTransparency = p41.AnimParams.Text_CurrentTransparency
    p41.NameTag.TextStrokeTransparency = p41.AnimParams.TextStroke_CurrentTransparency
    p41.WhiteTextNewMessageNotification.TextStrokeTransparency = p41.AnimParams.TextStroke_CurrentTransparency
    p41.NameTagSelect.TextStrokeTransparency = p41.AnimParams.TextStroke_CurrentTransparency
end
function u6.InitializeAnimParams(p42) --[[Anonymous function at line 229]]
    --[[
    Upvalues:
        [1] = u5
    --]]
    p42.AnimParams.Text_TargetTransparency = 0
    p42.AnimParams.Text_CurrentTransparency = 0
    p42.AnimParams.Text_NormalizedExptValue = u5:NormalizedDefaultExptValueInSeconds(0)
    p42.AnimParams.TextStroke_TargetTransparency = 0.75
    p42.AnimParams.TextStroke_CurrentTransparency = 0.75
    p42.AnimParams.TextStroke_NormalizedExptValue = u5:NormalizedDefaultExptValueInSeconds(0)
    p42.AnimParams.Background_TargetTransparency = 0.6
    p42.AnimParams.Background_CurrentTransparency = 0.6
    p42.AnimParams.Background_NormalizedExptValue = u5:NormalizedDefaultExptValueInSeconds(0)
end
function u6.Update(p43, p44) --[[Anonymous function at line 243]]
    --[[
    Upvalues:
        [1] = u5
    --]]
    p43.AnimParams.Background_CurrentTransparency = u5:Expt(p43.AnimParams.Background_CurrentTransparency, p43.AnimParams.Background_TargetTransparency, p43.AnimParams.Background_NormalizedExptValue, p44)
    p43.AnimParams.Text_CurrentTransparency = u5:Expt(p43.AnimParams.Text_CurrentTransparency, p43.AnimParams.Text_TargetTransparency, p43.AnimParams.Text_NormalizedExptValue, p44)
    p43.AnimParams.TextStroke_CurrentTransparency = u5:Expt(p43.AnimParams.TextStroke_CurrentTransparency, p43.AnimParams.TextStroke_TargetTransparency, p43.AnimParams.TextStroke_NormalizedExptValue, p44)
    p43:AnimGuiObjects()
end
function v1.new(p45) --[[Anonymous function at line 269]]
    --[[
    Upvalues:
        [1] = u6
        [2] = u20
        [3] = u4
    --]]
    local v46 = u6
    local v47 = setmetatable({}, v46)
    local v48, v49, v50, v51, v52, v53, v54 = u20()
    v47.GuiObject = v48
    v47.NameTag = v49
    v47.NameTagNonSelect = v50
    v47.NameTagSelect = v51
    v47.NewMessageIcon = v52
    v47.UnselectedFrame = v53
    v47.SelectedFrame = v54
    v47.BlueBarLeft = v54.BlueBarLeft
    v47.BlueBarRight = v54.BlueBarRight
    v47.BackgroundImage = v54.BackgroundImage
    v47.WhiteTextNewMessageNotification = v47.NewMessageIcon.TextLabel
    v47.ChannelName = p45
    v47.UnreadMessageCount = 0
    v47.Active = false
    v47.GuiObject.Name = "Frame_" .. v47.ChannelName
    if string.len(p45) > u4.MaxChannelNameLength then
        local v55 = u4.MaxChannelNameLength - 3
        p45 = string.sub(p45, 1, v55) .. "..."
    end
    v47.NameTag.Text = ""
    v47.NameTagNonSelect.Text = p45
    v47.NameTagSelect.Text = p45
    v47.AnimParams = {}
    v47:InitializeAnimParams()
    v47:AnimGuiObjects()
    v47:SetActive(false)
    return v47
end
return v1]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ChannelsTab]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="343"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1 = {}
local u2 = {}
u2.__index = u2
function u2.GetInstance(p3, p4) --[[Anonymous function at line 14]]
    if p3.InstancePoolsByClass[p4] == nil then
        p3.InstancePoolsByClass[p4] = {}
    end
    local v5 = #p3.InstancePoolsByClass[p4]
    if v5 <= 0 then
        return Instance.new(p4)
    end
    local v6 = p3.InstancePoolsByClass[p4][v5]
    table.remove(p3.InstancePoolsByClass[p4])
    return v6
end
function u2.ReturnInstance(p7, p8) --[[Anonymous function at line 27]]
    if p7.InstancePoolsByClass[p8.ClassName] == nil then
        p7.InstancePoolsByClass[p8.ClassName] = {}
    end
    if #p7.InstancePoolsByClass[p8.ClassName] < p7.PoolSizePerType then
        local v9 = p7.InstancePoolsByClass[p8.ClassName]
        table.insert(v9, p8)
    else
        p8:Destroy()
    end
end
function v1.new(p10) --[[Anonymous function at line 41]]
    --[[
    Upvalues:
        [1] = u2
    --]]
    local v11 = u2
    local v12 = setmetatable({}, v11)
    v12.InstancePoolsByClass = {}
    v12.Name = "ObjectPool"
    v12.PoolSizePerType = p10
    return v12
end
return v1]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ObjectPool]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="344"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1 = {}
local _ = script.Parent
local u2 = {}
u2.__index = u2
function u2.SendMessage(p3, p4, p5) --[[Anonymous function at line 15]]
    p3.SayMessageRequest:FireServer(p4, p5)
end
function u2.RegisterSayMessageFunction(p6, p7) --[[Anonymous function at line 19]]
    p6.SayMessageRequest = p7
end
function v1.new() --[[Anonymous function at line 26]]
    --[[
    Upvalues:
        [1] = u2
    --]]
    local v8 = u2
    local v9 = setmetatable({}, v8)
    v9.SayMessageRequest = nil
    return v9
end
return v1.new()]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[MessageSender]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="345"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local u44 = {
    ["Expt"] = function(_, p1, p2, p3, p4) --[[Function name: Expt, line 5]]
        --[[
        Upvalues:
            [1] = u44
        --]]
        local v5 = p2 - p1
        if math.abs(v5) < 0.01 then
            return p2
        end
        local v6 = u44:Expty(p1, p2, p3, p4)
        return p1 + (p2 - p1) * v6
    end,
    ["Expty"] = function(_, _, _, p7, p8) --[[Function name: Expty, line 17]]
        local v9 = 1 - p7
        local v10 = -(-math.log(v9)) * p8
        return 1 - math.exp(v10)
    end,
    ["Sign"] = function(_, p11) --[[Function name: Sign, line 24]]
        return p11 > 0 and 1 or (p11 < 0 and -1 or 0)
    end,
    ["BezierValForT"] = function(_, p12, p13, p14, p15, p16) --[[Function name: BezierValForT, line 34]]
        local v17 = (1 - p16) * (1 - p16) * (1 - p16)
        local v18 = 3 * p16 * (1 - p16) * (1 - p16)
        local v19 = 3 * p16 * p16 * (1 - p16)
        local v20 = p16 * p16 * p16
        return v17 * p12 + v18 * p13 + v19 * p14 + v20 * p15
    end,
    ["_BezierPt2ForT"] = {
        ["x"] = 0,
        ["y"] = 0
    },
    ["BezierPt2ForT"] = function(_, p21, p22, p23, p24, p25, p26, p27, p28, p29) --[[Function name: BezierPt2ForT, line 43]]
        --[[
        Upvalues:
            [1] = u44
        --]]
        u44._BezierPt2ForT.x = u44:BezierValForT(p21, p23, p25, p27, p29)
        u44._BezierPt2ForT.y = u44:BezierValForT(p22, p24, p26, p28, p29)
        return u44._BezierPt2ForT
    end,
    ["YForPointOf2PtLine"] = function(_, p30, p31, p32) --[[Function name: YForPointOf2PtLine, line 55]]
        local v33 = (p30.y - p31.y) / (p30.x - p31.x)
        local v34 = p30.y - v33 * p30.x
        return v33 * p32 + v34
    end,
    ["DeltaTimeToTimescale"] = function(_, p35) --[[Function name: DeltaTimeToTimescale, line 63]]
        return p35 / 0.016666666666666666
    end,
    ["SecondsToTick"] = function(_, p36) --[[Function name: SecondsToTick, line 67]]
        return 0.016666666666666666 / p36
    end,
    ["ExptValueInSeconds"] = function(_, p37, p38, p39) --[[Function name: ExptValueInSeconds, line 71]]
        local v40 = p37 / p38
        local v41 = 1 / (60 * p39)
        return 1 - math.pow(v40, v41)
    end,
    ["NormalizedDefaultExptValueInSeconds"] = function(p42, p43) --[[Function name: NormalizedDefaultExptValueInSeconds, line 75]]
        return p42:ExptValueInSeconds(0.01, 1, p43)
    end
}
return u44]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[CurveUtil]]></string><BinaryString name="Tags"></BinaryString></Properties></Item></Item></Item><Item class="LocalScript" referent="346"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local u1 = game:GetService("Players")
local v2 = game:GetService("ReplicatedStorage")
local u3 = game:GetService("Chat")
local u4 = game:GetService("TextService")
local u5 = u1.LocalPlayer
while u5 == nil do
    u1.ChildAdded:wait()
    u5 = u1.LocalPlayer
end
local v6 = u5:WaitForChild("PlayerGui")
local v7, v8 = pcall(function() --[[Anonymous function at line 24]]
    return UserSettings():IsUserFeatureEnabled("UserShouldLocalizeGameChatBubble")
end)
local u9 = v7 and v8
local v10, v11 = pcall(function() --[[Anonymous function at line 30]]
    return UserSettings():IsUserFeatureEnabled("UserFixBubbleChatText")
end)
local u12 = v10 and v11
local v13, v14 = pcall(function() --[[Anonymous function at line 37]]
    return UserSettings():IsUserFeatureEnabled("UserRoactBubbleChatBeta")
end)
local u15 = v13 and v14
local v16, v17 = pcall(function() --[[Anonymous function at line 44]]
    return UserSettings():IsUserFeatureEnabled("UserPreventOldBubbleChatOverlap")
end)
local u18 = v16 and v17
local u19 = Enum.Font.SourceSans
local u20 = Enum.FontSize.Size24
local u21 = 128 - utf8.len(utf8.nfcnormalize("...")) - 1
local u22 = {
    ["WHITE"] = "dub",
    ["BLUE"] = "blu",
    ["GREEN"] = "gre",
    ["RED"] = "red"
}
local u23 = Instance.new("ScreenGui")
u23.Name = "BubbleChat"
u23.ResetOnSpawn = false
u23.Parent = v6
local function u29() --[[Anonymous function at line 97]]
    local u24 = {
        ["data"] = {}
    }
    local u25 = Instance.new("BindableEvent")
    u24.Emptied = u25.Event
    function u24.Size(_) --[[Anonymous function at line 104]]
        --[[
        Upvalues:
            [1] = u24
        --]]
        return #u24.data
    end
    function u24.Empty(_) --[[Anonymous function at line 108]]
        --[[
        Upvalues:
            [1] = u24
        --]]
        return u24:Size() <= 0
    end
    function u24.PopFront(_) --[[Anonymous function at line 112]]
        --[[
        Upvalues:
            [1] = u24
            [2] = u25
        --]]
        table.remove(u24.data, 1)
        if u24:Empty() then
            u25:Fire()
        end
    end
    function u24.Front(_) --[[Anonymous function at line 117]]
        --[[
        Upvalues:
            [1] = u24
        --]]
        return u24.data[1]
    end
    function u24.Get(_, p26) --[[Anonymous function at line 121]]
        --[[
        Upvalues:
            [1] = u24
        --]]
        return u24.data[p26]
    end
    function u24.PushBack(_, p27) --[[Anonymous function at line 125]]
        --[[
        Upvalues:
            [1] = u24
        --]]
        local v28 = u24.data
        table.insert(v28, p27)
    end
    function u24.GetData(_) --[[Anonymous function at line 129]]
        --[[
        Upvalues:
            [1] = u24
        --]]
        return u24.data
    end
    return u24
end
local function u38(p30, p31, p32) --[[Anonymous function at line 184]]
    local v37 = {
        ["ComputeBubbleLifetime"] = function(_, p33, p34) --[[Function name: ComputeBubbleLifetime, line 187]]
            if p34 then
                local v35 = utf8.len(utf8.nfcnormalize(p33)) / 75
                return 8 + 7 * math.min(v35, 1)
            else
                local v36 = utf8.len(utf8.nfcnormalize(p33)) / 75
                return 12 + 8 * math.min(v36, 1)
            end
        end,
        ["Origin"] = nil,
        ["RenderBubble"] = nil,
        ["Message"] = p30
    }
    v37.BubbleDieDelay = v37:ComputeBubbleLifetime(p30, p32)
    v37.BubbleColor = p31
    v37.IsLocalPlayer = p32
    return v37
end
function createChatBubbleMain(p39, p40)
    local v41 = Instance.new("ImageLabel")
    v41.Name = "ChatBubble"
    v41.ScaleType = Enum.ScaleType.Slice
    v41.SliceCenter = p40
    v41.Image = "rbxasset://textures/" .. tostring(p39) .. ".png"
    v41.BackgroundTransparency = 1
    v41.BorderSizePixel = 0
    v41.Size = UDim2.new(1, 0, 1, 0)
    v41.Position = UDim2.new(0, 0, 0, 0)
    return v41
end
function createChatBubbleTail(p42, p43)
    local v44 = Instance.new("ImageLabel")
    v44.Name = "ChatBubbleTail"
    v44.Image = "rbxasset://textures/ui/dialog_tail.png"
    v44.BackgroundTransparency = 1
    v44.BorderSizePixel = 0
    v44.Position = p42
    v44.Size = p43
    return v44
end
function createChatBubbleWithTail(p45, p46, p47, p48)
    local v49 = createChatBubbleMain(p45, p48)
    createChatBubbleTail(p46, p47).Parent = v49
    return v49
end
function createScaledChatBubbleWithTail(p50, p51, p52, p53)
    local v54 = createChatBubbleMain(p50, p53)
    local v55 = Instance.new("Frame")
    v55.Name = "ChatBubbleTailFrame"
    v55.BackgroundTransparency = 1
    v55.SizeConstraint = Enum.SizeConstraint.RelativeXX
    v55.Position = UDim2.new(0.5, 0, 1, 0)
    v55.Size = UDim2.new(p51, 0, p51, 0)
    v55.Parent = v54
    createChatBubbleTail(p52, UDim2.new(1, 0, 0.5, 0)).Parent = v55
    return v54
end
function createChatImposter(p56, p57, p58)
    local v59 = Instance.new("ImageLabel")
    v59.Name = "DialogPlaceholder"
    v59.Image = "rbxasset://textures/" .. tostring(p56) .. ".png"
    v59.BackgroundTransparency = 1
    v59.BorderSizePixel = 0
    v59.Position = UDim2.new(0, 0, -1.25, 0)
    v59.Size = UDim2.new(1, 0, 1, 0)
    local v60 = Instance.new("ImageLabel")
    v60.Name = "DotDotDot"
    v60.Image = "rbxasset://textures/" .. tostring(p57) .. ".png"
    v60.BackgroundTransparency = 1
    v60.BorderSizePixel = 0
    v60.Position = UDim2.new(0.001, 0, p58, 0)
    v60.Size = UDim2.new(1, 0, 0.7, 0)
    v60.Parent = v59
    return v59
end
local u68 = {
    ["ChatBubble"] = {},
    ["ChatBubbleWithTail"] = {},
    ["ScalingChatBubbleWithTail"] = {},
    ["CharacterSortedMsg"] = (function() --[[Function name: createMap, line 145]]
        --[[
        Upvalues:
            [1] = u29
        --]]
        local u61 = {
            ["data"] = {}
        }
        local u62 = 0
        function u61.Size(_) --[[Anonymous function at line 150]]
            --[[
            Upvalues:
                [1] = u62
            --]]
            return u62
        end
        function u61.Erase(_, p63) --[[Anonymous function at line 154]]
            --[[
            Upvalues:
                [1] = u61
                [2] = u62
            --]]
            if u61.data[p63] then
                u62 = u62 - 1
            end
            u61.data[p63] = nil
        end
        function u61.Set(_, p64, p65) --[[Anonymous function at line 159]]
            --[[
            Upvalues:
                [1] = u61
                [2] = u62
            --]]
            u61.data[p64] = p65
            if p65 then
                u62 = u62 + 1
            end
        end
        function u61.Get(_, u66) --[[Anonymous function at line 164]]
            --[[
            Upvalues:
                [1] = u61
                [2] = u29
            --]]
            if u66 then
                if not u61.data[u66] then
                    u61.data[u66] = {
                        ["Fifo"] = u29(),
                        ["BillboardGui"] = nil
                    }
                    local u67 = nil
                    u67 = u61.data[u66].Fifo.Emptied:connect(function() --[[Anonymous function at line 169]]
                        --[[
                        Upvalues:
                            [1] = u67
                            [2] = u61
                            [3] = u66
                        --]]
                        u67:disconnect()
                        u61:Erase(u66)
                    end)
                end
                return u61.data[u66]
            end
        end
        function u61.GetData(_) --[[Anonymous function at line 177]]
            --[[
            Upvalues:
                [1] = u61
            --]]
            return u61.data
        end
        return u61
    end)()
}
local function v73(p69, p70, _, p71, p72) --[[Anonymous function at line 304]]
    --[[
    Upvalues:
        [1] = u68
    --]]
    u68.ChatBubble[p69] = createChatBubbleMain(p70, p72)
    u68.ChatBubbleWithTail[p69] = createChatBubbleWithTail(p70, UDim2.new(0.5, -14, 1, p71 and -1 or 0), UDim2.new(0, 30, 0, 14), p72)
    u68.ScalingChatBubbleWithTail[p69] = createScaledChatBubbleWithTail(p70, 0.5, UDim2.new(-0.5, 0, 0, p71 and -1 or 0), p72)
end
v73(u22.WHITE, "ui/dialog_white", "ui/chatBubble_white_notify_bkg", false, Rect.new(5, 5, 15, 15))
v73(u22.BLUE, "ui/dialog_blue", "ui/chatBubble_blue_notify_bkg", true, Rect.new(7, 7, 33, 33))
v73(u22.RED, "ui/dialog_red", "ui/chatBubble_red_notify_bkg", true, Rect.new(7, 7, 33, 33))
v73(u22.GREEN, "ui/dialog_green", "ui/chatBubble_green_notify_bkg", true, Rect.new(7, 7, 33, 33))
function u68.SanitizeChatLine(_, p74) --[[Anonymous function at line 315]]
    --[[
    Upvalues:
        [1] = u21
    --]]
    if u21 >= utf8.len(utf8.nfcnormalize(p74)) then
        return p74
    end
    local v75 = utf8.offset(p74, u21 + utf8.len(utf8.nfcnormalize("...")) + 1) - 1
    return string.sub(p74, 1, v75)
end
local function u80(p76) --[[Anonymous function at line 324]]
    --[[
    Upvalues:
        [1] = u23
        [2] = u68
        [3] = u22
    --]]
    local u77 = Instance.new("BillboardGui")
    u77.Adornee = p76
    u77.Size = UDim2.new(0, 400, 0, 250)
    u77.StudsOffset = Vector3.new(0, 1.5, 2)
    u77.Parent = u23
    local u78 = Instance.new("Frame")
    u78.Name = "BillboardFrame"
    u78.Size = UDim2.new(1, 0, 1, 0)
    u78.Position = UDim2.new(0, 0, -0.5, 0)
    u78.BackgroundTransparency = 1
    u78.Parent = u77
    local u79 = nil
    u79 = u78.ChildRemoved:connect(function() --[[Anonymous function at line 339]]
        --[[
        Upvalues:
            [1] = u78
            [2] = u79
            [3] = u77
        --]]
        if #u78:GetChildren() <= 1 then
            u79:disconnect()
            u77:Destroy()
        end
    end)
    u68:CreateSmallTalkBubble(u22.WHITE).Parent = u78
    return u77
end
function u68.CreateBillboardGuiHelper(_, p81, p82) --[[Anonymous function at line 351]]
    --[[
    Upvalues:
        [1] = u68
        [2] = u80
    --]]
    if p81 and not u68.CharacterSortedMsg:Get(p81).BillboardGui then
        if not p82 and p81:IsA("BasePart") then
            local v83 = u80(p81)
            u68.CharacterSortedMsg:Get(p81).BillboardGui = v83
            return
        end
        if p81:IsA("Model") then
            local v84 = p81:FindFirstChild("Head")
            if v84 and v84:IsA("BasePart") then
                local v85 = u80(v84)
                u68.CharacterSortedMsg:Get(p81).BillboardGui = v85
            end
        end
    end
end
function u68.SetBillboardLODNear(_, p86) --[[Anonymous function at line 385]]
    --[[
    Upvalues:
        [1] = u1
    --]]
    local v87 = p86.Adornee
    local v88
    if v87 and u1.LocalPlayer.Character then
        v88 = v87:IsDescendantOf(u1.LocalPlayer.Character)
    else
        v88 = nil
    end
    p86.Size = UDim2.new(0, 400, 0, 250)
    p86.StudsOffset = Vector3.new(0, v88 and 1.5 or 2.5, v88 and 2 or 0.1)
    p86.Enabled = true
    local v89 = p86.BillboardFrame:GetChildren()
    for v90 = 1, #v89 do
        v89[v90].Visible = true
    end
    p86.BillboardFrame.SmallTalkBubble.Visible = false
end
function u68.SetBillboardLODDistant(_, p91) --[[Anonymous function at line 397]]
    --[[
    Upvalues:
        [1] = u1
    --]]
    local v92 = p91.Adornee
    local v93
    if v92 and u1.LocalPlayer.Character then
        v93 = v92:IsDescendantOf(u1.LocalPlayer.Character)
    else
        v93 = nil
    end
    p91.Size = UDim2.new(4, 0, 3, 0)
    p91.StudsOffset = Vector3.new(0, 3, v93 and 2 or 0.1)
    p91.Enabled = true
    local v94 = p91.BillboardFrame:GetChildren()
    for v95 = 1, #v94 do
        v94[v95].Visible = false
    end
    p91.BillboardFrame.SmallTalkBubble.Visible = true
end
function u68.SetBillboardLODVeryFar(_, p96) --[[Anonymous function at line 409]]
    p96.Enabled = false
end
function u68.SetBillboardGuiLOD(_, p97, p98) --[[Anonymous function at line 413]]
    --[[
    Upvalues:
        [1] = u68
    --]]
    if p98 then
        if p98:IsA("Model") then
            p98 = p98:FindFirstChild("Head") or p98.PrimaryPart
        end
        local v99 = not p98 and 100000 or (p98.Position - game.Workspace.CurrentCamera.CoordinateFrame.Position).magnitude
        if v99 < 65 then
            u68:SetBillboardLODNear(p97)
            return
        elseif v99 >= 65 and v99 < 100 then
            u68:SetBillboardLODDistant(p97)
        else
            u68:SetBillboardLODVeryFar(p97)
        end
    else
        return
    end
end
function u68.CameraCFrameChanged(_) --[[Anonymous function at line 433]]
    --[[
    Upvalues:
        [1] = u68
    --]]
    for v100, v101 in pairs(u68.CharacterSortedMsg:GetData()) do
        local v102 = v101.BillboardGui
        if v102 then
            u68:SetBillboardGuiLOD(v102, v100)
        end
    end
end
function u68.CreateBubbleText(_, p103, p104) --[[Anonymous function at line 440]]
    --[[
    Upvalues:
        [1] = u12
        [2] = u19
        [3] = u20
    --]]
    local v105 = Instance.new("TextLabel")
    v105.Name = "BubbleText"
    v105.BackgroundTransparency = 1
    if u12 then
        v105.Size = UDim2.fromScale(1, 1)
    else
        v105.Position = UDim2.new(0, 15, 0, 0)
        v105.Size = UDim2.new(1, -30, 1, 0)
    end
    v105.Font = u19
    v105.ClipsDescendants = true
    v105.TextWrapped = true
    v105.FontSize = u20
    v105.Text = p103
    v105.Visible = false
    v105.AutoLocalize = p104
    if u12 then
        local v106 = Instance.new("UIPadding")
        v106.PaddingTop = UDim.new(0, 12)
        v106.PaddingRight = UDim.new(0, 12)
        v106.PaddingBottom = UDim.new(0, 12)
        v106.PaddingLeft = UDim.new(0, 12)
        v106.Parent = v105
    end
    return v105
end
function u68.CreateSmallTalkBubble(_, p107) --[[Anonymous function at line 472]]
    --[[
    Upvalues:
        [1] = u68
    --]]
    local v108 = u68.ScalingChatBubbleWithTail[p107]:Clone()
    v108.Name = "SmallTalkBubble"
    v108.AnchorPoint = Vector2.new(0, 0.5)
    v108.Position = UDim2.new(0, 0, 0.5, 0)
    v108.Visible = false
    local v109 = u68:CreateBubbleText("...")
    v109.TextScaled = true
    v109.TextWrapped = false
    v109.Visible = true
    v109.Parent = v108
    return v108
end
function u68.UpdateChatLinesForOrigin(_, p110, p111) --[[Anonymous function at line 487]]
    --[[
    Upvalues:
        [1] = u68
    --]]
    local v112 = u68.CharacterSortedMsg:Get(p110).Fifo
    local v113 = v112:Size()
    local v114 = v112:GetData()
    if #v114 > 1 then
        for v115 = #v114 - 1, 1, -1 do
            local v116 = v114[v115].RenderBubble
            if not v116 then
                return
            end
            if v113 - v115 + 1 > 1 then
                local v117 = v116:FindFirstChild("ChatBubbleTail")
                if v117 then
                    v117:Destroy()
                end
                local v118 = v116:FindFirstChild("BubbleText")
                if v118 then
                    v118.TextTransparency = 0.5
                end
            end
            v116:TweenPosition(UDim2.new(v116.Position.X.Scale, v116.Position.X.Offset, 1, p111 - v116.Size.Y.Offset - 14), Enum.EasingDirection.Out, Enum.EasingStyle.Bounce, 0.1, true)
            p111 = p111 - v116.Size.Y.Offset - 14
        end
    end
end
function u68.DestroyBubble(_, u119, u120) --[[Anonymous function at line 513]]
    if u119 then
        if u119:Empty() then
            return
        else
            local u121 = u119:Front().RenderBubble
            if u121 then
                spawn(function() --[[Anonymous function at line 523]]
                    --[[
                    Upvalues:
                        [1] = u119
                        [2] = u120
                        [3] = u121
                    --]]
                    while u119:Front().RenderBubble ~= u120 do
                        wait()
                    end
                    u121 = u119:Front().RenderBubble
                    local v122 = u121:FindFirstChild("BubbleText")
                    local v123 = u121:FindFirstChild("ChatBubbleTail")
                    while u121 and u121.ImageTransparency < 1 do
                        local v124 = wait()
                        if u121 then
                            local v125 = v124 * 1.5
                            u121.ImageTransparency = u121.ImageTransparency + v125
                            if v122 then
                                v122.TextTransparency = v122.TextTransparency + v125
                            end
                            if v123 then
                                v123.ImageTransparency = v123.ImageTransparency + v125
                            end
                        end
                    end
                    if u121 then
                        u121:Destroy()
                        u119:PopFront()
                    end
                end)
            else
                u119:PopFront()
            end
        end
    else
        return
    end
end
function u68.CreateChatLineRender(_, p126, p127, p128, u129, p130) --[[Anonymous function at line 551]]
    --[[
    Upvalues:
        [1] = u68
        [2] = u4
        [3] = u19
        [4] = u12
    --]]
    if p126 then
        if not u68.CharacterSortedMsg:Get(p126).BillboardGui then
            u68:CreateBillboardGuiHelper(p126, p128)
        end
        local v131 = u68.CharacterSortedMsg:Get(p126).BillboardGui
        if v131 then
            local u132 = u68.ChatBubbleWithTail[p127.BubbleColor]:Clone()
            u132.Visible = false
            local u133 = u68:CreateBubbleText(p127.Message, p130)
            u133.Parent = u132
            u132.Parent = v131.BillboardFrame
            p127.RenderBubble = u132
            local v134 = u4:GetTextSize(u133.Text, 24, u19, Vector2.new(400, 250))
            local v135 = v134.Y / 24
            if u12 then
                local v136 = v134.X + 24
                local v137 = math.ceil(v136)
                local v138 = v135 * 34
                u132.Size = UDim2.fromOffset(0, 0)
                u132.Position = UDim2.fromScale(0.5, 1)
                u132:TweenSizeAndPosition(UDim2.fromOffset(v137, v138), UDim2.new(0.5, -v137 / 2, 1, -v138), Enum.EasingDirection.Out, Enum.EasingStyle.Elastic, 0.1, true, function() --[[Anonymous function at line 590]]
                    --[[
                    Upvalues:
                        [1] = u133
                    --]]
                    u133.Visible = true
                end)
                u68:SetBillboardGuiLOD(v131, p127.Origin)
                u68:UpdateChatLinesForOrigin(p127.Origin, -v138)
            else
                local v139 = (v134.X + 30) / 400
                local v140 = math.max(v139, 0.1)
                u132.Size = UDim2.new(0, 0, 0, 0)
                u132.Position = UDim2.new(0.5, 0, 1, 0)
                local v141 = v135 * 34
                u132:TweenSizeAndPosition(UDim2.new(v140, 0, 0, v141), UDim2.new((1 - v140) / 2, 0, 1, -v141), Enum.EasingDirection.Out, Enum.EasingStyle.Elastic, 0.1, true, function() --[[Anonymous function at line 610]]
                    --[[
                    Upvalues:
                        [1] = u133
                    --]]
                    u133.Visible = true
                end)
                u68:SetBillboardGuiLOD(v131, p127.Origin)
                u68:UpdateChatLinesForOrigin(p127.Origin, -v141)
            end
            delay(p127.BubbleDieDelay, function() --[[Anonymous function at line 617]]
                --[[
                Upvalues:
                    [1] = u68
                    [2] = u129
                    [3] = u132
                --]]
                u68:DestroyBubble(u129, u132)
            end)
        end
    end
end
function u68.OnPlayerChatMessage(_, p142, p143, _) --[[Anonymous function at line 623]]
    --[[
    Upvalues:
        [1] = u68
        [2] = u1
        [3] = u38
        [4] = u22
    --]]
    if u68:BubbleChatEnabled() then
        local v144 = u1.LocalPlayer
        local v145
        if v144 == nil then
            v145 = false
        else
            v145 = p142 ~= v144
        end
        local v146 = u38(u68:SanitizeChatLine(p143), u22.WHITE, not v145)
        if p142 then
            v146.User = p142.Name
            v146.Origin = p142.Character
        end
        if p142 and v146.Origin then
            local v147 = u68.CharacterSortedMsg:Get(v146.Origin).Fifo
            v147:PushBack(v146)
            u68:CreateChatLineRender(p142.Character, v146, true, v147, false)
        end
    end
end
function u68.OnGameChatMessage(_, p148, p149, p150) --[[Anonymous function at line 642]]
    --[[
    Upvalues:
        [1] = u15
        [2] = u18
        [3] = u3
        [4] = u1
        [5] = u22
        [6] = u68
        [7] = u38
        [8] = u9
    --]]
    if u15 or u18 and u3.BubbleChatEnabled then
        return
    else
        local v151 = u1.LocalPlayer
        local v152
        if v151 == nil then
            v152 = false
        else
            v152 = v151.Character ~= p148
        end
        local v153 = u22.WHITE
        if p150 == Enum.ChatColor.Blue then
            v153 = u22.BLUE
        elseif p150 == Enum.ChatColor.Green then
            v153 = u22.GREEN
        elseif p150 == Enum.ChatColor.Red then
            v153 = u22.RED
        end
        local v154 = u38(u68:SanitizeChatLine(p149), v153, not v152)
        v154.Origin = p148
        u68.CharacterSortedMsg:Get(v154.Origin).Fifo:PushBack(v154)
        if u9 then
            u68:CreateChatLineRender(p148, v154, false, u68.CharacterSortedMsg:Get(v154.Origin).Fifo, true)
        else
            u68:CreateChatLineRender(p148, v154, false, u68.CharacterSortedMsg:Get(v154.Origin).Fifo, false)
        end
    end
end
function u68.BubbleChatEnabled(_) --[[Anonymous function at line 668]]
    --[[
    Upvalues:
        [1] = u15
        [2] = u18
        [3] = u3
        [4] = u1
    --]]
    if u15 or u18 and u3.BubbleChatEnabled then
        return false
    end
    local v155 = u3:FindFirstChild("ClientChatModules")
    local v156 = v155 and v155:FindFirstChild("ChatSettings")
    if v156 then
        local v157 = require(v156)
        if v157.BubbleChatEnabled ~= nil then
            return v157.BubbleChatEnabled
        end
    end
    return u1.BubbleChat
end
function u68.ShowOwnFilteredMessage(_) --[[Anonymous function at line 685]]
    --[[
    Upvalues:
        [1] = u3
    --]]
    local v158 = u3:FindFirstChild("ClientChatModules")
    local v159 = v158 and v158:FindFirstChild("ChatSettings")
    if v159 then
        return require(v159).ShowUserOwnFilteredMessage
    else
        return false
    end
end
function findPlayer(p160)
    --[[
    Upvalues:
        [1] = u1
    --]]
    for _, v161 in pairs(u1:GetPlayers()) do
        if v161.Name == p160 then
            return v161
        end
    end
end
u3.Chatted:connect(function(p162, p163, p164) --[[Anonymous function at line 705]]
    --[[
    Upvalues:
        [1] = u68
    --]]
    u68:OnGameChatMessage(p162, p163, p164)
end)
local u165
if game.Workspace.CurrentCamera then
    u165 = game.Workspace.CurrentCamera:GetPropertyChangedSignal("CFrame"):Connect(function(_) --[[Anonymous function at line 709]]
        --[[
        Upvalues:
            [1] = u68
        --]]
        u68:CameraCFrameChanged()
    end)
else
    u165 = nil
end
game.Workspace.Changed:Connect(function(p166) --[[Anonymous function at line 712]]
    --[[
    Upvalues:
        [1] = u165
        [2] = u68
    --]]
    if p166 == "CurrentCamera" then
        if u165 then
            u165:disconnect()
        end
        if game.Workspace.CurrentCamera then
            u165 = game.Workspace.CurrentCamera:GetPropertyChangedSignal("CFrame"):Connect(function(_) --[[Anonymous function at line 716]]
                --[[
                Upvalues:
                    [1] = u68
                --]]
                u68:CameraCFrameChanged()
            end)
        end
    end
end)
local u167 = nil
function getAllowedMessageTypes()
    --[[
    Upvalues:
        [1] = u167
        [2] = u3
    --]]
    if u167 then
        return u167
    end
    local v168 = u3:FindFirstChild("ClientChatModules")
    if not v168 then
        return { "Message", "Whisper" }
    end
    local v169 = v168:FindFirstChild("ChatSettings")
    if v169 then
        local v170 = require(v169)
        if v170.BubbleChatMessageTypes then
            u167 = v170.BubbleChatMessageTypes
            return u167
        end
    end
    local v171 = v168:FindFirstChild("ChatConstants")
    if v171 then
        local v172 = require(v171)
        u167 = { v172.MessageTypeDefault, v172.MessageTypeWhisper }
    end
    return u167
end
function checkAllowedMessageType(p173)
    local v174 = getAllowedMessageTypes()
    for v175 = 1, #v174 do
        if v174[v175] == p173.MessageType then
            return true
        end
    end
    return false
end
local v176 = v2:WaitForChild("DefaultChatSystemChatEvents")
local v177 = v176:WaitForChild("OnMessageDoneFiltering")
v176:WaitForChild("OnNewMessage").OnClientEvent:connect(function(p178, _) --[[Anonymous function at line 762]]
    --[[
    Upvalues:
        [1] = u5
        [2] = u68
    --]]
    if checkAllowedMessageType(p178) then
        local v179 = findPlayer(p178.FromSpeaker)
        if v179 then
            if p178.IsFiltered and p178.FromSpeaker ~= u5.Name or p178.FromSpeaker == u5.Name and not u68:ShowOwnFilteredMessage() then
                u68:OnPlayerChatMessage(v179, p178.Message, nil)
            end
        else
            return
        end
    else
        return
    end
end)
v177.OnClientEvent:connect(function(p180, _) --[[Anonymous function at line 781]]
    --[[
    Upvalues:
        [1] = u5
        [2] = u68
    --]]
    if checkAllowedMessageType(p180) then
        local v181 = findPlayer(p180.FromSpeaker)
        if v181 then
            if p180.FromSpeaker ~= u5.Name or u68:ShowOwnFilteredMessage() then
                u68:OnPlayerChatMessage(v181, p180.Message, nil)
            end
        else
            return
        end
    else
        return
    end
end)]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[BubbleChat]]></string><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="StarterCharacterScripts" referent="347"><Properties><BinaryString name="AttributesSerialize"></BinaryString><SecurityCapabilities name="Capabilities">0</SecurityCapabilities><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[StarterCharacterScripts]]></string><int64 name="SourceAssetId">-1</int64><BinaryString name="Tags"></BinaryString></Properties><Item class="Script" referent="348"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

-- [FilteringEnabled] Server Scripts are IMPOSSIBLE to save]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Teleporting]]></string><BinaryString name="Tags"></BinaryString></Properties></Item></Item></Item><Item class="Teams" referent="349"><Properties><BinaryString name="AttributesSerialize"></BinaryString><SecurityCapabilities name="Capabilities">0</SecurityCapabilities><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Teams]]></string><int64 name="SourceAssetId">-1</int64><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="SoundService" referent="350"><Properties><token name="AmbientReverb">0</token><token name="AudioApiByDefault">0</token><token name="CharacterSoundsUseNewApi">0</token><token name="DefaultListenerLocation">0</token><float name="DistanceFactor">3.3299999237060547</float><float name="DopplerScale">1</float><bool name="IsNewExpForAudioApiByDefault">false</bool><bool name="RespectFilteringEnabled">true</bool><float name="RolloffScale">1</float><token name="VolumetricAudio">1</token><BinaryString name="AttributesSerialize"></BinaryString><SecurityCapabilities name="Capabilities">0</SecurityCapabilities><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[SoundService]]></string><int64 name="SourceAssetId">-1</int64><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Chat" referent="351"><Properties><bool name="BubbleChatEnabled">true</bool><bool name="IsAutoMigrated">false</bool><bool name="LoadDefaultChat">true</bool><BinaryString name="AttributesSerialize"></BinaryString><SecurityCapabilities name="Capabilities">0</SecurityCapabilities><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Chat]]></string><int64 name="SourceAssetId">-1</int64><BinaryString name="Tags"></BinaryString></Properties><Item class="LocalScript" referent="352"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local u1 = game:GetService("StarterGui")
local v2 = game:GetService("GuiService")
local v3 = game:GetService("Chat")
local v4 = game:GetService("ReplicatedStorage")
local v5 = v3:WaitForChild("ClientChatModules")
local u6 = require(v5:WaitForChild("ChatSettings"))
local function v47() --[[Anonymous function at line 16]]
    --[[
    Upvalues:
        [1] = u6
    --]]
    local u7 = require(script:WaitForChild("ChatMain"))
    local v8 = {
        ["ChatWindow"] = {},
        ["SetCore"] = {},
        ["GetCore"] = {}
    }
    v8.ChatWindow.ChatTypes = {}
    v8.ChatWindow.ChatTypes.BubbleChatEnabled = u6.BubbleChatEnabled
    v8.ChatWindow.ChatTypes.ClassicChatEnabled = u6.ClassicChatEnabled
    local v9 = Instance.new("BindableEvent")
    v9.Name = "ToggleVisibility"
    v8.ChatWindow.ToggleVisibility = v9
    local u10 = "ToggleVisibility"
    v9.Event:connect(function(...) --[[Anonymous function at line 34]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u10
        --]]
        u7[u10](u7, ...)
    end)
    local v11 = Instance.new("BindableEvent")
    v11.Name = "SetVisible"
    v8.ChatWindow.SetVisible = v11
    local u12 = "SetVisible"
    v11.Event:connect(function(...) --[[Anonymous function at line 34]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u12
        --]]
        u7[u12](u7, ...)
    end)
    local v13 = Instance.new("BindableEvent")
    v13.Name = "FocusChatBar"
    v8.ChatWindow.FocusChatBar = v13
    local u14 = "FocusChatBar"
    v13.Event:connect(function(...) --[[Anonymous function at line 34]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u14
        --]]
        u7[u14](u7, ...)
    end)
    local v15 = Instance.new("BindableEvent")
    v15.Name = "EnterWhisperState"
    v8.ChatWindow.EnterWhisperState = v15
    local u16 = "EnterWhisperState"
    v15.Event:connect(function(...) --[[Anonymous function at line 34]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u16
        --]]
        u7[u16](u7, ...)
    end)
    local v17 = Instance.new("BindableFunction")
    v17.Name = "GetVisibility"
    v8.ChatWindow.GetVisibility = v17
    local u18 = "GetVisibility"
    function v17.OnInvoke(...) --[[Anonymous function at line 42]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u18
        --]]
        return u7[u18](u7, ...)
    end
    local v19 = Instance.new("BindableFunction")
    v19.Name = "GetMessageCount"
    v8.ChatWindow.GetMessageCount = v19
    local u20 = "GetMessageCount"
    function v19.OnInvoke(...) --[[Anonymous function at line 42]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u20
        --]]
        return u7[u20](u7, ...)
    end
    local v21 = Instance.new("BindableEvent")
    v21.Name = "TopbarEnabledChanged"
    v8.ChatWindow.TopbarEnabledChanged = v21
    local u22 = "TopbarEnabledChanged"
    v21.Event:connect(function(...) --[[Anonymous function at line 34]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u22
        --]]
        u7[u22](u7, ...)
    end)
    local v23 = Instance.new("BindableFunction")
    v23.Name = "IsFocused"
    v8.ChatWindow.IsFocused = v23
    local u24 = "IsFocused"
    function v23.OnInvoke(...) --[[Anonymous function at line 42]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u24
        --]]
        return u7[u24](u7, ...)
    end
    local u25 = Instance.new("BindableEvent")
    u25.Name = "ChatBarFocusChanged"
    v8.ChatWindow.ChatBarFocusChanged = u25
    u7.ChatBarFocusChanged:connect(function(...) --[[Anonymous function at line 50]]
        --[[
        Upvalues:
            [1] = u25
        --]]
        u25:Fire(...)
    end)
    local u26 = Instance.new("BindableEvent")
    u26.Name = "VisibilityStateChanged"
    v8.ChatWindow.VisibilityStateChanged = u26
    u7.VisibilityStateChanged:connect(function(...) --[[Anonymous function at line 50]]
        --[[
        Upvalues:
            [1] = u26
        --]]
        u26:Fire(...)
    end)
    local u27 = Instance.new("BindableEvent")
    u27.Name = "MessagesChanged"
    v8.ChatWindow.MessagesChanged = u27
    u7.MessagesChanged:connect(function(...) --[[Anonymous function at line 50]]
        --[[
        Upvalues:
            [1] = u27
        --]]
        u27:Fire(...)
    end)
    local u28 = Instance.new("BindableEvent")
    u28.Name = "MessagePosted"
    v8.ChatWindow.MessagePosted = u28
    u7.MessagePosted:connect(function(...) --[[Anonymous function at line 50]]
        --[[
        Upvalues:
            [1] = u28
        --]]
        u28:Fire(...)
    end)
    local v29 = Instance.new("BindableEvent")
    v29.Name = "CoreGuiEnabled"
    v8.ChatWindow.CoreGuiEnabled = v29
    local u30 = "CoreGuiEnabled"
    v29.Event:connect(function(...) --[[Anonymous function at line 58]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u30
        --]]
        u7[u30]:fire(...)
    end)
    local v31 = Instance.new("BindableEvent")
    v31.Name = "ChatMakeSystemMessage"
    v8.SetCore.ChatMakeSystemMessage = v31
    local u32 = "ChatMakeSystemMessage"
    v31.Event:connect(function(...) --[[Anonymous function at line 66]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u32
        --]]
        u7[u32 .. "Event"]:fire(...)
    end)
    local v33 = Instance.new("BindableEvent")
    v33.Name = "ChatWindowPosition"
    v8.SetCore.ChatWindowPosition = v33
    local u34 = "ChatWindowPosition"
    v33.Event:connect(function(...) --[[Anonymous function at line 66]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u34
        --]]
        u7[u34 .. "Event"]:fire(...)
    end)
    local v35 = Instance.new("BindableEvent")
    v35.Name = "ChatWindowSize"
    v8.SetCore.ChatWindowSize = v35
    local u36 = "ChatWindowSize"
    v35.Event:connect(function(...) --[[Anonymous function at line 66]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u36
        --]]
        u7[u36 .. "Event"]:fire(...)
    end)
    local v37 = Instance.new("BindableFunction")
    v37.Name = "ChatWindowPosition"
    v8.GetCore.ChatWindowPosition = v37
    local u38 = "ChatWindowPosition"
    function v37.OnInvoke(...) --[[Anonymous function at line 74]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u38
        --]]
        return u7["f" .. u38](...)
    end
    local v39 = Instance.new("BindableFunction")
    v39.Name = "ChatWindowSize"
    v8.GetCore.ChatWindowSize = v39
    local u40 = "ChatWindowSize"
    function v39.OnInvoke(...) --[[Anonymous function at line 74]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u40
        --]]
        return u7["f" .. u40](...)
    end
    local v41 = Instance.new("BindableEvent")
    v41.Name = "ChatBarDisabled"
    v8.SetCore.ChatBarDisabled = v41
    local u42 = "ChatBarDisabled"
    v41.Event:connect(function(...) --[[Anonymous function at line 66]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u42
        --]]
        u7[u42 .. "Event"]:fire(...)
    end)
    local v43 = Instance.new("BindableFunction")
    v43.Name = "ChatBarDisabled"
    v8.GetCore.ChatBarDisabled = v43
    local u44 = "ChatBarDisabled"
    function v43.OnInvoke(...) --[[Anonymous function at line 74]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u44
        --]]
        return u7["f" .. u44](...)
    end
    local v45 = Instance.new("BindableEvent")
    v45.Name = "SpecialKeyPressed"
    v8.ChatWindow.SpecialKeyPressed = v45
    local u46 = "SpecialKeyPressed"
    v45.Event:connect(function(...) --[[Anonymous function at line 34]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u46
        --]]
        u7[u46](u7, ...)
    end)
    SetCoreGuiChatConnections(v8)
end
function SetCoreGuiChatConnections(u48)
    --[[
    Upvalues:
        [1] = u1
    --]]
    local v49 = 0
    while v49 < 10 do
        v49 = v49 + 1
        local v50, v51 = pcall(function() --[[Anonymous function at line 111]]
            --[[
            Upvalues:
                [1] = u1
                [2] = u48
            --]]
            u1:SetCore("CoreGuiChatConnections", u48)
        end)
        if v50 then
            break
        end
        if not v50 and v49 == 10 then
            error("Error calling SetCore CoreGuiChatConnections: " .. v51)
        end
        wait()
    end
end
function checkBothChatTypesDisabled()
    --[[
    Upvalues:
        [1] = u6
    --]]
    if u6.BubbleChatEnabled == nil or u6.ClassicChatEnabled == nil then
        return false
    else
        return not (u6.BubbleChatEnabled or u6.ClassicChatEnabled)
    end
end
if v2:IsTenFootInterface() then
    v4:WaitForChild("DefaultChatSystemChatEvents").GetInitDataRequest:InvokeServer()
    return
elseif checkBothChatTypesDisabled() then
    local v52 = {
        ["ChatWindow"] = {}
    }
    v52.ChatWindow.ChatTypes = {}
    v52.ChatWindow.ChatTypes.BubbleChatEnabled = false
    v52.ChatWindow.ChatTypes.ClassicChatEnabled = false
    SetCoreGuiChatConnections(v52)
else
    v47()
end]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ChatScript]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="ModuleScript" referent="353"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local u1 = {
    ["Visible"] = nil,
    ["IsCoreGuiEnabled"] = nil,
    ["TopbarEnabled"] = nil,
    ["VisibilityStateChanged"] = nil
}
local v2, v3 = pcall(function() --[[Anonymous function at line 22]]
    return UserSettings():IsUserFeatureEnabled("UserHandleFriendJoinNotifierOnClient")
end)
if not v2 then
    v3 = false
end
local v4, v5 = pcall(function() --[[Anonymous function at line 32]]
    return UserSettings():IsUserFeatureEnabled("UserIsChatTranslationEnabled2")
end)
local u6 = v4 and v5
local v7, v8 = pcall(function() --[[Anonymous function at line 39]]
    return UserSettings():IsUserFeatureEnabled("UserAddBetterConsoleCheckForLegacyChat")
end)
local v9 = v7 and v8
game:GetService("RunService")
local v10 = game:GetService("ReplicatedStorage")
local u11 = game:GetService("Chat")
local u12 = game:GetService("StarterGui")
game:GetService("ContextActionService")
local u13 = v10:WaitForChild("DefaultChatSystemChatEvents")
local v14 = v10:WaitForChild("DefaultChatSystemChatEvents")
local v15 = u11:WaitForChild("ClientChatModules")
local u16 = require(v15:WaitForChild("ChatConstants"))
local u17 = require(v15:WaitForChild("ChatSettings"))
local v18 = v15:WaitForChild("MessageCreatorModules")
local v19 = require(v18:WaitForChild("Util"))
local u20 = nil
pcall(function() --[[Anonymous function at line 63]]
    --[[
    Upvalues:
        [1] = u20
    --]]
    u20 = require(game:GetService("Chat").ClientChatModules.ChatLocalization)
end)
local u22 = u20 == nil and {
    ["Get"] = function(_, _, p21) --[[Function name: Get, line 64]]
        return p21
    end
} or u20
local u23
if u6 then
    u23 = script:FindFirstChild("ChatTranslationEnabled")
    if u23 == nil then
        local u24 = nil
        u24 = script.ChildAdded:Connect(function(p25) --[[Anonymous function at line 71]]
            --[[
            Upvalues:
                [1] = u23
                [2] = u24
            --]]
            if p25.Name == "ChatTranslationEnabled" then
                u23 = p25
                u24:Disconnect()
            end
        end)
    end
else
    u23 = nil
end
local u26 = 10
local u27 = {
    ["OnNewMessage"] = "RemoteEvent",
    ["OnMessageDoneFiltering"] = "RemoteEvent",
    ["OnNewSystemMessage"] = "RemoteEvent",
    ["OnChannelJoined"] = "RemoteEvent",
    ["OnChannelLeft"] = "RemoteEvent",
    ["OnMuted"] = "RemoteEvent",
    ["OnUnmuted"] = "RemoteEvent",
    ["OnMainChannelSet"] = "RemoteEvent",
    ["SayMessageRequest"] = "RemoteEvent",
    ["GetInitDataRequest"] = "RemoteFunction"
}
local u28 = {}
local u29 = Instance.new("BindableEvent")
function TryRemoveChildWithVerifyingIsCorrectType(p30)
    --[[
    Upvalues:
        [1] = u27
        [2] = u28
        [3] = u26
    --]]
    if u27[p30.Name] and p30:IsA(u27[p30.Name]) then
        u27[p30.Name] = nil
        u28[p30.Name] = p30
        u26 = u26 - 1
    end
end
local u31 = u26
for _, v32 in pairs(v14:GetChildren()) do
    TryRemoveChildWithVerifyingIsCorrectType(v32)
end
if u31 > 0 then
    local v34 = v14.ChildAdded:connect(function(p33) --[[Anonymous function at line 117]]
        --[[
        Upvalues:
            [1] = u31
            [2] = u29
        --]]
        TryRemoveChildWithVerifyingIsCorrectType(p33)
        if u31 < 1 then
            u29:Fire()
        end
    end)
    u29.Event:wait()
    v34:disconnect()
    u29:Destroy()
end
local u35 = game:GetService("UserInputService")
local u36 = game:GetService("RunService")
local u37 = game:GetService("Players")
local u38 = u37.LocalPlayer
while not u38 do
    u37.ChildAdded:wait()
    u38 = u37.LocalPlayer
end
local u39 = true
local v40 = u17.ScreenGuiDisplayOrder == nil and 6 or u17.ScreenGuiDisplayOrder
local v41 = u38:WaitForChild("PlayerGui")
local u42 = Instance.new("ScreenGui")
u42.Name = "Chat"
u42.ResetOnSpawn = false
u42.DisplayOrder = v40
u42.Parent = v41
if v9 and game:GetService("GuiService"):IsTenFootInterface() then
    u42.Enabled = false
end
local u43 = false
local u44 = script
local v45 = require(u44:WaitForChild("ChatWindow"))
local v46 = require(u44:WaitForChild("ChatBar"))
local v47 = require(u44:WaitForChild("ChannelsBar"))
require(u44:WaitForChild("MessageLabelCreator"))
local u48 = require(u44:WaitForChild("MessageLogDisplay"))
require(u44:WaitForChild("ChatChannel"))
local v49 = require(u44:WaitForChild("CommandProcessor"))
local u50 = v45.new()
local u51 = v47.new()
local u52 = u48.new()
local u53 = v49.new()
local u54 = v46.new(u53, u50)
u50:CreateGuiObjects(u42)
u50:RegisterChatBar(u54)
u50:RegisterChannelsBar(u51)
u50:RegisterMessageLogDisplay(u52)
v19:RegisterChatWindow(u50)
local u55 = require(u44:WaitForChild("MessageSender"))
u55:RegisterSayMessageFunction(u28.SayMessageRequest)
if u35.TouchEnabled then
    u54:SetTextLabelText(u22:Get("GameChat_ChatMain_ChatBarTextTouch", "Tap here to chat"))
else
    u54:SetTextLabelText(u22:Get("GameChat_ChatMain_ChatBarText", "To chat click here or press \"/\" key"))
end
spawn(function() --[[Anonymous function at line 204]]
    --[[
    Upvalues:
        [1] = u44
        [2] = u17
        [3] = u50
    --]]
    local v56 = require(u44:WaitForChild("CurveUtil"))
    local v57 = 1 / (u17.ChatAnimationFPS or 20)
    local v58 = tick()
    while true do
        local v59 = tick()
        local v60 = v56:DeltaTimeToTimescale(v59 - v58)
        if v60 ~= 0 then
            u50:Update(v60)
        end
        wait(v57)
        v58 = v59
    end
end)
function CheckIfPointIsInSquare(p61, p62, p63)
    local v64
    if p62.X <= p61.X and (p61.X <= p63.X and p62.Y <= p61.Y) then
        v64 = p61.Y <= p63.Y
    else
        v64 = false
    end
    return v64
end
local u65 = false
local u66 = false
local u67 = 0
local u68 = 0
local u69 = Instance.new("BindableEvent")
local u70 = Instance.new("BindableEvent")
local u71 = Instance.new("BindableEvent")
function DoBackgroundFadeIn(p72)
    --[[
    Upvalues:
        [1] = u68
        [2] = u65
        [3] = u69
        [4] = u50
        [5] = u17
        [6] = u52
        [7] = u48
    --]]
    u68 = tick()
    u65 = false
    u69:Fire()
    u50:FadeInBackground(p72 or u17.ChatDefaultFadeDuration)
    if u50:GetCurrentChannel() then
        local v73 = u52.Scroller
        v73.ScrollingEnabled = true
        v73.ScrollBarThickness = u48.ScrollBarThickness
    end
end
function DoBackgroundFadeOut(p74)
    --[[
    Upvalues:
        [1] = u68
        [2] = u65
        [3] = u69
        [4] = u50
        [5] = u17
        [6] = u52
    --]]
    u68 = tick()
    u65 = true
    u69:Fire()
    u50:FadeOutBackground(p74 or u17.ChatDefaultFadeDuration)
    if u50:GetCurrentChannel() then
        local v75 = u52.Scroller
        v75.ScrollingEnabled = false
        v75.ScrollBarThickness = 0
    end
end
function DoTextFadeIn(p76)
    --[[
    Upvalues:
        [1] = u67
        [2] = u66
        [3] = u69
        [4] = u50
        [5] = u17
    --]]
    u67 = tick()
    u66 = false
    u69:Fire()
    u50:FadeInText((p76 or u17.ChatDefaultFadeDuration) * 0)
end
function DoTextFadeOut(p77)
    --[[
    Upvalues:
        [1] = u67
        [2] = u66
        [3] = u69
        [4] = u50
        [5] = u17
    --]]
    u67 = tick()
    u66 = true
    u69:Fire()
    u50:FadeOutText(p77 or u17.ChatDefaultFadeDuration)
end
function DoFadeInFromNewInformation()
    --[[
    Upvalues:
        [1] = u17
    --]]
    DoTextFadeIn()
    if u17.ChatShouldFadeInFromNewInformation then
        DoBackgroundFadeIn()
    end
end
function InstantFadeIn()
    DoBackgroundFadeIn(0)
    DoTextFadeIn(0)
end
function InstantFadeOut()
    DoBackgroundFadeOut(0)
    DoTextFadeOut(0)
end
local u78 = nil
function UpdateFadingForMouseState(p79)
    --[[
    Upvalues:
        [1] = u78
        [2] = u70
        [3] = u54
    --]]
    u78 = p79
    u70:Fire()
    if u54:IsFocused() then
        return
    elseif p79 then
        DoBackgroundFadeIn()
        DoTextFadeIn()
    else
        DoBackgroundFadeIn()
    end
end
spawn(function() --[[Anonymous function at line 322]]
    --[[
    Upvalues:
        [1] = u36
        [2] = u78
        [3] = u54
        [4] = u70
        [5] = u71
        [6] = u65
        [7] = u68
        [8] = u17
        [9] = u66
        [10] = u67
        [11] = u69
    --]]
    while true do
        u36.RenderStepped:wait()
        while u78 or u54:IsFocused() do
            if u78 then
                u70.Event:wait()
            end
            if u54:IsFocused() then
                u71.Event:wait()
            end
        end
        if u65 then
            if u66 then
                u69.Event:wait()
            elseif tick() - u67 > u17.ChatWindowTextFadeOutTime then
                DoTextFadeOut()
            end
        elseif tick() - u68 > u17.ChatWindowBackgroundFadeOutTime then
            DoBackgroundFadeOut()
        end
    end
end)
function getClassicChatEnabled()
    --[[
    Upvalues:
        [1] = u17
        [2] = u37
    --]]
    if u17.ClassicChatEnabled == nil then
        return u37.ClassicChat
    else
        return u17.ClassicChatEnabled
    end
end
function getBubbleChatEnabled()
    --[[
    Upvalues:
        [1] = u17
        [2] = u37
    --]]
    if u17.BubbleChatEnabled == nil then
        return u37.BubbleChat
    else
        return u17.BubbleChatEnabled
    end
end
function bubbleChatOnly()
    local v80 = not getClassicChatEnabled()
    if v80 then
        v80 = getBubbleChatEnabled()
    end
    return v80
end
function UpdateMousePosition(p81)
    --[[
    Upvalues:
        [1] = u1
        [2] = u17
        [3] = u50
        [4] = u78
    --]]
    if u1.Visible and (u1.IsCoreGuiEnabled and (u1.TopbarEnabled or u17.ChatOnWithTopBarOff)) then
        if not bubbleChatOnly() then
            local v82 = u50.GuiObject.AbsolutePosition
            local v83 = u50.GuiObject.AbsoluteSize
            local v84 = CheckIfPointIsInSquare(p81, v82, v82 + v83)
            if v84 ~= u78 then
                UpdateFadingForMouseState(v84)
            end
        end
    else
        return
    end
end
u35.InputChanged:connect(function(p85, _) --[[Anonymous function at line 390]]
    if p85.UserInputType == Enum.UserInputType.MouseMovement then
        local v86 = Vector2.new(p85.Position.X, p85.Position.Y)
        UpdateMousePosition(v86)
    end
end)
u35.TouchTap:connect(function(p87, _) --[[Anonymous function at line 397]]
    UpdateMousePosition(p87[1])
end)
u35.TouchMoved:connect(function(p88, _) --[[Anonymous function at line 401]]
    local v89 = Vector2.new(p88.Position.X, p88.Position.Y)
    UpdateMousePosition(v89)
end)
u35.Changed:connect(function(p90) --[[Anonymous function at line 406]]
    --[[
    Upvalues:
        [1] = u35
        [2] = u50
        [3] = u42
    --]]
    if p90 == "MouseBehavior" and u35.MouseBehavior == Enum.MouseBehavior.LockCenter then
        local v91 = u50.GuiObject.AbsolutePosition
        local v92 = u50.GuiObject.AbsoluteSize
        local v93 = u42.AbsoluteSize
        if CheckIfPointIsInSquare(v93 / 2, v91, v91 + v92) then
            u35.MouseBehavior = Enum.MouseBehavior.Default
        end
    end
end)
UpdateFadingForMouseState(true)
UpdateFadingForMouseState(false)
local v104 = {
    ["Signal"] = function() --[[Function name: Signal, line 431]]
        local v94 = {}
        local u95 = Instance.new("BindableEvent")
        local u96 = nil
        local u97 = nil
        function v94.fire(_, ...) --[[Anonymous function at line 439]]
            --[[
            Upvalues:
                [1] = u96
                [2] = u97
                [3] = u95
            --]]
            u96 = { ... }
            u97 = select("#", ...)
            u95:Fire()
        end
        function v94.connect(_, u98) --[[Anonymous function at line 445]]
            --[[
            Upvalues:
                [1] = u95
                [2] = u96
                [3] = u97
            --]]
            if not u98 then
                error("connect(nil)", 2)
            end
            return u95.Event:connect(function() --[[Anonymous function at line 447]]
                --[[
                Upvalues:
                    [1] = u98
                    [2] = u96
                    [3] = u97
                --]]
                local v99 = u96
                local v100 = u97
                u98(unpack(v99, 1, v100))
            end)
        end
        function v94.wait(_) --[[Anonymous function at line 452]]
            --[[
            Upvalues:
                [1] = u95
                [2] = u96
                [3] = u97
            --]]
            u95.Event:wait()
            local v101 = u96
            assert(v101, "Missing arg data, likely due to :TweenSize/Position corrupting threadrefs.")
            local v102 = u96
            local v103 = u97
            return unpack(v102, 1, v103)
        end
        return v94
    end
}
function SetVisibility(p105)
    --[[
    Upvalues:
        [1] = u50
        [2] = u1
    --]]
    u50:SetVisible(p105)
    u1.VisibilityStateChanged:fire(p105)
    u1.Visible = p105
    if u1.IsCoreGuiEnabled then
        if p105 then
            InstantFadeIn()
            return
        end
        InstantFadeOut()
    end
end
local u106 = nil
u1.TopbarEnabled = true
u1.MessageCount = 0
u1.Visible = true
u1.IsCoreGuiEnabled = true
function u1.ToggleVisibility(_) --[[Anonymous function at line 485]]
    --[[
    Upvalues:
        [1] = u50
    --]]
    SetVisibility(not u50:GetVisible())
end
function u1.SetVisible(_, p107) --[[Anonymous function at line 489]]
    --[[
    Upvalues:
        [1] = u50
    --]]
    if u50:GetVisible() ~= p107 then
        SetVisibility(p107)
    end
end
function u1.FocusChatBar(_) --[[Anonymous function at line 495]]
    --[[
    Upvalues:
        [1] = u54
    --]]
    u54:CaptureFocus()
end
function u1.EnterWhisperState(_, p108) --[[Anonymous function at line 499]]
    --[[
    Upvalues:
        [1] = u54
    --]]
    u54:EnterWhisperState(p108)
end
function u1.GetVisibility(_) --[[Anonymous function at line 503]]
    --[[
    Upvalues:
        [1] = u50
    --]]
    return u50:GetVisible()
end
function u1.GetMessageCount(p109) --[[Anonymous function at line 507]]
    return p109.MessageCount
end
function u1.TopbarEnabledChanged(p110, p111) --[[Anonymous function at line 511]]
    p110.TopbarEnabled = p111
    p110.CoreGuiEnabled:fire(game:GetService("StarterGui"):GetCoreGuiEnabled(Enum.CoreGuiType.Chat))
end
function u1.IsFocused(_, _) --[[Anonymous function at line 516]]
    --[[
    Upvalues:
        [1] = u54
    --]]
    return u54:IsFocused()
end
u1.ChatBarFocusChanged = v104.Signal()
u1.VisibilityStateChanged = v104.Signal()
u1.MessagesChanged = v104.Signal()
u1.MessagePosted = v104.Signal()
u1.CoreGuiEnabled = v104.Signal()
u1.ChatMakeSystemMessageEvent = v104.Signal()
u1.ChatWindowPositionEvent = v104.Signal()
u1.ChatWindowSizeEvent = v104.Signal()
u1.ChatBarDisabledEvent = v104.Signal()
function u1.fChatWindowPosition(_) --[[Anonymous function at line 534]]
    --[[
    Upvalues:
        [1] = u50
    --]]
    return u50.GuiObject.Position
end
function u1.fChatWindowSize(_) --[[Anonymous function at line 538]]
    --[[
    Upvalues:
        [1] = u50
    --]]
    return u50.GuiObject.Size
end
function u1.fChatBarDisabled(_) --[[Anonymous function at line 542]]
    --[[
    Upvalues:
        [1] = u54
    --]]
    return not u54:GetEnabled()
end
function u1.SpecialKeyPressed(_, p112, _) --[[Anonymous function at line 546]]
    --[[
    Upvalues:
        [1] = u39
        [2] = u106
    --]]
    if p112 == Enum.SpecialKey.ChatHotkey and u39 then
        u106()
    end
end
u1.CoreGuiEnabled:connect(function(p113) --[[Anonymous function at line 555]]
    --[[
    Upvalues:
        [1] = u1
        [2] = u17
        [3] = u50
        [4] = u54
    --]]
    u1.IsCoreGuiEnabled = p113
    if p113 then
        p113 = u1.TopbarEnabled or u17.ChatOnWithTopBarOff
    end
    u50:SetCoreGuiEnabled(p113)
    if p113 then
        InstantFadeIn()
    else
        u54:ReleaseFocus()
        InstantFadeOut()
    end
end)
function trimTrailingSpaces(p114)
    local v115 = #p114
    while v115 > 0 and p114:find("^%s", v115) do
        v115 = v115 - 1
    end
    return p114:sub(1, v115)
end
u1.ChatMakeSystemMessageEvent:connect(function(p116) --[[Anonymous function at line 583]]
    --[[
    Upvalues:
        [1] = u43
        [2] = u17
        [3] = u50
        [4] = u16
        [5] = u51
        [6] = u1
    --]]
    if p116.Text then
        local v117 = p116.Text
        if type(v117) == "string" then
            while not u43 do
                wait()
            end
            local v118 = u17.GeneralChannelName
            local v119 = u50:GetChannel(v118)
            if v119 then
                local v120 = {
                    ["ID"] = -1,
                    ["FromSpeaker"] = nil,
                    ["SpeakerUserId"] = 0,
                    ["OriginalChannel"] = v118,
                    ["IsFiltered"] = true
                }
                local v121 = p116.Text
                v120.MessageLength = string.len(v121)
                v120.MessageLengthUtf8 = utf8.len(utf8.nfcnormalize(p116.Text))
                v120.Message = trimTrailingSpaces(p116.Text)
                v120.MessageType = u16.MessageTypeSetCore
                v120.Time = os.time()
                v120.ExtraData = p116
                v119:AddMessageToChannel(v120)
                u51:UpdateMessagePostedInChannel(v118)
                u1.MessageCount = u1.MessageCount + 1
                u1.MessagesChanged:fire(u1.MessageCount)
            end
        end
    end
end)
u1.ChatBarDisabledEvent:connect(function(p122) --[[Anonymous function at line 613]]
    --[[
    Upvalues:
        [1] = u39
        [2] = u54
    --]]
    if u39 then
        u54:SetEnabled(not p122)
        if p122 then
            u54:ReleaseFocus()
        end
    end
end)
u1.ChatWindowSizeEvent:connect(function(p123) --[[Anonymous function at line 622]]
    --[[
    Upvalues:
        [1] = u50
    --]]
    u50.GuiObject.Size = p123
end)
u1.ChatWindowPositionEvent:connect(function(p124) --[[Anonymous function at line 626]]
    --[[
    Upvalues:
        [1] = u50
    --]]
    u50.GuiObject.Position = p124
end)
u106 = function() --[[Function name: DoChatBarFocus, line 634]]
    --[[
    Upvalues:
        [1] = u50
        [2] = u54
        [3] = u1
    --]]
    if u50:GetCoreGuiEnabled() then
        if u54:GetEnabled() then
            if not u54:IsFocused() and u54:GetVisible() then
                u1:SetVisible(true)
                InstantFadeIn()
                u54:CaptureFocus()
                u1.ChatBarFocusChanged:fire(true)
            end
        end
    else
        return
    end
end
u71.Event:connect(function(p125) --[[Anonymous function at line 646]]
    --[[
    Upvalues:
        [1] = u1
    --]]
    u1.ChatBarFocusChanged:fire(p125)
end)
function DoSwitchCurrentChannel(p126)
    --[[
    Upvalues:
        [1] = u50
    --]]
    if u50:GetChannel(p126) then
        u50:SwitchCurrentChannel(p126)
    end
end
function SendMessageToSelfInTargetChannel(p127, p128, p129)
    --[[
    Upvalues:
        [1] = u50
        [2] = u16
    --]]
    local v130 = u50:GetChannel(p128)
    if v130 then
        v130:AddMessageToChannel({
            ["ID"] = -1,
            ["FromSpeaker"] = nil,
            ["SpeakerUserId"] = 0,
            ["OriginalChannel"] = p128,
            ["IsFiltered"] = true,
            ["MessageLength"] = string.len(p127),
            ["MessageLengthUtf8"] = utf8.len(utf8.nfcnormalize(p127)),
            ["Message"] = trimTrailingSpaces(p127),
            ["MessageType"] = u16.MessageTypeSystem,
            ["Time"] = os.time(),
            ["ExtraData"] = p129
        })
    end
end
function chatBarFocused()
    --[[
    Upvalues:
        [1] = u78
        [2] = u66
        [3] = u71
    --]]
    if not u78 then
        DoBackgroundFadeIn()
        if u66 then
            DoTextFadeIn()
        end
    end
    u71:Fire(true)
end
function chatBarFocusLost(p131, _)
    --[[
    Upvalues:
        [1] = u71
        [2] = u54
        [3] = u1
        [4] = u53
        [5] = u50
        [6] = u17
        [7] = u55
    --]]
    DoBackgroundFadeIn()
    u71:Fire(false)
    if p131 then
        local v132 = u54:GetTextBox().Text
        if u54:IsInCustomState() then
            v132 = u54:GetCustomMessage() or v132
            local v133 = u54:CustomStateProcessCompletedMessage(v132)
            u54:ResetCustomState()
            if v133 then
                return
            end
        end
        u54:GetTextBox().Text = ""
        if v132 ~= "" then
            u1.MessagePosted:fire(v132)
            if not u53:ProcessCompletedChatMessage(v132, u50) then
                if u17.DisallowedWhiteSpace then
                    for v134 = 1, #u17.DisallowedWhiteSpace do
                        if u17.DisallowedWhiteSpace[v134] == "\t" then
                            v132 = string.gsub(v132, u17.DisallowedWhiteSpace[v134], " ")
                        else
                            v132 = string.gsub(v132, u17.DisallowedWhiteSpace[v134], "")
                        end
                    end
                end
                local v135 = string.gsub(v132, "\n", "")
                local v136 = string.gsub(v135, "[ ]+", " ")
                local v137 = u50:GetTargetMessageChannel()
                if v137 then
                    u55:SendMessage(v136, v137)
                    return
                end
                u55:SendMessage(v136, nil)
            end
        end
    end
end
local u138 = {}
function setupChatBarConnections()
    --[[
    Upvalues:
        [1] = u138
        [2] = u54
    --]]
    for v139 = 1, #u138 do
        u138[v139]:Disconnect()
    end
    u138 = {}
    local v140 = u54:GetTextBox().FocusLost:connect(chatBarFocusLost)
    local v141 = u138
    table.insert(v141, v140)
    local v142 = u54:GetTextBox().Focused:connect(chatBarFocused)
    local v143 = u138
    table.insert(v143, v142)
end
setupChatBarConnections()
u54.GuiObjectsChanged:connect(setupChatBarConnections)
function getEchoMessagesInGeneral()
    --[[
    Upvalues:
        [1] = u17
    --]]
    return u17.EchoMessagesInGeneralChannel == nil and true or u17.EchoMessagesInGeneralChannel
end
u28.OnMessageDoneFiltering.OnClientEvent:connect(function(p144) --[[Anonymous function at line 763]]
    --[[
    Upvalues:
        [1] = u17
        [2] = u38
        [3] = u50
    --]]
    if u17.ShowUserOwnFilteredMessage or p144.FromSpeaker ~= u38.Name then
        local v145 = p144.OriginalChannel
        local v146 = u50:GetChannel(v145)
        if v146 then
            v146:UpdateMessageFiltered(p144)
        end
        local v147 = getEchoMessagesInGeneral() and u17.GeneralChannelName and (v145 ~= u17.GeneralChannelName and u50:GetChannel(u17.GeneralChannelName))
        if v147 then
            v147:UpdateMessageFiltered(p144)
        end
    end
end)
u28.OnNewMessage.OnClientEvent:connect(function(p148, p149) --[[Anonymous function at line 784]]
    --[[
    Upvalues:
        [1] = u50
        [2] = u38
        [3] = u51
        [4] = u17
        [5] = u1
    --]]
    local v150 = u50:GetChannel(p149)
    if v150 then
        v150:AddMessageToChannel(p148)
        if p148.FromSpeaker ~= u38.Name then
            u51:UpdateMessagePostedInChannel(p149)
        end
        local v151 = getEchoMessagesInGeneral() and u17.GeneralChannelName and (p149 ~= u17.GeneralChannelName and u50:GetChannel(u17.GeneralChannelName))
        if v151 then
            v151:AddMessageToChannel(p148)
        end
        u1.MessageCount = u1.MessageCount + 1
        u1.MessagesChanged:fire(u1.MessageCount)
        DoFadeInFromNewInformation()
    end
end)
u28.OnNewSystemMessage.OnClientEvent:connect(function(p152, p153) --[[Anonymous function at line 807]]
    --[[
    Upvalues:
        [1] = u50
        [2] = u51
        [3] = u1
        [4] = u17
    --]]
    local v154 = p153 or "System"
    local v155 = u50:GetChannel(v154)
    if v155 then
        v155:AddMessageToChannel(p152)
        u51:UpdateMessagePostedInChannel(v154)
        u1.MessageCount = u1.MessageCount + 1
        u1.MessagesChanged:fire(u1.MessageCount)
        DoFadeInFromNewInformation()
        local v156 = getEchoMessagesInGeneral() and u17.GeneralChannelName and (v154 ~= u17.GeneralChannelName and u50:GetChannel(u17.GeneralChannelName))
        if v156 then
            v156:AddMessageToChannel(p152)
            return
        end
    else
        warn(string.format("Just received system message for channel I\'m not in [%s]", v154))
    end
end)
function HandleChannelJoined(p157, p158, p159, p160, p161, p162)
    --[[
    Upvalues:
        [1] = u50
        [2] = u17
        [3] = u43
        [4] = u54
        [5] = u16
        [6] = u22
        [7] = u6
        [8] = u23
    --]]
    if u50:GetChannel(p157) then
        u50:RemoveChannel(p157)
    end
    if p157 == u17.GeneralChannelName then
        u43 = true
    end
    if p160 then
        u54:SetChannelNameColor(p157, p160)
    end
    local v163 = u50:AddChannel(p157)
    if v163 then
        if p157 == u17.GeneralChannelName then
            DoSwitchCurrentChannel(p157)
        end
        if p159 then
            local v164 = #p159 <= u17.MessageHistoryLengthPerChannel and 1 or #p159 - u17.MessageHistoryLengthPerChannel
            for v165 = v164, #p159 do
                v163:AddMessageToChannel(p159[v165])
            end
            if getEchoMessagesInGeneral() and (p161 and (u17.GeneralChannelName and p157 ~= u17.GeneralChannelName)) then
                local v166 = u50:GetChannel(u17.GeneralChannelName)
                if v166 then
                    v166:AddMessagesToChannelByTimeStamp(p159, v164)
                end
            end
        end
        if p158 ~= "" then
            local v167 = {
                ["ID"] = -1,
                ["FromSpeaker"] = nil,
                ["SpeakerUserId"] = 0,
                ["OriginalChannel"] = p157,
                ["IsFiltered"] = true,
                ["MessageLength"] = string.len(p158),
                ["MessageLengthUtf8"] = utf8.len(utf8.nfcnormalize(p158)),
                ["Message"] = trimTrailingSpaces(p158),
                ["MessageType"] = u16.MessageTypeWelcome,
                ["Time"] = os.time(),
                ["ExtraData"] = nil
            }
            v163:AddMessageToChannel(v167)
            local v168 = getEchoMessagesInGeneral() and (p162 and (not u17.ShowChannelsBar and p157 ~= u17.GeneralChannelName)) and u50:GetChannel(u17.GeneralChannelName)
            if v168 then
                v168:AddMessageToChannel(v167)
            end
        end
        local v169 = u22:Get("GameChat_ChatMain_ChatTranslationOnboarding", "Text chat will be translated into your language. Tap the symbol in front of the message to see the original. You can turn off translations in the Settings menu.")
        if u6 and (v169 ~= "" and (p157 == u17.GeneralChannelName and (u23 ~= nil and u23.Value))) then
            v163:AddMessageToChannel({
                ["ID"] = -2,
                ["FromSpeaker"] = nil,
                ["SpeakerUserId"] = 0,
                ["OriginalChannel"] = p157,
                ["IsFiltered"] = true,
                ["MessageLength"] = string.len(v169),
                ["MessageLengthUtf8"] = utf8.len(utf8.nfcnormalize(v169)),
                ["Message"] = trimTrailingSpaces(v169),
                ["MessageType"] = u16.MessageTypeWelcome,
                ["Time"] = os.time(),
                ["ExtraData"] = nil
            })
        end
        DoFadeInFromNewInformation()
    end
end
u28.OnChannelJoined.OnClientEvent:connect(function(p170, p171, p172, p173) --[[Anonymous function at line 925]]
    HandleChannelJoined(p170, p171, p172, p173, false, true)
end)
u28.OnChannelLeft.OnClientEvent:connect(function(p174) --[[Anonymous function at line 929]]
    --[[
    Upvalues:
        [1] = u50
    --]]
    u50:RemoveChannel(p174)
    DoFadeInFromNewInformation()
end)
u28.OnMuted.OnClientEvent:connect(function(_) --[[Anonymous function at line 935]] end)
u28.OnUnmuted.OnClientEvent:connect(function(_) --[[Anonymous function at line 941]] end)
u28.OnMainChannelSet.OnClientEvent:connect(function(p175) --[[Anonymous function at line 945]]
    DoSwitchCurrentChannel(p175)
end)
coroutine.wrap(function() --[[Anonymous function at line 949]]
    --[[
    Upvalues:
        [1] = u13
        [2] = u54
    --]]
    local v176 = u13:WaitForChild("ChannelNameColorUpdated", 5)
    if v176 then
        v176.OnClientEvent:connect(function(p177, p178) --[[Anonymous function at line 953]]
            --[[
            Upvalues:
                [1] = u54
            --]]
            u54:SetChannelNameColor(p177, p178)
        end)
    end
end)()
local u179 = nil
local u180 = nil
local u181 = nil
local u182 = nil
pcall(function() --[[Anonymous function at line 969]]
    --[[
    Upvalues:
        [1] = u179
        [2] = u12
        [3] = u180
        [4] = u181
        [5] = u182
    --]]
    u179 = u12:GetCore("PlayerBlockedEvent")
    u180 = u12:GetCore("PlayerMutedEvent")
    u181 = u12:GetCore("PlayerUnblockedEvent")
    u182 = u12:GetCore("PlayerUnmutedEvent")
end)
function SendSystemMessageToSelf(p183)
    --[[
    Upvalues:
        [1] = u50
        [2] = u16
    --]]
    local v184 = u50:GetCurrentChannel()
    if v184 then
        v184:AddMessageToChannel({
            ["ID"] = -1,
            ["FromSpeaker"] = nil,
            ["SpeakerUserId"] = 0,
            ["OriginalChannel"] = v184.Name,
            ["IsFiltered"] = true,
            ["MessageLength"] = string.len(p183),
            ["MessageLengthUtf8"] = utf8.len(utf8.nfcnormalize(p183)),
            ["Message"] = trimTrailingSpaces(p183),
            ["MessageType"] = u16.MessageTypeSystem,
            ["Time"] = os.time(),
            ["ExtraData"] = nil
        })
    end
end
function MutePlayer(p185)
    --[[
    Upvalues:
        [1] = u13
    --]]
    local v186 = u13:FindFirstChild("MutePlayerRequest")
    if v186 then
        return v186:InvokeServer(p185.Name)
    else
        return false
    end
end
if u179 then
    u179.Event:connect(function(p187) --[[Anonymous function at line 1007]]
        --[[
        Upvalues:
            [1] = u17
            [2] = u22
        --]]
        if MutePlayer(p187) then
            local v188
            if u17.PlayerDisplayNamesEnabled then
                v188 = p187.DisplayName
            else
                v188 = p187.Name
            end
            SendSystemMessageToSelf(u22:Get("GameChat_ChatMain_SpeakerHasBeenBlocked", string.format("Speaker \'%s\' has been blocked.", v188), {
                ["RBX_NAME"] = v188
            }))
        end
    end)
end
if v3 then
    local v189
    if u17.ShowFriendJoinNotification == nil then
        v189 = false
    else
        v189 = u17.ShowFriendJoinNotification
    end
    if v189 then
        u37.PlayerAdded:Connect(function(u190) --[[Anonymous function at line 1037]]
            --[[
            Upvalues:
                [1] = u38
                [2] = u17
                [3] = u22
            --]]
            local v191, v192 = pcall(function() --[[Anonymous function at line 1038]]
                --[[
                Upvalues:
                    [1] = u190
                    [2] = u38
                --]]
                return u190:IsFriendsWith(u38.UserId)
            end)
            if v191 and v192 then
                local v193 = u190.Name
                if u17.PlayerDisplayNamesEnabled then
                    v193 = u190.DisplayName
                end
                local v194 = u22:FormatMessageToSend("GameChat_FriendChatNotifier_JoinMessage", string.format("Your friend %s has joined the game.", v193), "RBX_NAME", v193)
                SendSystemMessageToSelf(v194)
            end
        end)
    end
end
if u180 then
    u180.Event:connect(function(p195) --[[Anonymous function at line 1060]]
        --[[
        Upvalues:
            [1] = u17
            [2] = u22
        --]]
        if MutePlayer(p195) then
            local v196
            if u17.PlayerDisplayNamesEnabled then
                v196 = p195.DisplayName
            else
                v196 = p195.Name
            end
            SendSystemMessageToSelf(u22:Get("GameChat_ChatMain_SpeakerHasBeenMuted", string.format("Speaker \'%s\' has been muted.", v196), {
                ["RBX_NAME"] = v196
            }))
        end
    end)
end
function UnmutePlayer(p197)
    --[[
    Upvalues:
        [1] = u13
    --]]
    local v198 = u13:FindFirstChild("UnMutePlayerRequest")
    if v198 then
        return v198:InvokeServer(p197.Name)
    else
        return false
    end
end
if u181 then
    u181.Event:connect(function(p199) --[[Anonymous function at line 1090]]
        --[[
        Upvalues:
            [1] = u17
            [2] = u22
        --]]
        if UnmutePlayer(p199) then
            local v200
            if u17.PlayerDisplayNamesEnabled then
                v200 = p199.DisplayName
            else
                v200 = p199.Name
            end
            SendSystemMessageToSelf(u22:Get("GameChat_ChatMain_SpeakerHasBeenUnBlocked", string.format("Speaker \'%s\' has been unblocked.", v200), {
                ["RBX_NAME"] = v200
            }))
        end
    end)
end
if u182 then
    u182.Event:connect(function(p201) --[[Anonymous function at line 1112]]
        --[[
        Upvalues:
            [1] = u17
            [2] = u22
        --]]
        if UnmutePlayer(p201) then
            local v202
            if u17.PlayerDisplayNamesEnabled then
                v202 = p201.DisplayName
            else
                v202 = p201.Name
            end
            SendSystemMessageToSelf(u22:Get("GameChat_ChatMain_SpeakerHasBeenUnMuted", string.format("Speaker \'%s\' has been unmuted.", v202), {
                ["RBX_NAME"] = v202
            }))
        end
    end)
end
spawn(function() --[[Anonymous function at line 1135]]
    --[[
    Upvalues:
        [1] = u38
        [2] = u12
        [3] = u13
    --]]
    if u38.UserId > 0 then
        pcall(function() --[[Anonymous function at line 1138]]
            --[[
            Upvalues:
                [1] = u12
                [2] = u13
            --]]
            local v203 = u12:GetCore("GetBlockedUserIds")
            local v204 = #v203 > 0 and u13:FindFirstChild("SetBlockedUserIdsRequest")
            if v204 then
                v204:FireServer(v203)
            end
        end)
    end
end)
spawn(function() --[[Anonymous function at line 1150]]
    --[[
    Upvalues:
        [1] = u11
        [2] = u38
        [3] = u39
        [4] = u36
    --]]
    local v205, v206 = pcall(function() --[[Anonymous function at line 1151]]
        --[[
        Upvalues:
            [1] = u11
            [2] = u38
        --]]
        return u11:CanUserChatAsync(u38.UserId)
    end)
    if v205 then
        u39 = u36:IsStudio() or v206
    end
end)
local v207 = u28.GetInitDataRequest:InvokeServer()
for _, v208 in pairs(v207.Channels) do
    if v208[1] == u17.GeneralChannelName then
        HandleChannelJoined(v208[1], v208[2], v208[3], v208[4], true, false)
    end
end
for _, v209 in pairs(v207.Channels) do
    if v209[1] ~= u17.GeneralChannelName then
        HandleChannelJoined(v209[1], v209[2], v209[3], v209[4], true, false)
    end
end
return u1]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ChatMain]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="ModuleScript" referent="354"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1 = {}
local v2 = game:GetService("Chat"):WaitForChild("ClientChatModules")
local v3 = script.Parent
local u4 = require(v3:WaitForChild("ChannelsTab"))
local u5 = require(v3:WaitForChild("MessageSender"))
local u6 = require(v2:WaitForChild("ChatSettings"))
local u7 = require(v3:WaitForChild("CurveUtil"))
local u8 = {}
u8.__index = u8
function u8.CreateGuiObjects(u9, p10) --[[Anonymous function at line 23]]
    --[[
    Upvalues:
        [1] = u6
        [2] = u5
    --]]
    local v11 = Instance.new("Frame")
    v11.Selectable = false
    v11.Size = UDim2.new(1, 0, 1, 0)
    v11.BackgroundTransparency = 1
    v11.Parent = p10
    local v12 = Instance.new("Frame")
    v12.Selectable = false
    v12.Name = "ScrollingBase"
    v12.BackgroundTransparency = 1
    v12.ClipsDescendants = true
    v12.Size = UDim2.new(1, 0, 1, 0)
    v12.Position = UDim2.new(0, 0, 0, 0)
    v12.Parent = v11
    local v13 = Instance.new("Frame")
    v13.Selectable = false
    v13.Name = "ScrollerSizer"
    v13.BackgroundTransparency = 1
    v13.Size = UDim2.new(1, 0, 1, 0)
    v13.Position = UDim2.new(0, 0, 0, 0)
    v13.Parent = v12
    local v14 = Instance.new("Frame")
    v14.Selectable = false
    v14.Name = "ScrollerFrame"
    v14.BackgroundTransparency = 1
    v14.Size = UDim2.new(1, 0, 1, 0)
    v14.Position = UDim2.new(0, 0, 0, 0)
    v14.Parent = v13
    local v15 = Instance.new("Frame")
    v15.Selectable = false
    v15.Size = UDim2.new(1, 0, 1, 0)
    v15.Position = UDim2.new(0, 0, 0, 0)
    v15.ClipsDescendants = true
    v15.BackgroundTransparency = 1
    v15.Parent = v11
    local u16 = Instance.new("Frame")
    u16.Selectable = false
    u16.Name = "LeaveConfirmationFrame"
    u16.Size = UDim2.new(1, 0, 1, 0)
    u16.Position = UDim2.new(0, 0, 1, 0)
    u16.BackgroundTransparency = 0.6
    u16.BorderSizePixel = 0
    u16.BackgroundColor3 = Color3.new(0, 0, 0)
    u16.Parent = v15
    local v17 = Instance.new("TextButton")
    v17.Selectable = false
    v17.Size = UDim2.new(1, 0, 1, 0)
    v17.BackgroundTransparency = 1
    v17.Text = ""
    v17.Parent = u16
    local v18 = Instance.new("TextButton")
    v18.Selectable = false
    v18.Size = UDim2.new(0.25, 0, 1, 0)
    v18.BackgroundTransparency = 1
    v18.Font = u6.DefaultFont
    v18.TextSize = 18
    v18.TextStrokeTransparency = 0.75
    v18.Position = UDim2.new(0, 0, 0, 0)
    v18.TextColor3 = Color3.new(0, 1, 0)
    v18.Text = "Confirm"
    v18.Parent = u16
    local v19 = v18:Clone()
    v19.Parent = u16
    v19.Position = UDim2.new(0.75, 0, 0, 0)
    v19.TextColor3 = Color3.new(1, 0, 0)
    v19.Text = "Cancel"
    local v20 = Instance.new("TextLabel")
    v20.Selectable = false
    v20.Size = UDim2.new(0.5, 0, 1, 0)
    v20.Position = UDim2.new(0.25, 0, 0, 0)
    v20.BackgroundTransparency = 1
    v20.TextColor3 = Color3.new(1, 1, 1)
    v20.TextStrokeTransparency = 0.75
    v20.Text = "Leave channel <XX>?"
    v20.Font = u6.DefaultFont
    v20.TextSize = 18
    v20.Parent = u16
    local u21 = Instance.new("StringValue")
    u21.Name = "LeaveTarget"
    u21.Parent = u16
    local u22 = u16.Position
    v18.MouseButton1Click:connect(function() --[[Anonymous function at line 115]]
        --[[
        Upvalues:
            [1] = u5
            [2] = u21
            [3] = u16
            [4] = u22
        --]]
        u5:SendMessage(string.format("/leave %s", u21.Value), nil)
        u16:TweenPosition(u22, Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true)
    end)
    v19.MouseButton1Click:connect(function() --[[Anonymous function at line 119]]
        --[[
        Upvalues:
            [1] = u16
            [2] = u22
        --]]
        u16:TweenPosition(u22, Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.2, true)
    end)
    local v23 = Instance.new("ImageButton", v11)
    v23.Selectable = u6.GamepadNavigationEnabled
    v23.Name = "PageLeftButton"
    v23.SizeConstraint = Enum.SizeConstraint.RelativeYY
    v23.Size = UDim2.new(0.7, 0, 0.7, 0)
    v23.BackgroundTransparency = 1
    v23.Position = UDim2.new(0, 4, 0.15000000000000002, 0)
    v23.Visible = false
    v23.Image = "rbxassetid://471630199"
    local v24 = Instance.new("ImageLabel", v23)
    v24.Name = "ArrowLabel"
    v24.BackgroundTransparency = 1
    v24.Size = UDim2.new(0.4, 0, 0.4, 0)
    v24.Image = "rbxassetid://471630112"
    local v25 = Instance.new("Frame", v11)
    v25.Selectable = false
    v25.BackgroundTransparency = 1
    v25.Name = "PositionalHelper"
    v25.Size = v23.Size
    v25.SizeConstraint = v23.SizeConstraint
    v25.Position = UDim2.new(1, 0, 0.15000000000000002, 0)
    local v26 = v23:Clone()
    v26.Parent = v25
    v26.Name = "PageRightButton"
    v26.Size = UDim2.new(1, 0, 1, 0)
    v26.SizeConstraint = Enum.SizeConstraint.RelativeXY
    v26.Position = UDim2.new(-1, -4, 0, 0)
    local v27 = UDim2.new(0.05, 0, 0, 0)
    v26.ArrowLabel.Position = UDim2.new(0.3, 0, 0.3, 0) + v27
    v23.ArrowLabel.Position = UDim2.new(0.3, 0, 0.3, 0) - v27
    v23.ArrowLabel.Rotation = 180
    u9.GuiObject = v11
    u9.GuiObjects.BaseFrame = v11
    u9.GuiObjects.ScrollerSizer = v13
    u9.GuiObjects.ScrollerFrame = v14
    u9.GuiObjects.PageLeftButton = v23
    u9.GuiObjects.PageRightButton = v26
    u9.GuiObjects.LeaveConfirmationFrame = u16
    u9.GuiObjects.LeaveConfirmationNotice = v20
    u9.GuiObjects.PageLeftButtonArrow = v23.ArrowLabel
    u9.GuiObjects.PageRightButtonArrow = v26.ArrowLabel
    u9:AnimGuiObjects()
    v23.MouseButton1Click:connect(function() --[[Anonymous function at line 187]]
        --[[
        Upvalues:
            [1] = u9
        --]]
        u9:ScrollChannelsFrame(-1)
    end)
    v26.MouseButton1Click:connect(function() --[[Anonymous function at line 188]]
        --[[
        Upvalues:
            [1] = u9
        --]]
        u9:ScrollChannelsFrame(1)
    end)
    u9:ScrollChannelsFrame(0)
end
function u8.UpdateMessagePostedInChannel(p28, p29) --[[Anonymous function at line 194]]
    local v30 = p28:GetChannelTab(p29)
    if v30 then
        v30:UpdateMessagePostedInChannel()
    else
        warn("ChannelsTab \'" .. p29 .. "\' does not exist!")
    end
end
function u8.AddChannelTab(u31, p32) --[[Anonymous function at line 203]]
    --[[
    Upvalues:
        [1] = u4
        [2] = u6
    --]]
    if u31:GetChannelTab(p32) then
        error("Channel tab \'" .. p32 .. "\'already exists!")
    end
    local u33 = u4.new(p32)
    u33.GuiObject.Parent = u31.GuiObjects.ScrollerFrame
    u31.ChannelTabs[p32:lower()] = u33
    u31.NumTabs = u31.NumTabs + 1
    u31:OrganizeChannelTabs()
    if u6.RightClickToLeaveChannelEnabled then
        u33.NameTag.MouseButton2Click:connect(function() --[[Anonymous function at line 216]]
            --[[
            Upvalues:
                [1] = u31
                [2] = u33
            --]]
            u31.LeaveConfirmationNotice.Text = string.format("Leave channel %s?", u33.ChannelName)
            u31.LeaveConfirmationFrame.LeaveTarget.Value = u33.ChannelName
            u31.LeaveConfirmationFrame:TweenPosition(UDim2.new(0, 0, 0, 0), Enum.EasingDirection.In, Enum.EasingStyle.Quad, 0.2, true)
        end)
    end
    return u33
end
function u8.RemoveChannelTab(p34, p35) --[[Anonymous function at line 226]]
    if not p34:GetChannelTab(p35) then
        error("Channel tab \'" .. p35 .. "\'does not exist!")
    end
    local v36 = p35:lower()
    p34.ChannelTabs[v36]:Destroy()
    p34.ChannelTabs[v36] = nil
    p34.NumTabs = p34.NumTabs - 1
    p34:OrganizeChannelTabs()
end
function u8.GetChannelTab(p37, p38) --[[Anonymous function at line 239]]
    return p37.ChannelTabs[p38:lower()]
end
function u8.OrganizeChannelTabs(p39) --[[Anonymous function at line 243]]
    --[[
    Upvalues:
        [1] = u6
    --]]
    local v40 = {}
    local v41 = u6.GeneralChannelName
    table.insert(v40, p39:GetChannelTab(v41))
    table.insert(v40, p39:GetChannelTab("System"))
    for _, v42 in pairs(p39.ChannelTabs) do
        if v42.ChannelName ~= u6.GeneralChannelName and v42.ChannelName ~= "System" then
            table.insert(v40, v42)
        end
    end
    for v43, v44 in pairs(v40) do
        v44.GuiObject.Position = UDim2.new(v43 - 1, 0, 0, 0)
    end
    local v45 = p39.GuiObjects.ScrollerSizer
    local v46 = UDim2.new
    local v47 = u6.ChannelsBarFullTabSize
    local v48 = p39.NumTabs
    local v49 = math.min(v47, v48)
    v45.Size = v46(1 / math.max(1, v49), 0, 1, 0)
    p39:ScrollChannelsFrame(0)
end
function u8.ResizeChannelTabText(p50, p51) --[[Anonymous function at line 265]]
    for _, v52 in pairs(p50.ChannelTabs) do
        v52:SetTextSize(p51)
    end
end
function u8.ScrollChannelsFrame(u53, p54) --[[Anonymous function at line 271]]
    --[[
    Upvalues:
        [1] = u6
    --]]
    if u53.ScrollChannelsFrameLock then
        return
    else
        u53.ScrollChannelsFrameLock = true
        local v55 = u6.ChannelsBarFullTabSize
        local v56 = u53.CurPageNum + p54
        if v56 < 0 then
            v56 = 0
        elseif v56 > 0 and v56 + v55 > u53.NumTabs then
            v56 = u53.NumTabs - v55
        end
        u53.CurPageNum = v56
        local v57 = UDim2.new(-u53.CurPageNum, 0, 0, 0)
        u53.GuiObjects.PageLeftButton.Visible = u53.CurPageNum > 0
        u53.GuiObjects.PageRightButton.Visible = u53.CurPageNum + v55 < u53.NumTabs
        if p54 == 0 then
            u53.ScrollChannelsFrameLock = false
        else
            u53:WaitUntilParentedCorrectly()
            u53.GuiObjects.ScrollerFrame:TweenPosition(v57, Enum.EasingDirection.InOut, Enum.EasingStyle.Quad, 0.15, true, function() --[[Function name: UnlockFunc, line 297]]
                --[[
                Upvalues:
                    [1] = u53
                --]]
                u53.ScrollChannelsFrameLock = false
            end)
        end
    end
end
function u8.FadeOutBackground(p58, p59) --[[Anonymous function at line 306]]
    --[[
    Upvalues:
        [1] = u7
    --]]
    for _, v60 in pairs(p58.ChannelTabs) do
        v60:FadeOutBackground(p59)
    end
    p58.AnimParams.Background_TargetTransparency = 1
    p58.AnimParams.Background_NormalizedExptValue = u7:NormalizedDefaultExptValueInSeconds(p59)
end
function u8.FadeInBackground(p61, p62) --[[Anonymous function at line 315]]
    --[[
    Upvalues:
        [1] = u7
    --]]
    for _, v63 in pairs(p61.ChannelTabs) do
        v63:FadeInBackground(p62)
    end
    p61.AnimParams.Background_TargetTransparency = 0.6
    p61.AnimParams.Background_NormalizedExptValue = u7:NormalizedDefaultExptValueInSeconds(p62)
end
function u8.FadeOutText(p64, p65) --[[Anonymous function at line 324]]
    for _, v66 in pairs(p64.ChannelTabs) do
        v66:FadeOutText(p65)
    end
end
function u8.FadeInText(p67, p68) --[[Anonymous function at line 330]]
    for _, v69 in pairs(p67.ChannelTabs) do
        v69:FadeInText(p68)
    end
end
function u8.AnimGuiObjects(p70) --[[Anonymous function at line 336]]
    p70.GuiObjects.PageLeftButton.ImageTransparency = p70.AnimParams.Background_CurrentTransparency
    p70.GuiObjects.PageRightButton.ImageTransparency = p70.AnimParams.Background_CurrentTransparency
    p70.GuiObjects.PageLeftButtonArrow.ImageTransparency = p70.AnimParams.Background_CurrentTransparency
    p70.GuiObjects.PageRightButtonArrow.ImageTransparency = p70.AnimParams.Background_CurrentTransparency
end
function u8.InitializeAnimParams(p71) --[[Anonymous function at line 343]]
    --[[
    Upvalues:
        [1] = u7
    --]]
    p71.AnimParams.Background_TargetTransparency = 0.6
    p71.AnimParams.Background_CurrentTransparency = 0.6
    p71.AnimParams.Background_NormalizedExptValue = u7:NormalizedDefaultExptValueInSeconds(0)
end
function u8.Update(p72, p73) --[[Anonymous function at line 349]]
    --[[
    Upvalues:
        [1] = u7
    --]]
    for _, v74 in pairs(p72.ChannelTabs) do
        v74:Update(p73)
    end
    p72.AnimParams.Background_CurrentTransparency = u7:Expt(p72.AnimParams.Background_CurrentTransparency, p72.AnimParams.Background_TargetTransparency, p72.AnimParams.Background_NormalizedExptValue, p73)
    p72:AnimGuiObjects()
end
function u8.WaitUntilParentedCorrectly(p75) --[[Anonymous function at line 365]]
    while not p75.GuiObject:IsDescendantOf(game:GetService("Players").LocalPlayer) do
        p75.GuiObject.AncestryChanged:wait()
    end
end
function v1.new() --[[Anonymous function at line 374]]
    --[[
    Upvalues:
        [1] = u8
        [2] = u6
    --]]
    local v76 = u8
    local u77 = setmetatable({}, v76)
    u77.GuiObject = nil
    u77.GuiObjects = {}
    u77.ChannelTabs = {}
    u77.NumTabs = 0
    u77.CurPageNum = 0
    u77.ScrollChannelsFrameLock = false
    u77.AnimParams = {}
    u77:InitializeAnimParams()
    u6.SettingsChanged:connect(function(p78, p79) --[[Anonymous function at line 390]]
        --[[
        Upvalues:
            [1] = u77
        --]]
        if p78 == "ChatChannelsTabTextSize" then
            u77:ResizeChannelTabText(p79)
        end
    end)
    return u77
end
return v1]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ChannelsBar]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="355"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local u1 = game:GetService("UserInputService")
local u2 = game:GetService("RunService")
local v3 = game:GetService("Players")
local u4 = game:GetService("TextService")
local u5 = v3.LocalPlayer
local v6 = {}
while not u5 do
    v3.PlayerAdded:wait()
    u5 = v3.LocalPlayer
end
local u7 = game:GetService("Chat")
local v8 = u7:WaitForChild("ClientChatModules")
local v9 = script.Parent
local u10 = require(v8:WaitForChild("ChatSettings"))
local u11 = require(v9:WaitForChild("CurveUtil"))
local v12 = v8:WaitForChild("CommandModules")
local u13 = require(v12:WaitForChild("Whisper"))
require(v9:WaitForChild("MessageSender"))
local u14 = nil
pcall(function() --[[Anonymous function at line 34]]
    --[[
    Upvalues:
        [1] = u14
    --]]
    u14 = require(game:GetService("Chat").ClientChatModules.ChatLocalization)
end)
u14 = u14 == nil and {
    ["Get"] = function(_, _, p15) --[[Function name: Get, line 35]]
        return p15
    end
} or u14
local u16 = {}
u16.__index = u16
function u16.CreateGuiObjects(p17, p18) --[[Anonymous function at line 42]]
    --[[
    Upvalues:
        [1] = u10
    --]]
    p17.ChatBarParentFrame = p18
    local v19 = Instance.new("Frame")
    v19.Selectable = false
    v19.Size = UDim2.new(1, 0, 1, 0)
    v19.BackgroundTransparency = 0.6
    v19.BorderSizePixel = 0
    v19.BackgroundColor3 = u10.ChatBarBackGroundColor
    v19.Parent = p18
    local v20 = Instance.new("Frame")
    v20.Selectable = false
    v20.Name = "BoxFrame"
    v20.BackgroundTransparency = 0.6
    v20.BorderSizePixel = 0
    v20.BackgroundColor3 = u10.ChatBarBoxColor
    v20.Size = UDim2.new(1, -14, 1, -14)
    v20.Position = UDim2.new(0, 7, 0, 7)
    v20.Parent = v19
    local v21 = Instance.new("Frame")
    v21.BackgroundTransparency = 1
    v21.Size = UDim2.new(1, -10, 1, -10)
    v21.Position = UDim2.new(0, 5, 0, 5)
    v21.Parent = v20
    local v22 = Instance.new("TextBox")
    v22.Selectable = u10.GamepadNavigationEnabled
    v22.Name = "ChatBar"
    v22.BackgroundTransparency = 1
    v22.Size = UDim2.new(1, 0, 1, 0)
    v22.Position = UDim2.new(0, 0, 0, 0)
    v22.TextSize = u10.ChatBarTextSize
    v22.Font = u10.ChatBarFont
    v22.TextColor3 = u10.ChatBarTextColor
    v22.TextTransparency = 0.4
    v22.TextStrokeTransparency = 1
    v22.ClearTextOnFocus = false
    v22.TextXAlignment = Enum.TextXAlignment.Left
    v22.TextYAlignment = Enum.TextYAlignment.Top
    v22.TextWrapped = true
    v22.Text = ""
    v22.Parent = v21
    local v23 = Instance.new("TextButton")
    v23.Selectable = false
    v23.Name = "MessageMode"
    v23.BackgroundTransparency = 1
    v23.Position = UDim2.new(0, 0, 0, 0)
    v23.TextSize = u10.ChatBarTextSize
    v23.Font = u10.ChatBarFont
    v23.TextXAlignment = Enum.TextXAlignment.Left
    v23.TextWrapped = true
    v23.Text = ""
    v23.Size = UDim2.new(0, 0, 0, 0)
    v23.TextYAlignment = Enum.TextYAlignment.Center
    v23.TextColor3 = p17:GetDefaultChannelNameColor()
    v23.Visible = true
    v23.Parent = v21
    local v24 = Instance.new("TextLabel")
    v24.Selectable = false
    v24.TextWrapped = true
    v24.BackgroundTransparency = 1
    v24.Size = v22.Size
    v24.Position = v22.Position
    v24.TextSize = v22.TextSize
    v24.Font = v22.Font
    v24.TextColor3 = v22.TextColor3
    v24.TextTransparency = v22.TextTransparency
    v24.TextStrokeTransparency = v22.TextStrokeTransparency
    v24.TextXAlignment = v22.TextXAlignment
    v24.TextYAlignment = v22.TextYAlignment
    v24.Text = "..."
    v24.Parent = v21
    p17.GuiObject = v19
    p17.TextBox = v22
    p17.TextLabel = v24
    p17.GuiObjects.BaseFrame = v19
    p17.GuiObjects.TextBoxFrame = v20
    p17.GuiObjects.TextBox = v22
    p17.GuiObjects.TextLabel = v24
    p17.GuiObjects.MessageModeTextButton = v23
    p17:AnimGuiObjects()
    p17:SetUpTextBoxEvents(v22, v24, v23)
    if p17.UserHasChatOff then
        p17:DoLockChatBar()
    end
    p17.eGuiObjectsChanged:Fire()
end
function u16.DoLockChatBar(u25) --[[Anonymous function at line 141]]
    --[[
    Upvalues:
        [1] = u5
        [2] = u14
    --]]
    if u25.TextLabel then
        if u5.UserId > 0 then
            u25.TextLabel.Text = u14:Get("GameChat_ChatMessageValidator_SettingsError", "To chat in game, turn on chat in your Privacy Settings.")
        else
            u25.TextLabel.Text = u14:Get("GameChat_SwallowGuestChat_Message", "Sign up to chat in game.")
        end
        u25:CalculateSize()
    end
    if u25.TextBox then
        u25.TextBox.Active = false
        u25.TextBox.Focused:connect(function() --[[Anonymous function at line 158]]
            --[[
            Upvalues:
                [1] = u25
            --]]
            u25.TextBox:ReleaseFocus()
        end)
    end
end
function u16.SetUpTextBoxEvents(u26, u27, u28, u29) --[[Anonymous function at line 164]]
    --[[
    Upvalues:
        [1] = u1
        [2] = u10
    --]]
    for v30, v31 in pairs(u26.TextBoxConnections) do
        v31:disconnect()
        u26.TextBoxConnections[v30] = nil
    end
    u26.TextBoxConnections.UserInputBegan = u1.InputBegan:connect(function(p32, _) --[[Anonymous function at line 172]]
        --[[
        Upvalues:
            [1] = u26
            [2] = u27
            [3] = u10
        --]]
        if p32.KeyCode == Enum.KeyCode.Backspace and (u26:IsFocused() and u27.Text == "") then
            u26:SetChannelTarget(u10.GeneralChannelName)
        end
    end)
    u26.TextBoxConnections.TextBoxChanged = u27.Changed:connect(function(p33) --[[Anonymous function at line 180]]
        --[[
        Upvalues:
            [1] = u26
            [2] = u27
            [3] = u10
        --]]
        if p33 == "AbsoluteSize" then
            u26:CalculateSize()
            return
        elseif p33 == "Text" then
            u26:CalculateSize()
            if utf8.len(utf8.nfcnormalize(u27.Text)) > u10.MaximumMessageLength then
                u27.Text = u26.PreviousText
            else
                u26.PreviousText = u27.Text
            end
            if u26.InCustomState then
                u26.CustomState:TextUpdated()
            else
                local v34 = u26.CommandProcessor:ProcessInProgressChatMessage(u27.Text, u26.ChatWindow, u26)
                if v34 then
                    u26.InCustomState = true
                    u26.CustomState = v34
                    return
                end
            end
        end
    end)
    u26.TextBoxConnections.MessageModeClick = u29.MouseButton1Click:connect(function() --[[Anonymous function at line 217]]
        --[[
        Upvalues:
            [1] = u29
            [2] = u26
            [3] = u10
        --]]
        if u29.Text ~= "" then
            u26:SetChannelTarget(u10.GeneralChannelName)
        end
    end)
    u26.TextBoxConnections.TextBoxFocused = u27.Focused:connect(function() --[[Anonymous function at line 223]]
        --[[
        Upvalues:
            [1] = u26
            [2] = u28
        --]]
        if not u26.UserHasChatOff then
            u26:CalculateSize()
            u28.Visible = false
        end
    end)
    u26.TextBoxConnections.TextBoxFocusLost = u27.FocusLost:connect(function(_, p35) --[[Anonymous function at line 230]]
        --[[
        Upvalues:
            [1] = u26
            [2] = u27
            [3] = u28
        --]]
        u26:CalculateSize()
        if p35 and p35.KeyCode == Enum.KeyCode.Escape then
            u27.Text = ""
        end
        if u27.Text == "" then
            u28.Visible = true
        else
            u28.Visible = false
        end
    end)
end
function u16.GetTextBox(p36) --[[Anonymous function at line 239]]
    return p36.TextBox
end
function u16.GetMessageModeTextButton(p37) --[[Anonymous function at line 243]]
    return p37.GuiObjects.MessageModeTextButton
end
function u16.GetMessageModeTextLabel(p38) --[[Anonymous function at line 249]]
    return p38:GetMessageModeTextButton()
end
function u16.IsFocused(p39) --[[Anonymous function at line 253]]
    if p39.UserHasChatOff then
        return false
    else
        return p39:GetTextBox():IsFocused()
    end
end
function u16.GetVisible(p40) --[[Anonymous function at line 261]]
    return p40.GuiObject.Visible
end
function u16.CaptureFocus(p41) --[[Anonymous function at line 265]]
    if not p41.UserHasChatOff then
        p41:GetTextBox():CaptureFocus()
    end
end
function u16.ReleaseFocus(p42, p43) --[[Anonymous function at line 271]]
    p42:GetTextBox():ReleaseFocus(p43)
end
function u16.ResetText(p44) --[[Anonymous function at line 275]]
    p44:GetTextBox().Text = ""
end
function u16.SetText(p45, p46) --[[Anonymous function at line 279]]
    p45:GetTextBox().Text = p46
end
function u16.GetEnabled(p47) --[[Anonymous function at line 283]]
    return p47.GuiObject.Visible
end
function u16.SetEnabled(p48, p49) --[[Anonymous function at line 287]]
    if p48.UserHasChatOff then
        p48.GuiObject.Visible = true
    else
        p48.GuiObject.Visible = p49
    end
end
function u16.SetTextLabelText(p50, p51) --[[Anonymous function at line 297]]
    if not p50.UserHasChatOff then
        p50.TextLabel.Text = p51
    end
end
function u16.SetTextBoxText(p52, p53) --[[Anonymous function at line 303]]
    p52.TextBox.Text = p53
end
function u16.GetTextBoxText(p54) --[[Anonymous function at line 307]]
    return p54.TextBox.Text
end
function u16.ResetSize(p55) --[[Anonymous function at line 311]]
    p55.TargetYSize = 0
    p55:TweenToTargetYSize()
end
function u16.CalculateSize(p56) --[[Anonymous function at line 325]]
    --[[
    Upvalues:
        [1] = u4
    --]]
    if not p56.CalculatingSizeLock then
        p56.CalculatingSizeLock = true
        local v57, v58
        if p56:IsFocused() or p56.TextBox.Text ~= "" then
            v57 = p56.TextBox.TextSize
            local v59 = p56.TextBox
            v58 = u4:GetTextSize(v59.Text, v59.TextSize, v59.Font, Vector2.new(v59.AbsoluteSize.X, 10000)).Y
        else
            v57 = p56.TextLabel.TextSize
            local v60 = p56.TextLabel
            v58 = u4:GetTextSize(v60.Text, v60.TextSize, v60.Font, Vector2.new(v60.AbsoluteSize.X, 10000)).Y
        end
        local v61 = v58 - v57
        if p56.TargetYSize ~= v61 then
            p56.TargetYSize = v61
            p56:TweenToTargetYSize()
        end
        p56.CalculatingSizeLock = false
    end
end
function u16.TweenToTargetYSize(u62) --[[Anonymous function at line 351]]
    local u63 = UDim2.new(1, 0, 1, u62.TargetYSize)
    local v64 = u62.GuiObject.Size
    local v65 = u62.GuiObject.AbsoluteSize.Y
    u62.GuiObject.Size = u63
    local v66 = u62.GuiObject.AbsoluteSize.Y
    u62.GuiObject.Size = v64
    local v67 = v66 - v65
    local v68 = math.abs(v67) * (1 / u62.TweenPixelsPerSecond)
    local u69 = math.min(1, v68)
    if not pcall(function() --[[Anonymous function at line 363]]
        --[[
        Upvalues:
            [1] = u62
            [2] = u63
            [3] = u69
        --]]
        u62.GuiObject:TweenSize(u63, Enum.EasingDirection.Out, Enum.EasingStyle.Quad, u69, true)
    end) then
        u62.GuiObject.Size = u63
    end
end
function u16.SetTextSize(p70, p71) --[[Anonymous function at line 369]]
    if not p70:IsInCustomState() then
        if p70.TextBox then
            p70.TextBox.TextSize = p71
        end
        if p70.TextLabel then
            p70.TextLabel.TextSize = p71
        end
    end
end
function u16.GetDefaultChannelNameColor(_) --[[Anonymous function at line 380]]
    --[[
    Upvalues:
        [1] = u10
    --]]
    if u10.DefaultChannelNameColor then
        return u10.DefaultChannelNameColor
    else
        return Color3.fromRGB(35, 76, 142)
    end
end
function u16.SetChannelTarget(p72, p73) --[[Anonymous function at line 387]]
    --[[
    Upvalues:
        [1] = u10
        [2] = u14
    --]]
    local v74 = p72.GuiObjects.MessageModeTextButton
    local v75 = p72.TextBox
    local v76 = p72.TextLabel
    p72.TargetChannel = p73
    if not p72:IsInCustomState() then
        if p73 ~= u10.GeneralChannelName then
            v74.Size = UDim2.new(0, 1000, 1, 0)
            local v77
            if u14.tryLocalize then
                v77 = u14:tryLocalize(p73)
            else
                v77 = p73
            end
            v74.Text = string.format("[%s] ", v77)
            local v78 = p72:GetChannelNameColor(p73)
            if v78 then
                v74.TextColor3 = v78
            else
                v74.TextColor3 = p72:GetDefaultChannelNameColor()
            end
            local v79 = v74.TextBounds.X
            v74.Size = UDim2.new(0, v79, 1, 0)
            v75.Size = UDim2.new(1, -v79, 1, 0)
            v75.Position = UDim2.new(0, v79, 0, 0)
            v76.Size = UDim2.new(1, -v79, 1, 0)
            v76.Position = UDim2.new(0, v79, 0, 0)
            return
        end
        v74.Text = ""
        v74.Size = UDim2.new(0, 0, 0, 0)
        v75.Size = UDim2.new(1, 0, 1, 0)
        v75.Position = UDim2.new(0, 0, 0, 0)
        v76.Size = UDim2.new(1, 0, 1, 0)
        v76.Position = UDim2.new(0, 0, 0, 0)
    end
end
function u16.IsInCustomState(p80) --[[Anonymous function at line 427]]
    return p80.InCustomState
end
function u16.ResetCustomState(p81) --[[Anonymous function at line 431]]
    --[[
    Upvalues:
        [1] = u14
    --]]
    if p81.InCustomState then
        p81.CustomState:Destroy()
        p81.CustomState = nil
        p81.InCustomState = false
        p81.ChatBarParentFrame:ClearAllChildren()
        p81:CreateGuiObjects(p81.ChatBarParentFrame)
        p81:SetTextLabelText(u14:Get("GameChat_ChatMain_ChatBarText", "To chat click here or press \"/\" key"))
    end
end
function u16.EnterWhisperState(p82, p83) --[[Anonymous function at line 448]]
    --[[
    Upvalues:
        [1] = u13
        [2] = u10
    --]]
    p82:ResetCustomState()
    if u13.CustomStateCreator then
        p82.CustomState = u13.CustomStateCreator(p83, p82.ChatWindow, p82, u10)
        p82.InCustomState = true
    else
        local v84
        if u10.PlayerDisplayNamesEnabled then
            v84 = p83.DisplayName
        else
            v84 = p83.Name
        end
        p82:SetText("/w " .. v84)
    end
    p82:CaptureFocus()
end
function u16.GetCustomMessage(p85) --[[Anonymous function at line 472]]
    if p85.InCustomState then
        return p85.CustomState:GetMessage()
    else
        return nil
    end
end
function u16.CustomStateProcessCompletedMessage(p86, _) --[[Anonymous function at line 479]]
    if p86.InCustomState then
        return p86.CustomState:ProcessCompletedMessage()
    else
        return false
    end
end
function u16.FadeOutBackground(p87, p88) --[[Anonymous function at line 486]]
    --[[
    Upvalues:
        [1] = u11
    --]]
    p87.AnimParams.Background_TargetTransparency = 1
    p87.AnimParams.Background_NormalizedExptValue = u11:NormalizedDefaultExptValueInSeconds(p88)
    p87:FadeOutText(p88)
end
function u16.FadeInBackground(p89, p90) --[[Anonymous function at line 492]]
    --[[
    Upvalues:
        [1] = u11
    --]]
    p89.AnimParams.Background_TargetTransparency = 0.6
    p89.AnimParams.Background_NormalizedExptValue = u11:NormalizedDefaultExptValueInSeconds(p90)
    p89:FadeInText(p90)
end
function u16.FadeOutText(p91, p92) --[[Anonymous function at line 498]]
    --[[
    Upvalues:
        [1] = u11
    --]]
    p91.AnimParams.Text_TargetTransparency = 1
    p91.AnimParams.Text_NormalizedExptValue = u11:NormalizedDefaultExptValueInSeconds(p92)
end
function u16.FadeInText(p93, p94) --[[Anonymous function at line 503]]
    --[[
    Upvalues:
        [1] = u11
    --]]
    p93.AnimParams.Text_TargetTransparency = 0.4
    p93.AnimParams.Text_NormalizedExptValue = u11:NormalizedDefaultExptValueInSeconds(p94)
end
function u16.AnimGuiObjects(p95) --[[Anonymous function at line 508]]
    p95.GuiObject.BackgroundTransparency = p95.AnimParams.Background_CurrentTransparency
    p95.GuiObjects.TextBoxFrame.BackgroundTransparency = p95.AnimParams.Background_CurrentTransparency
    p95.GuiObjects.TextLabel.TextTransparency = p95.AnimParams.Text_CurrentTransparency
    p95.GuiObjects.TextBox.TextTransparency = p95.AnimParams.Text_CurrentTransparency
    p95.GuiObjects.MessageModeTextButton.TextTransparency = p95.AnimParams.Text_CurrentTransparency
end
function u16.InitializeAnimParams(p96) --[[Anonymous function at line 517]]
    p96.AnimParams.Text_TargetTransparency = 0.4
    p96.AnimParams.Text_CurrentTransparency = 0.4
    p96.AnimParams.Text_NormalizedExptValue = 1
    p96.AnimParams.Background_TargetTransparency = 0.6
    p96.AnimParams.Background_CurrentTransparency = 0.6
    p96.AnimParams.Background_NormalizedExptValue = 1
end
function u16.Update(p97, p98) --[[Anonymous function at line 527]]
    --[[
    Upvalues:
        [1] = u11
    --]]
    p97.AnimParams.Text_CurrentTransparency = u11:Expt(p97.AnimParams.Text_CurrentTransparency, p97.AnimParams.Text_TargetTransparency, p97.AnimParams.Text_NormalizedExptValue, p98)
    p97.AnimParams.Background_CurrentTransparency = u11:Expt(p97.AnimParams.Background_CurrentTransparency, p97.AnimParams.Background_TargetTransparency, p97.AnimParams.Background_NormalizedExptValue, p98)
    p97:AnimGuiObjects()
end
function u16.SetChannelNameColor(p99, p100, p101) --[[Anonymous function at line 544]]
    p99.ChannelNameColors[p100] = p101
    if p99.GuiObjects.MessageModeTextButton.Text == p100 then
        p99.GuiObjects.MessageModeTextButton.TextColor3 = p101
    end
end
function u16.GetChannelNameColor(p102, p103) --[[Anonymous function at line 551]]
    return p102.ChannelNameColors[p103]
end
function v6.new(p104, p105) --[[Anonymous function at line 558]]
    --[[
    Upvalues:
        [1] = u16
        [2] = u10
        [3] = u7
        [4] = u5
        [5] = u2
    --]]
    local v106 = u16
    local u107 = setmetatable({}, v106)
    u107.GuiObject = nil
    u107.ChatBarParentFrame = nil
    u107.TextBox = nil
    u107.TextLabel = nil
    u107.GuiObjects = {}
    u107.eGuiObjectsChanged = Instance.new("BindableEvent")
    u107.GuiObjectsChanged = u107.eGuiObjectsChanged.Event
    u107.TextBoxConnections = {}
    u107.PreviousText = ""
    u107.InCustomState = false
    u107.CustomState = nil
    u107.TargetChannel = nil
    u107.CommandProcessor = p104
    u107.ChatWindow = p105
    u107.TweenPixelsPerSecond = 500
    u107.TargetYSize = 0
    u107.AnimParams = {}
    u107.CalculatingSizeLock = false
    u107.ChannelNameColors = {}
    u107.UserHasChatOff = false
    u107:InitializeAnimParams()
    u10.SettingsChanged:connect(function(p108, p109) --[[Anonymous function at line 590]]
        --[[
        Upvalues:
            [1] = u107
        --]]
        if p108 == "ChatBarTextSize" then
            u107:SetTextSize(p109)
        end
    end)
    coroutine.wrap(function() --[[Anonymous function at line 596]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u5
            [3] = u2
            [4] = u107
        --]]
        local v110, v111 = pcall(function() --[[Anonymous function at line 597]]
            --[[
            Upvalues:
                [1] = u7
                [2] = u5
            --]]
            return u7:CanUserChatAsync(u5.UserId)
        end)
        if v110 then
            v110 = u2:IsStudio() or v111
        end
        if v110 == false then
            u107.UserHasChatOff = true
            u107:DoLockChatBar()
        end
    end)()
    return u107
end
return v6]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ChatBar]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="356"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1, v2 = pcall(function() --[[Anonymous function at line 7]]
    return UserSettings():IsUserFeatureEnabled("UserFlagRemoveMessageFromMessageLog")
end)
local u3 = v1 and v2
local v4, v5 = pcall(function() --[[Anonymous function at line 15]]
    return UserSettings():IsUserFeatureEnabled("UserIsChatTranslationEnabled2")
end)
local u6 = v4 and v5
local v7 = {}
local v8 = game:GetService("Chat"):WaitForChild("ClientChatModules")
local v9 = script.Parent
local u10 = require(v8:WaitForChild("ChatSettings"))
local u11
if u6 then
    u11 = v9:FindFirstChild("ChatTranslationEnabled")
    if u11 == nil then
        local u12 = nil
        u12 = v9.ChildAdded:Connect(function(p13) --[[Anonymous function at line 35]]
            --[[
            Upvalues:
                [1] = u11
                [2] = u12
            --]]
            if p13.Name == "ChatTranslationEnabled" then
                u11 = p13
                u12:Disconnect()
            end
        end)
    end
else
    u11 = nil
end
local u14 = {}
u14.__index = u14
function u14.Destroy(p15) --[[Anonymous function at line 50]]
    p15.Destroyed = true
end
function u14.SetActive(p16, p17) --[[Anonymous function at line 54]]
    if p17 ~= p16.Active then
        if p17 == false then
            p16.MessageLogDisplay:Clear()
        else
            p16.MessageLogDisplay:SetCurrentChannelName(p16.Name)
            for v18 = 1, #p16.MessageLog do
                p16.MessageLogDisplay:AddMessage(p16.MessageLog[v18])
            end
        end
        p16.Active = p17
    end
end
function u14.UpdateMessageFiltered(p19, p20) --[[Anonymous function at line 69]]
    --[[
    Upvalues:
        [1] = u6
        [2] = u11
        [3] = u3
    --]]
    local v21 = p19.MessageLog
    local v22 = 1
    local v23 = nil
    while true do
        if v22 > #v21 then
            v24 = v23
            break
        end
        local v24 = v21[v22]
        if v24.ID == p20.ID then
            break
        end
        v22 = v22 + 1
    end
    if v24 then
        v24.Message = p20.Message
        v24.IsFiltered = true
        if u6 and (u11 ~= nil and u11.Value) then
            v24.TranslatedMessage = p20.TranslatedMessage
            v24.ShowTranslated = true
        end
        if p19.Active then
            if u3 and v24.Message == "" then
                table.remove(p19.MessageLog, v22)
            end
            p19.MessageLogDisplay:UpdateMessageFiltered(v24)
            return
        end
    else
        p19:AddMessageToChannelByTimeStamp(p20)
    end
end
function u14.AddMessageToChannel(p25, p26) --[[Anonymous function at line 105]]
    --[[
    Upvalues:
        [1] = u10
    --]]
    local v27 = p25.MessageLog
    table.insert(v27, p26)
    if p25.Active then
        p25.MessageLogDisplay:AddMessage(p26)
    end
    if #p25.MessageLog > u10.MessageHistoryLengthPerChannel then
        p25:RemoveLastMessageFromChannel()
    end
end
function u14.InternalAddMessageAtTimeStamp(p28, p29) --[[Anonymous function at line 115]]
    for v30 = 1, #p28.MessageLog do
        if p29.Time < p28.MessageLog[v30].Time then
            local v31 = p28.MessageLog
            table.insert(v31, v30, p29)
            return
        end
    end
    local v32 = p28.MessageLog
    table.insert(v32, p29)
end
function u14.AddMessagesToChannelByTimeStamp(p33, p34, p35) --[[Anonymous function at line 125]]
    --[[
    Upvalues:
        [1] = u10
    --]]
    for v36 = p35, #p34 do
        p33:InternalAddMessageAtTimeStamp(p34[v36])
    end
    while #p33.MessageLog > u10.MessageHistoryLengthPerChannel do
        table.remove(p33.MessageLog, 1)
    end
    if p33.Active then
        p33.MessageLogDisplay:Clear()
        for v37 = 1, #p33.MessageLog do
            p33.MessageLogDisplay:AddMessage(p33.MessageLog[v37])
        end
    end
end
function u14.AddMessageToChannelByTimeStamp(p38, p39) --[[Anonymous function at line 140]]
    --[[
    Upvalues:
        [1] = u10
    --]]
    if #p38.MessageLog >= 1 then
        if p38.MessageLog[1].Time > p39.Time then
            return
        elseif p39.Time >= p38.MessageLog[#p38.MessageLog].Time then
            p38:AddMessageToChannel(p39)
        else
            for v40 = 1, #p38.MessageLog do
                if p39.Time < p38.MessageLog[v40].Time then
                    local v41 = p38.MessageLog
                    table.insert(v41, v40, p39)
                    if #p38.MessageLog > u10.MessageHistoryLengthPerChannel then
                        p38:RemoveLastMessageFromChannel()
                    end
                    if p38.Active then
                        p38.MessageLogDisplay:AddMessageAtIndex(p39, v40)
                    end
                    return
                end
            end
        end
    else
        p38:AddMessageToChannel(p39)
        return
    end
end
function u14.RemoveLastMessageFromChannel(p42) --[[Anonymous function at line 170]]
    table.remove(p42.MessageLog, 1)
    if p42.Active then
        p42.MessageLogDisplay:RemoveLastMessage()
    end
end
function u14.ClearMessageLog(p43) --[[Anonymous function at line 178]]
    p43.MessageLog = {}
    if p43.Active then
        p43.MessageLogDisplay:Clear()
    end
end
function u14.RegisterChannelTab(p44, p45) --[[Anonymous function at line 186]]
    p44.ChannelTab = p45
end
function v7.new(p46, p47) --[[Anonymous function at line 193]]
    --[[
    Upvalues:
        [1] = u14
    --]]
    local v48 = u14
    local v49 = setmetatable({}, v48)
    v49.Destroyed = false
    v49.Active = false
    v49.MessageLog = {}
    v49.MessageLogDisplay = p47
    v49.ChannelTab = nil
    v49.Name = p46
    return v49
end
return v7]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ChatChannel]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="357"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1, v2 = pcall(function() --[[Anonymous function at line 7]]
    return UserSettings():IsUserFeatureEnabled("UserRemoveMessageOnTextFilterFailures")
end)
local u3 = v1 and v2
local v4, v5 = pcall(function() --[[Anonymous function at line 15]]
    return UserSettings():IsUserFeatureEnabled("UserIsChatTranslationEnabled2")
end)
local u6 = v4 and v5
local u7 = {
    ["ScrollBarThickness"] = 4
}
local v8 = game:GetService("Chat"):WaitForChild("ClientChatModules")
local v9 = script.Parent
local v10 = require(v9:WaitForChild("MessageLabelCreator"))
local u11 = require(v9:WaitForChild("CurveUtil"))
local u12 = require(v8:WaitForChild("ChatSettings"))
local u13 = v10.new()
local u14 = {}
u14.__index = u14
local function u18() --[[Anonymous function at line 42]]
    --[[
    Upvalues:
        [1] = u12
        [2] = u7
    --]]
    local v15 = Instance.new("Frame")
    v15.Selectable = false
    v15.Size = UDim2.new(1, 0, 1, 0)
    v15.BackgroundTransparency = 1
    local v16 = Instance.new("ScrollingFrame")
    v16.Selectable = u12.GamepadNavigationEnabled
    v16.Name = "Scroller"
    v16.BackgroundTransparency = 1
    v16.BorderSizePixel = 0
    v16.Position = UDim2.new(0, 0, 0, 3)
    v16.Size = UDim2.new(1, -4, 1, -6)
    v16.CanvasSize = UDim2.new(0, 0, 0, 0)
    v16.ScrollBarThickness = u7.ScrollBarThickness
    v16.Active = true
    v16.Parent = v15
    local v17 = Instance.new("UIListLayout")
    v17.SortOrder = Enum.SortOrder.LayoutOrder
    v17.Parent = v16
    return v15, v16, v17
end
function u14.Destroy(p19) --[[Anonymous function at line 67]]
    p19.GuiObject:Destroy()
    p19.Destroyed = true
end
function u14.SetActive(p20, p21) --[[Anonymous function at line 72]]
    p20.GuiObject.Visible = p21
end
function u14.UpdateMessageFiltered(p22, p23) --[[Anonymous function at line 76]]
    --[[
    Upvalues:
        [1] = u3
    --]]
    local v24 = p22.MessageObjectLog
    local v25 = 1
    local v26 = nil
    while true do
        if v25 > #v24 then
            v27 = v26
            break
        end
        local v27 = v24[v25]
        if v27.ID == p23.ID then
            break
        end
        v25 = v25 + 1
    end
    if v27 then
        if u3 then
            if p23.Message == "" then
                p22:RemoveMessageAtIndex(v25)
            else
                v27.UpdateTextFunction(p23)
                p22:PositionMessageLabelInWindow(v27, v25)
            end
        end
        v27.UpdateTextFunction(p23)
        p22:PositionMessageLabelInWindow(v27, v25)
    end
end
function u14.RefreshMessagePlacement(p28, p29) --[[Anonymous function at line 107]]
    local v30 = p28.MessageObjectLog
    local v31 = 1
    local v32 = nil
    while true do
        if v31 > #v30 then
            v33 = v32
            break
        end
        local v33 = v30[v31]
        if v33.ID == p29.ID then
            break
        end
        v31 = v31 + 1
    end
    if v33 then
        p28:PositionMessageLabelInWindow(v33, v31)
    end
end
function u14.AddMessage(u34, u35) --[[Anonymous function at line 129]]
    --[[
    Upvalues:
        [1] = u6
        [2] = u13
    --]]
    u34:WaitUntilParentedCorrectly()
    local v36
    if u6 then
        v36 = u13:CreateMessageLabel_Chat(u35, u34.CurrentChannelName, function() --[[Anonymous function at line 134]]
            --[[
            Upvalues:
                [1] = u34
                [2] = u35
            --]]
            u34:RefreshMessagePlacement(u35)
        end)
    else
        v36 = u13:CreateMessageLabel(u35, u34.CurrentChannelName)
    end
    if v36 ~= nil then
        local v37 = u34.MessageObjectLog
        table.insert(v37, v36)
        u34:PositionMessageLabelInWindow(v36, #u34.MessageObjectLog)
    end
end
function u14.RemoveMessageAtIndex(p38, p39) --[[Anonymous function at line 151]]
    p38:WaitUntilParentedCorrectly()
    local v40 = p38.MessageObjectLog[p39]
    if v40 then
        v40:Destroy()
        table.remove(p38.MessageObjectLog, p39)
    end
end
function u14.AddMessageAtIndex(u41, u42, p43) --[[Anonymous function at line 162]]
    --[[
    Upvalues:
        [1] = u6
        [2] = u13
    --]]
    local v44
    if u6 then
        v44 = u13:CreateMessageLabel_Chat(u42, u41.CurrentChannelName, function() --[[Anonymous function at line 165]]
            --[[
            Upvalues:
                [1] = u41
                [2] = u42
            --]]
            u41:RefreshMessagePlacement(u42)
        end)
    else
        v44 = u13:CreateMessageLabel(u42, u41.CurrentChannelName)
    end
    if v44 ~= nil then
        local v45 = u41.MessageObjectLog
        table.insert(v45, p43, v44)
        u41:PositionMessageLabelInWindow(v44, p43)
    end
end
function u14.RemoveLastMessage(p46) --[[Anonymous function at line 183]]
    p46:WaitUntilParentedCorrectly()
    p46.MessageObjectLog[1]:Destroy()
    table.remove(p46.MessageObjectLog, 1)
end
function u14.IsScrolledDown(p47) --[[Anonymous function at line 192]]
    local v48 = p47.Scroller.CanvasSize.Y.Offset
    local v49 = p47.Scroller.AbsoluteWindowSize.Y
    local v50 = p47.Scroller.CanvasPosition.Y
    return v48 < v49 and true or v48 - v50 <= v49 + 5
end
function u14.UpdateMessageTextHeight(p51, p52) --[[Anonymous function at line 201]]
    local v53 = p52.BaseFrame
    for v54 = 1, 10 do
        if p52.BaseMessage.TextFits then
            break
        end
        local v55 = p51.Scroller.AbsoluteSize.X - v54
        v53.Size = UDim2.new(1, 0, 0, p52.GetHeightFunction(v55))
    end
end
function u14.PositionMessageLabelInWindow(p56, p57, p58) --[[Anonymous function at line 213]]
    p56:WaitUntilParentedCorrectly()
    local v59 = p56:IsScrolledDown()
    local v60 = p57.BaseFrame
    local v61
    if p56.MessageObjectLog[p58 - 1] then
        if p58 == #p56.MessageObjectLog then
            v61 = p56.MessageObjectLog[p58 - 1].BaseFrame.LayoutOrder + 1
        else
            v61 = p56.MessageObjectLog[p58 - 1].BaseFrame.LayoutOrder
        end
    else
        v61 = 1
    end
    v60.LayoutOrder = v61
    v60.Size = UDim2.new(1, 0, 0, p57.GetHeightFunction(p56.Scroller.AbsoluteSize.X))
    v60.Parent = p56.Scroller
    if p57.BaseMessage then
        p56:UpdateMessageTextHeight(p57)
    end
    if v59 then
        local v62 = p56.Scroller
        local v63 = Vector2.new
        local v64 = p56.Scroller.CanvasSize.Y.Offset - p56.Scroller.AbsoluteSize.Y
        v62.CanvasPosition = v63(0, (math.max(0, v64)))
    end
end
function u14.ReorderAllMessages(p65) --[[Anonymous function at line 243]]
    p65:WaitUntilParentedCorrectly()
    if p65.GuiObject.AbsoluteSize.Y < 1 then
        return
    else
        local v66 = p65.Scroller.CanvasPosition
        local v67 = p65:IsScrolledDown()
        for _, v68 in pairs(p65.MessageObjectLog) do
            p65:UpdateMessageTextHeight(v68)
        end
        if v67 then
            local v69 = p65.Scroller
            local v70 = Vector2.new
            local v71 = p65.Scroller.CanvasSize.Y.Offset - p65.Scroller.AbsoluteSize.Y
            v69.CanvasPosition = v70(0, (math.max(0, v71)))
        else
            p65.Scroller.CanvasPosition = v66
        end
    end
end
function u14.Clear(p72) --[[Anonymous function at line 265]]
    for _, v73 in pairs(p72.MessageObjectLog) do
        v73:Destroy()
    end
    p72.MessageObjectLog = {}
end
function u14.SetCurrentChannelName(p74, p75) --[[Anonymous function at line 272]]
    p74.CurrentChannelName = p75
end
function u14.FadeOutBackground(_, _) --[[Anonymous function at line 276]] end
function u14.FadeInBackground(_, _) --[[Anonymous function at line 280]] end
function u14.FadeOutText(p76, p77) --[[Anonymous function at line 284]]
    --[[
    Upvalues:
        [1] = u11
    --]]
    for v78 = 1, #p76.MessageObjectLog do
        if p76.MessageObjectLog[v78].FadeOutFunction then
            p76.MessageObjectLog[v78].FadeOutFunction(p77, u11)
        end
    end
end
function u14.FadeInText(p79, p80) --[[Anonymous function at line 292]]
    --[[
    Upvalues:
        [1] = u11
    --]]
    for v81 = 1, #p79.MessageObjectLog do
        if p79.MessageObjectLog[v81].FadeInFunction then
            p79.MessageObjectLog[v81].FadeInFunction(p80, u11)
        end
    end
end
function u14.Update(p82, p83) --[[Anonymous function at line 300]]
    --[[
    Upvalues:
        [1] = u11
    --]]
    for v84 = 1, #p82.MessageObjectLog do
        if p82.MessageObjectLog[v84].UpdateAnimFunction then
            p82.MessageObjectLog[v84].UpdateAnimFunction(p83, u11)
        end
    end
end
function u14.WaitUntilParentedCorrectly(p85) --[[Anonymous function at line 309]]
    while not p85.GuiObject:IsDescendantOf(game:GetService("Players").LocalPlayer) do
        p85.GuiObject.AncestryChanged:wait()
    end
end
function u7.new() --[[Anonymous function at line 318]]
    --[[
    Upvalues:
        [1] = u14
        [2] = u18
    --]]
    local v86 = u14
    local u87 = setmetatable({}, v86)
    u87.Destroyed = false
    local v88, v89, v90 = u18()
    u87.GuiObject = v88
    u87.Scroller = v89
    u87.Layout = v90
    u87.MessageObjectLog = {}
    u87.Name = "MessageLogDisplay"
    u87.GuiObject.Name = "Frame_" .. u87.Name
    u87.CurrentChannelName = ""
    u87.GuiObject:GetPropertyChangedSignal("AbsoluteSize"):Connect(function() --[[Anonymous function at line 334]]
        --[[
        Upvalues:
            [1] = u87
        --]]
        spawn(function() --[[Anonymous function at line 335]]
            --[[
            Upvalues:
                [1] = u87
            --]]
            u87:ReorderAllMessages()
        end)
    end)
    local u91 = true
    u87.Layout:GetPropertyChangedSignal("AbsoluteContentSize"):Connect(function() --[[Anonymous function at line 340]]
        --[[
        Upvalues:
            [1] = u87
            [2] = u91
        --]]
        local v92 = u87.Layout.AbsoluteContentSize
        u87.Scroller.CanvasSize = UDim2.new(0, 0, 0, v92.Y)
        if u91 then
            local v93 = u87.Scroller.AbsoluteWindowSize
            u87.Scroller.CanvasPosition = Vector2.new(0, v92.Y - v93.Y)
        end
    end)
    u87.Scroller:GetPropertyChangedSignal("CanvasPosition"):Connect(function() --[[Anonymous function at line 349]]
        --[[
        Upvalues:
            [1] = u91
            [2] = u87
        --]]
        u91 = u87:IsScrolledDown()
    end)
    return u87
end
return u7]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[MessageLogDisplay]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="358"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1 = {}
local u2 = game:GetService("Players")
game:GetService("Chat")
local u3 = u2.LocalPlayer:WaitForChild("PlayerGui")
local u4 = game:GetService("Chat")
local v5 = u4:WaitForChild("ClientChatModules")
local v6 = script.Parent
local u7 = require(v6:WaitForChild("ChatChannel"))
local u8 = require(v5:WaitForChild("ChatSettings"))
local u9 = require(v6:WaitForChild("CurveUtil"))
local u10 = {}
u10.__index = u10
function getClassicChatEnabled()
    --[[
    Upvalues:
        [1] = u8
        [2] = u2
    --]]
    if u8.ClassicChatEnabled == nil then
        return u2.ClassicChat
    else
        return u8.ClassicChatEnabled
    end
end
function getBubbleChatEnabled()
    --[[
    Upvalues:
        [1] = u8
        [2] = u2
    --]]
    if u8.BubbleChatEnabled == nil then
        return u2.BubbleChat
    else
        return u8.BubbleChatEnabled
    end
end
function bubbleChatOnly()
    local v11 = not getClassicChatEnabled()
    if v11 then
        v11 = getBubbleChatEnabled()
    end
    return v11
end
function mergeProps(p12, p13)
    if p12 and p13 then
        for v14, v15 in pairs(p12) do
            if p13[v14] ~= nil then
                p13[v14] = v15
            end
        end
    end
end
function u10.CreateGuiObjects(p16, p17) --[[Anonymous function at line 62]]
    --[[
    Upvalues:
        [1] = u4
        [2] = u8
        [3] = u3
    --]]
    local u18 = nil
    pcall(function() --[[Anonymous function at line 64]]
        --[[
        Upvalues:
            [1] = u18
            [2] = u4
        --]]
        u18 = u4:InvokeChatCallback(Enum.ChatCallbackType.OnCreatingChatWindow, nil)
    end)
    mergeProps(u18, u8)
    local v19 = Instance.new("Frame")
    v19.BackgroundTransparency = 1
    v19.Active = u8.WindowDraggable
    v19.Parent = p17
    v19.AutoLocalize = false
    local u20 = Instance.new("Frame")
    u20.Selectable = false
    u20.Name = "ChatBarParentFrame"
    u20.BackgroundTransparency = 1
    u20.Parent = v19
    local u21 = Instance.new("Frame")
    u21.Selectable = false
    u21.Name = "ChannelsBarParentFrame"
    u21.BackgroundTransparency = 1
    u21.Position = UDim2.new(0, 0, 0, 0)
    u21.Parent = v19
    local u22 = Instance.new("Frame")
    u22.Selectable = false
    u22.Name = "ChatChannelParentFrame"
    u22.BackgroundTransparency = 1
    u22.BackgroundColor3 = u8.BackGroundColor
    u22.BackgroundTransparency = 0.6
    u22.BorderSizePixel = 0
    u22.Parent = v19
    local u23 = Instance.new("ImageButton")
    u23.Selectable = false
    u23.Image = ""
    u23.BackgroundTransparency = 0.6
    u23.BorderSizePixel = 0
    u23.Visible = false
    u23.BackgroundColor3 = u8.BackGroundColor
    u23.Active = true
    if bubbleChatOnly() then
        u23.Position = UDim2.new(1, -u23.AbsoluteSize.X, 0, 0)
    else
        u23.Position = UDim2.new(1, -u23.AbsoluteSize.X, 1, -u23.AbsoluteSize.Y)
    end
    u23.Parent = v19
    local v24 = Instance.new("ImageLabel")
    v24.Selectable = false
    v24.Size = UDim2.new(0.8, 0, 0.8, 0)
    v24.Position = UDim2.new(0.2, 0, 0.2, 0)
    v24.BackgroundTransparency = 1
    v24.Image = "rbxassetid://261880743"
    v24.Parent = u23
    local u25 = v19
    local v26 = 3
    while v19 and not v19:IsA("ScreenGui") do
        v19 = v19.Parent
    end
    local u27 = v19.AbsoluteSize.X <= 640 and 1 or (v19.AbsoluteSize.X <= 1024 and 2 or v26)
    local u28 = false
    local function u46() --[[Anonymous function at line 145]]
        --[[
        Upvalues:
            [1] = u28
            [2] = u25
            [3] = u3
            [4] = u8
            [5] = u21
            [6] = u20
        --]]
        if u28 then
            return
        else
            u28 = true
            if u25:IsDescendantOf(u3) then
                local v29 = u25
                while v29 and not v29:IsA("ScreenGui") do
                    v29 = v29.Parent
                end
                local v30 = u8.MinimumWindowSize
                local v31 = u8.MaximumWindowSize
                local v32 = u21.AbsoluteSize.Y + u20.AbsoluteSize.Y
                local v33 = v30.X.Scale * v29.AbsoluteSize.X + v30.X.Offset
                local v34 = v30.Y.Scale * v29.AbsoluteSize.Y + v30.Y.Offset
                local v35 = math.max(v34, v32)
                local v36 = v31.X.Scale * v29.AbsoluteSize.X + v31.X.Offset
                local v37 = v31.Y.Scale * v29.AbsoluteSize.Y + v31.Y.Offset
                local v38 = u25.AbsoluteSize.X
                local v39 = u25.AbsoluteSize.Y
                if v38 < v33 then
                    local v40 = UDim2.new(0, v33 - v38, 0, 0)
                    u25.Size = u25.Size + v40
                elseif v36 < v38 then
                    local v41 = UDim2.new(0, v36 - v38, 0, 0)
                    u25.Size = u25.Size + v41
                end
                if v39 < v35 then
                    local v42 = UDim2.new(0, 0, 0, v35 - v39)
                    u25.Size = u25.Size + v42
                elseif v37 < v39 then
                    local v43 = UDim2.new(0, 0, 0, v37 - v39)
                    u25.Size = u25.Size + v43
                end
                local v44 = u25.AbsoluteSize.X / v29.AbsoluteSize.X
                local v45 = u25.AbsoluteSize.Y / v29.AbsoluteSize.Y
                u25.Size = UDim2.new(v44, 0, v45, 0)
                u28 = false
            end
        end
    end
    u25.Changed:connect(function(p47) --[[Anonymous function at line 196]]
        --[[
        Upvalues:
            [1] = u46
        --]]
        if p47 == "AbsoluteSize" then
            u46()
        end
    end)
    u23.DragBegin:connect(function(_) --[[Anonymous function at line 202]]
        --[[
        Upvalues:
            [1] = u25
        --]]
        u25.Draggable = false
    end)
    local function u50(p48) --[[Anonymous function at line 206]]
        --[[
        Upvalues:
            [1] = u8
            [2] = u25
            [3] = u23
        --]]
        if u8.WindowDraggable == false and u8.WindowResizable == false then
            return
        else
            local v49 = p48 - u25.AbsolutePosition + u23.AbsoluteSize
            u25.Size = UDim2.new(0, v49.X, 0, v49.Y)
            if bubbleChatOnly() then
                u23.Position = UDim2.new(1, -u23.AbsoluteSize.X, 0, 0)
            else
                u23.Position = UDim2.new(1, -u23.AbsoluteSize.X, 1, -u23.AbsoluteSize.Y)
            end
        end
    end
    u23.DragStopped:connect(function(_, _) --[[Anonymous function at line 219]]
        --[[
        Upvalues:
            [1] = u25
            [2] = u8
        --]]
        u25.Draggable = u8.WindowDraggable
    end)
    local u51 = false
    u23.Changed:connect(function(p52) --[[Anonymous function at line 225]]
        --[[
        Upvalues:
            [1] = u25
            [2] = u51
            [3] = u50
            [4] = u23
        --]]
        if p52 == "AbsolutePosition" and not u25.Draggable then
            if u51 then
                return
            end
            u51 = true
            u50(u23.AbsolutePosition)
            u51 = false
        end
    end)
    local u53
    if bubbleChatOnly() then
        u20.Position = UDim2.new(0, 0, 0, 0)
        u21.Visible = false
        u21.Active = false
        u22.Visible = false
        u22.Active = false
        u53 = u25
        while u25 and not u25:IsA("ScreenGui") do
            u25 = u25.Parent
        end
        local v54, v55
        if u27 == 1 then
            v54 = u8.DefaultWindowSizePhone.X.Scale
            v55 = u8.DefaultWindowSizePhone.X.Offset
        elseif u27 == 2 then
            v54 = u8.DefaultWindowSizeTablet.X.Scale
            v55 = u8.DefaultWindowSizeTablet.X.Offset
        else
            v54 = u8.DefaultWindowSizeDesktop.X.Scale
            v55 = u8.DefaultWindowSizeDesktop.X.Offset
        end
        local v56 = nil
        local v57
        if u27 == 1 then
            v57 = v56 or u8.ChatBarTextSizePhone
        else
            v57 = v56 or u8.ChatBarTextSize
        end
        local v58 = v57 + 14 + 10
        u53.Size = UDim2.new(v54, v55, 0, v58)
        u53.Position = u8.DefaultWindowPosition
    else
        u53 = u25
        while u25 and not u25:IsA("ScreenGui") do
            u25 = u25.Parent
        end
        if u27 == 1 then
            u53.Size = u8.DefaultWindowSizePhone
        elseif u27 == 2 then
            u53.Size = u8.DefaultWindowSizeTablet
        else
            u53.Size = u8.DefaultWindowSizeDesktop
        end
        u53.Position = u8.DefaultWindowPosition
    end
    if u27 == 1 then
        u8.ChatWindowTextSize = u8.ChatWindowTextSizePhone
        u8.ChatChannelsTabTextSize = u8.ChatChannelsTabTextSizePhone
        u8.ChatBarTextSize = u8.ChatBarTextSizePhone
    end
    local function u61(p59) --[[Anonymous function at line 323]]
        --[[
        Upvalues:
            [1] = u23
            [2] = u20
        --]]
        u23.Visible = p59
        u23.Draggable = p59
        local v60 = u20.Size.Y.Offset
        if p59 then
            u20.Size = UDim2.new(1, -v60 - 2, 0, v60)
            if not bubbleChatOnly() then
                u20.Position = UDim2.new(0, 0, 1, -v60)
                return
            end
        else
            u20.Size = UDim2.new(1, 0, 0, v60)
            if not bubbleChatOnly() then
                u20.Position = UDim2.new(0, 0, 1, -v60)
            end
        end
    end
    local function u69() --[[Anonymous function at line 342]]
        --[[
        Upvalues:
            [1] = u27
            [2] = u8
            [3] = u22
        --]]
        local v62 = nil
        local v63
        if u27 == 1 then
            v63 = v62 or u8.ChatChannelsTabTextSizePhone
        else
            v63 = v62 or u8.ChatChannelsTabTextSize
        end
        local v64 = v63 + 8
        local v65 = math.max(32, v64) + 2
        local v66 = nil
        local v67
        if u27 == 1 then
            v67 = v66 or u8.ChatBarTextSizePhone
        else
            v67 = v66 or u8.ChatBarTextSize
        end
        local v68 = v67 + 14 + 10
        if u8.ShowChannelsBar then
            u22.Size = UDim2.new(1, 0, 1, -(v65 + v68 + 2 + 2))
            u22.Position = UDim2.new(0, 0, 0, v65 + 2)
        else
            u22.Size = UDim2.new(1, 0, 1, -(v68 + 2 + 2))
            u22.Position = UDim2.new(0, 0, 0, 2)
        end
    end
    local function u73(p70) --[[Anonymous function at line 364]]
        --[[
        Upvalues:
            [1] = u27
            [2] = u8
            [3] = u20
            [4] = u23
            [5] = u69
            [6] = u61
        --]]
        local v71
        if u27 == 1 then
            v71 = p70 or u8.ChatBarTextSizePhone
        else
            v71 = p70 or u8.ChatBarTextSize
        end
        local v72 = v71 + 14 + 10
        u20.Size = UDim2.new(1, 0, 0, v72)
        if not bubbleChatOnly() then
            u20.Position = UDim2.new(0, 0, 1, -v72)
        end
        u23.Size = UDim2.new(0, v72, 0, v72)
        u23.Position = UDim2.new(1, -v72, 1, -v72)
        u69()
        u61(u8.WindowResizable)
    end
    local v74 = u8.ChatChannelsTabTextSize
    local v75
    if u27 == 1 then
        v75 = v74 or u8.ChatChannelsTabTextSizePhone
    else
        v75 = v74 or u8.ChatChannelsTabTextSize
    end
    local v76 = v75 + 8
    local v77 = math.max(32, v76) + 2
    u21.Size = UDim2.new(1, 0, 0, v77)
    u69()
    u73(u8.ChatBarTextSize)
    local v78 = u8.WindowDraggable
    u53.Active = v78
    u53.Draggable = v78
    u61(u8.WindowResizable)
    u21.Visible = u8.ShowChannelsBar
    u69()
    u8.SettingsChanged:connect(function(p79, p80) --[[Anonymous function at line 390]]
        --[[
        Upvalues:
            [1] = u53
            [2] = u61
            [3] = u27
            [4] = u8
            [5] = u21
            [6] = u69
            [7] = u73
        --]]
        if p79 == "WindowDraggable" then
            u53.Active = p80
            u53.Draggable = p80
            return
        elseif p79 == "WindowResizable" then
            u61(p80)
            return
        elseif p79 == "ChatChannelsTabTextSize" then
            local v81
            if u27 == 1 then
                v81 = p80 or u8.ChatChannelsTabTextSizePhone
            else
                v81 = p80 or u8.ChatChannelsTabTextSize
            end
            local v82 = v81 + 8
            local v83 = math.max(32, v82) + 2
            u21.Size = UDim2.new(1, 0, 0, v83)
            u69()
            return
        elseif p79 == "ChatBarTextSize" then
            u73(p80)
        elseif p79 == "ShowChannelsBar" then
            u21.Visible = p80
            u69()
        end
    end)
    p16.GuiObject = u53
    p16.GuiObjects.BaseFrame = u53
    p16.GuiObjects.ChatBarParentFrame = u20
    p16.GuiObjects.ChannelsBarParentFrame = u21
    p16.GuiObjects.ChatChannelParentFrame = u22
    p16.GuiObjects.ChatResizerFrame = u23
    p16.GuiObjects.ResizeIcon = v24
    p16:AnimGuiObjects()
end
function u10.GetChatBar(p84) --[[Anonymous function at line 420]]
    return p84.ChatBar
end
function u10.RegisterChatBar(p85, p86) --[[Anonymous function at line 424]]
    p85.ChatBar = p86
    p85.ChatBar:CreateGuiObjects(p85.GuiObjects.ChatBarParentFrame)
end
function u10.RegisterChannelsBar(p87, p88) --[[Anonymous function at line 429]]
    p87.ChannelsBar = p88
    p87.ChannelsBar:CreateGuiObjects(p87.GuiObjects.ChannelsBarParentFrame)
end
function u10.RegisterMessageLogDisplay(p89, p90) --[[Anonymous function at line 434]]
    p89.MessageLogDisplay = p90
    p89.MessageLogDisplay.GuiObject.Parent = p89.GuiObjects.ChatChannelParentFrame
end
function u10.AddChannel(u91, u92) --[[Anonymous function at line 439]]
    --[[
    Upvalues:
        [1] = u7
    --]]
    if not u91:GetChannel(u92) then
        local v93 = u7.new(u92, u91.MessageLogDisplay)
        u91.Channels[u92:lower()] = v93
        v93:SetActive(false)
        local v94 = u91.ChannelsBar:AddChannelTab(u92)
        v94.NameTag.MouseButton1Click:connect(function() --[[Anonymous function at line 451]]
            --[[
            Upvalues:
                [1] = u91
                [2] = u92
            --]]
            u91:SwitchCurrentChannel(u92)
        end)
        v93:RegisterChannelTab(v94)
        return v93
    end
    error("Channel \'" .. u92 .. "\' already exists!")
end
function u10.GetFirstChannel(p95) --[[Anonymous function at line 460]]
    -- block 4
    local v96, v97, v98
    -- GenericForInit
v96, v97, v98 = pairs(p95.Channels)
[internal control] = v98
-- end GenericForInit
    local v99, v100
    -- GenericForNext
v99, v100 = v96(v97, [internal control])
if v99 ~= nil
[internal control] = v99
-- end GenericForNext
    -- block 0
    goto l1
    ::l1::
    return v100
    ::l3::
    return nil
    -- block 5
    goto l3
end
function u10.RemoveChannel(p101, p102) --[[Anonymous function at line 469]]
    --[[
    Upvalues:
        [1] = u8
    --]]
    if not p101:GetChannel(p102) then
        error("Channel \'" .. p102 .. "\' does not exist!")
    end
    local v103 = p102:lower()
    local v104
    if p101.Channels[v103] == p101:GetCurrentChannel() then
        p101:SwitchCurrentChannel(nil)
        v104 = true
    else
        v104 = false
    end
    p101.Channels[v103]:Destroy()
    p101.Channels[v103] = nil
    p101.ChannelsBar:RemoveChannelTab(p102)
    if v104 then
        local v105
        if p101:GetChannel(u8.GeneralChannelName) ~= nil and v103 ~= u8.GeneralChannelName:lower() then
            v105 = u8.GeneralChannelName
        else
            local v106 = p101:GetFirstChannel()
            v105 = v106 and v106.Name or nil
        end
        p101:SwitchCurrentChannel(v105)
    end
    if not u8.ShowChannelsBar and p101.ChatBar.TargetChannel == p102 then
        p101.ChatBar:SetChannelTarget(u8.GeneralChannelName)
    end
end
function u10.GetChannel(p107, p108) --[[Anonymous function at line 511]]
    return p108 and p107.Channels[p108:lower()] or nil
end
function u10.GetTargetMessageChannel(p109) --[[Anonymous function at line 515]]
    --[[
    Upvalues:
        [1] = u8
    --]]
    if not u8.ShowChannelsBar then
        return p109.ChatBar.TargetChannel
    end
    local v110 = p109:GetCurrentChannel()
    if v110 then
        v110 = v110.Name
    end
    return v110
end
function u10.GetCurrentChannel(p111) --[[Anonymous function at line 524]]
    return p111.CurrentChannel
end
function u10.SwitchCurrentChannel(p112, p113) --[[Anonymous function at line 528]]
    --[[
    Upvalues:
        [1] = u8
    --]]
    if not u8.ShowChannelsBar then
        local v114 = p112:GetChannel(p113)
        if v114 then
            p112.ChatBar:SetChannelTarget(v114.Name)
        end
        p113 = u8.GeneralChannelName
    end
    local v115 = p112:GetCurrentChannel()
    local v116 = p112:GetChannel(p113)
    if v116 == nil then
        error(string.format("Channel \'%s\' does not exist.", p113))
    end
    if v116 ~= v115 then
        if v115 then
            v115:SetActive(false)
            p112.ChannelsBar:GetChannelTab(v115.Name):SetActive(false)
        end
        if v116 then
            v116:SetActive(true)
            p112.ChannelsBar:GetChannelTab(v116.Name):SetActive(true)
        end
        p112.CurrentChannel = v116
    end
end
function u10.UpdateFrameVisibility(p117) --[[Anonymous function at line 562]]
    local v118 = p117.GuiObject
    local v119 = p117.Visible
    if v119 then
        v119 = p117.CoreGuiEnabled
    end
    v118.Visible = v119
end
function u10.GetVisible(p120) --[[Anonymous function at line 566]]
    return p120.Visible
end
function u10.SetVisible(p121, p122) --[[Anonymous function at line 570]]
    p121.Visible = p122
    p121:UpdateFrameVisibility()
end
function u10.GetCoreGuiEnabled(p123) --[[Anonymous function at line 575]]
    return p123.CoreGuiEnabled
end
function u10.SetCoreGuiEnabled(p124, p125) --[[Anonymous function at line 579]]
    p124.CoreGuiEnabled = p125
    p124:UpdateFrameVisibility()
end
function u10.EnableResizable(p126) --[[Anonymous function at line 584]]
    p126.GuiObjects.ChatResizerFrame.Active = true
end
function u10.DisableResizable(p127) --[[Anonymous function at line 588]]
    p127.GuiObjects.ChatResizerFrame.Active = false
end
function u10.FadeOutBackground(p128, p129) --[[Anonymous function at line 592]]
    --[[
    Upvalues:
        [1] = u9
    --]]
    p128.ChannelsBar:FadeOutBackground(p129)
    p128.MessageLogDisplay:FadeOutBackground(p129)
    p128.ChatBar:FadeOutBackground(p129)
    p128.AnimParams.Background_TargetTransparency = 1
    p128.AnimParams.Background_NormalizedExptValue = u9:NormalizedDefaultExptValueInSeconds(p129)
end
function u10.FadeInBackground(p130, p131) --[[Anonymous function at line 601]]
    --[[
    Upvalues:
        [1] = u9
    --]]
    p130.ChannelsBar:FadeInBackground(p131)
    p130.MessageLogDisplay:FadeInBackground(p131)
    p130.ChatBar:FadeInBackground(p131)
    p130.AnimParams.Background_TargetTransparency = 0.6
    p130.AnimParams.Background_NormalizedExptValue = u9:NormalizedDefaultExptValueInSeconds(p131)
end
function u10.FadeOutText(p132, p133) --[[Anonymous function at line 610]]
    p132.MessageLogDisplay:FadeOutText(p133)
    p132.ChannelsBar:FadeOutText(p133)
end
function u10.FadeInText(p134, p135) --[[Anonymous function at line 615]]
    p134.MessageLogDisplay:FadeInText(p135)
    p134.ChannelsBar:FadeInText(p135)
end
function u10.AnimGuiObjects(p136) --[[Anonymous function at line 620]]
    p136.GuiObjects.ChatChannelParentFrame.BackgroundTransparency = p136.AnimParams.Background_CurrentTransparency
    p136.GuiObjects.ChatResizerFrame.BackgroundTransparency = p136.AnimParams.Background_CurrentTransparency
    p136.GuiObjects.ResizeIcon.ImageTransparency = p136.AnimParams.Background_CurrentTransparency
end
function u10.InitializeAnimParams(p137) --[[Anonymous function at line 626]]
    --[[
    Upvalues:
        [1] = u9
    --]]
    p137.AnimParams.Background_TargetTransparency = 0.6
    p137.AnimParams.Background_CurrentTransparency = 0.6
    p137.AnimParams.Background_NormalizedExptValue = u9:NormalizedDefaultExptValueInSeconds(0)
end
function u10.Update(p138, p139) --[[Anonymous function at line 632]]
    --[[
    Upvalues:
        [1] = u9
    --]]
    p138.ChatBar:Update(p139)
    p138.ChannelsBar:Update(p139)
    p138.MessageLogDisplay:Update(p139)
    p138.AnimParams.Background_CurrentTransparency = u9:Expt(p138.AnimParams.Background_CurrentTransparency, p138.AnimParams.Background_TargetTransparency, p138.AnimParams.Background_NormalizedExptValue, p139)
    p138:AnimGuiObjects()
end
function v1.new() --[[Anonymous function at line 650]]
    --[[
    Upvalues:
        [1] = u10
    --]]
    local v140 = u10
    local v141 = setmetatable({}, v140)
    v141.GuiObject = nil
    v141.GuiObjects = {}
    v141.ChatBar = nil
    v141.ChannelsBar = nil
    v141.MessageLogDisplay = nil
    v141.Channels = {}
    v141.CurrentChannel = nil
    v141.Visible = true
    v141.CoreGuiEnabled = true
    v141.AnimParams = {}
    v141:InitializeAnimParams()
    return v141
end
return v1]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ChatWindow]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="359"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1 = {}
local u2 = game:GetService("Chat")
local v3 = u2:WaitForChild("ClientChatModules")
local u4 = v3:WaitForChild("MessageCreatorModules")
local u5 = require(u4:WaitForChild("Util"))
local v6 = script.Parent
require(v3:WaitForChild("ChatSettings"))
local u7 = require(v6:WaitForChild("ObjectPool"))
require(v6:WaitForChild("MessageSender"))
local u8 = {}
u8.__index = u8
function mergeProps(p9, p10)
    if p9 then
        for v11, v12 in pairs(p9) do
            p10[v11] = v12
        end
    end
end
function ReturnToObjectPoolRecursive(p13, p14)
    local v15 = p13:GetChildren()
    for v16 = 1, #v15 do
        ReturnToObjectPoolRecursive(v15[v16], p14)
    end
    p13.Parent = nil
    p14:ReturnInstance(p13)
end
function GetMessageCreators()
    --[[
    Upvalues:
        [1] = u4
        [2] = u5
    --]]
    local v17 = u4:GetChildren()
    local v18 = {}
    for v19 = 1, #v17 do
        if v17[v19]:IsA("ModuleScript") and v17[v19].Name ~= "Util" then
            local v20 = require(v17[v19])
            v18[v20[u5.KEY_MESSAGE_TYPE]] = v20[u5.KEY_CREATOR_FUNCTION]
        end
    end
    return v18
end
function u8.WrapIntoMessageObject(p21, p22, p23) --[[Anonymous function at line 56]]
    --[[
    Upvalues:
        [1] = u5
    --]]
    local v24 = p23[u5.KEY_BASE_FRAME]
    local v25
    if u5.KEY_BASE_MESSAGE then
        v25 = p23[u5.KEY_BASE_MESSAGE]
    else
        v25 = nil
    end
    local v26 = p23[u5.KEY_UPDATE_TEXT_FUNC]
    local v27 = p23[u5.KEY_GET_HEIGHT]
    local v28 = p23[u5.KEY_FADE_IN]
    local v29 = p23[u5.KEY_FADE_OUT]
    local v30 = p23[u5.KEY_UPDATE_ANIMATION]
    return {
        ["ID"] = p22.ID,
        ["BaseFrame"] = v24,
        ["BaseMessage"] = v25,
        ["UpdateTextFunction"] = v26 or function() --[[Anonymous function at line 73]]
            warn("NO MESSAGE RESIZE FUNCTION")
        end,
        ["GetHeightFunction"] = v27,
        ["FadeInFunction"] = v28,
        ["FadeOutFunction"] = v29,
        ["UpdateAnimFunction"] = v30,
        ["ObjectPool"] = p21.ObjectPool,
        ["Destroyed"] = false,
        ["Destroy"] = function(p31) --[[Function name: Destroy, line 81]]
            ReturnToObjectPoolRecursive(p31.BaseFrame, p31.ObjectPool)
            p31.Destroyed = true
        end
    }
end
function u8.CreateMessageLabel_Chat(p32, u33, p34, p35) --[[Anonymous function at line 89]]
    --[[
    Upvalues:
        [1] = u2
    --]]
    u33.Channel = p34
    local u36 = nil
    pcall(function() --[[Anonymous function at line 92]]
        --[[
        Upvalues:
            [1] = u36
            [2] = u2
            [3] = u33
        --]]
        u36 = u2:InvokeChatCallback(Enum.ChatCallbackType.OnClientFormattingMessage, u33)
    end)
    u33.ExtraData = u33.ExtraData or {}
    mergeProps(u36, u33.ExtraData)
    local v37 = u33.MessageType
    if p32.MessageCreators[v37] then
        local v38 = p32.MessageCreators[v37](u33, p34, p35)
        if v38 then
            return p32:WrapIntoMessageObject(u33, v38)
        end
    elseif p32.DefaultCreatorType then
        local v39 = p32.MessageCreators[p32.DefaultCreatorType](u33, p34, p35)
        if v39 then
            return p32:WrapIntoMessageObject(u33, v39)
        end
    else
        error("No message creator available for message type: " .. v37)
    end
end
function u8.CreateMessageLabel(p40, u41, p42) --[[Anonymous function at line 114]]
    --[[
    Upvalues:
        [1] = u2
    --]]
    u41.Channel = p42
    local u43 = nil
    pcall(function() --[[Anonymous function at line 118]]
        --[[
        Upvalues:
            [1] = u43
            [2] = u2
            [3] = u41
        --]]
        u43 = u2:InvokeChatCallback(Enum.ChatCallbackType.OnClientFormattingMessage, u41)
    end)
    u41.ExtraData = u41.ExtraData or {}
    mergeProps(u43, u41.ExtraData)
    local v44 = u41.MessageType
    if p40.MessageCreators[v44] then
        local v45 = p40.MessageCreators[v44](u41, p42)
        if v45 then
            return p40:WrapIntoMessageObject(u41, v45)
        end
    elseif p40.DefaultCreatorType then
        local v46 = p40.MessageCreators[p40.DefaultCreatorType](u41, p42)
        if v46 then
            return p40:WrapIntoMessageObject(u41, v46)
        end
    else
        error("No message creator available for message type: " .. v44)
    end
end
function v1.new() --[[Anonymous function at line 143]]
    --[[
    Upvalues:
        [1] = u8
        [2] = u7
        [3] = u5
    --]]
    local v47 = u8
    local v48 = setmetatable({}, v47)
    v48.ObjectPool = u7.new(50)
    v48.MessageCreators = GetMessageCreators()
    v48.DefaultCreatorType = u5.DEFAULT_MESSAGE_CREATOR
    u5:RegisterObjectPool(v48.ObjectPool)
    return v48
end
function v1.GetStringTextBounds(_, p49, p50, p51, p52) --[[Anonymous function at line 155]]
    --[[
    Upvalues:
        [1] = u5
    --]]
    return u5:GetStringTextBounds(p49, p50, p51, p52)
end
return v1]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[MessageLabelCreator]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="360"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1 = {}
local u2 = {}
u2.__index = u2
local v3 = game:GetService("Chat"):WaitForChild("ClientChatModules")
local u4 = v3:WaitForChild("CommandModules")
local u5 = require(u4:WaitForChild("Util"))
local _ = script.Parent
local u6 = require(v3:WaitForChild("ChatSettings"))
function u2.SetupCommandProcessors(p7) --[[Anonymous function at line 19]]
    --[[
    Upvalues:
        [1] = u4
        [2] = u5
    --]]
    local v8 = u4:GetChildren()
    for v9 = 1, #v8 do
        if v8[v9]:IsA("ModuleScript") and v8[v9].Name ~= "Util" then
            local v10 = require(v8[v9])
            local v11 = v10[u5.KEY_COMMAND_PROCESSOR_TYPE]
            local v12 = v10[u5.KEY_PROCESSOR_FUNCTION]
            if v11 == u5.IN_PROGRESS_MESSAGE_PROCESSOR then
                local v13 = p7.InProgressMessageProcessors
                table.insert(v13, v12)
            elseif v11 == u5.COMPLETED_MESSAGE_PROCESSOR then
                local v14 = p7.CompletedMessageProcessors
                table.insert(v14, v12)
            end
        end
    end
end
function u2.ProcessCompletedChatMessage(p15, p16, p17) --[[Anonymous function at line 37]]
    --[[
    Upvalues:
        [1] = u6
    --]]
    for v18 = 1, #p15.CompletedMessageProcessors do
        if p15.CompletedMessageProcessors[v18](p16, p17, u6) then
            return true
        end
    end
    return false
end
function u2.ProcessInProgressChatMessage(p19, p20, p21, p22) --[[Anonymous function at line 47]]
    --[[
    Upvalues:
        [1] = u6
    --]]
    for v23 = 1, #p19.InProgressMessageProcessors do
        local v24 = p19.InProgressMessageProcessors[v23](p20, p21, p22, u6)
        if v24 then
            return v24
        end
    end
    return nil
end
function v1.new() --[[Anonymous function at line 60]]
    --[[
    Upvalues:
        [1] = u2
    --]]
    local v25 = u2
    local v26 = setmetatable({}, v25)
    v26.CompletedMessageProcessors = {}
    v26.InProgressMessageProcessors = {}
    v26:SetupCommandProcessors()
    return v26
end
return v1]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[CommandProcessor]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="361"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1 = {}
local v2 = game:GetService("Chat"):WaitForChild("ClientChatModules")
local v3 = script.Parent
local u4 = require(v2:WaitForChild("ChatSettings"))
local u5 = require(v3:WaitForChild("CurveUtil"))
local u6 = {}
u6.__index = u6
local function u20() --[[Anonymous function at line 20]]
    --[[
    Upvalues:
        [1] = u4
    --]]
    local v7 = Instance.new("Frame")
    v7.Selectable = false
    v7.Size = UDim2.new(1, 0, 1, 0)
    v7.BackgroundTransparency = 1
    local v8 = Instance.new("Frame")
    v8.Selectable = false
    v8.Name = "BackgroundFrame"
    v8.Size = UDim2.new(1, -2, 1, -2)
    v8.Position = UDim2.new(0, 1, 0, 1)
    v8.BackgroundTransparency = 1
    v8.Parent = v7
    local v9 = Instance.new("Frame")
    v9.Selectable = false
    v9.Name = "UnselectedFrame"
    v9.Size = UDim2.new(1, 0, 1, 0)
    v9.Position = UDim2.new(0, 0, 0, 0)
    v9.BorderSizePixel = 0
    v9.BackgroundColor3 = u4.ChannelsTabUnselectedColor
    v9.BackgroundTransparency = 0.6
    v9.Parent = v8
    local v10 = Instance.new("Frame")
    v10.Selectable = false
    v10.Name = "SelectedFrame"
    v10.Size = UDim2.new(1, 0, 1, 0)
    v10.Position = UDim2.new(0, 0, 0, 0)
    v10.BorderSizePixel = 0
    v10.BackgroundColor3 = u4.ChannelsTabSelectedColor
    v10.BackgroundTransparency = 1
    v10.Parent = v8
    local v11 = Instance.new("ImageLabel")
    v11.Selectable = false
    v11.Name = "BackgroundImage"
    v11.BackgroundTransparency = 1
    v11.BorderSizePixel = 0
    v11.Size = UDim2.new(1, 0, 1, 0)
    v11.Position = UDim2.new(0, 0, 0, 0)
    v11.ScaleType = Enum.ScaleType.Slice
    v11.Parent = v10
    v11.BackgroundTransparency = -0.4
    v11.BackgroundColor3 = Color3.fromRGB(93.6, 100.8, 115.19999999999999)
    local v12 = Instance.new("ImageLabel")
    v12.Selectable = false
    v12.Size = UDim2.new(0.5, -2, 0, 4)
    v12.BackgroundTransparency = 1
    v12.ScaleType = Enum.ScaleType.Slice
    v12.SliceCenter = Rect.new(3, 3, 32, 21)
    v12.Parent = v10
    local v13 = v12:Clone()
    v13.Parent = v10
    v12.Position = UDim2.new(0, 2, 1, -4)
    v13.Position = UDim2.new(0.5, 0, 1, -4)
    v12.Image = "rbxasset://textures/ui/Settings/Slider/SelectedBarLeft.png"
    v13.Image = "rbxasset://textures/ui/Settings/Slider/SelectedBarRight.png"
    v12.Name = "BlueBarLeft"
    v13.Name = "BlueBarRight"
    local v14 = Instance.new("TextButton")
    v14.Selectable = u4.GamepadNavigationEnabled
    v14.Size = UDim2.new(1, 0, 1, 0)
    v14.Position = UDim2.new(0, 0, 0, 0)
    v14.BackgroundTransparency = 1
    v14.Font = u4.DefaultFont
    v14.TextSize = u4.ChatChannelsTabTextSize
    v14.TextColor3 = Color3.new(1, 1, 1)
    v14.TextStrokeTransparency = 0.75
    v14.Parent = v8
    local v15 = v14:Clone()
    local v16 = v14:Clone()
    v15.Parent = v9
    v16.Parent = v10
    v15.Font = Enum.Font.SourceSans
    v15.Active = false
    v16.Active = false
    local v17 = Instance.new("Frame")
    v17.Selectable = false
    v17.Size = UDim2.new(0, 18, 0, 18)
    v17.Position = UDim2.new(0.8, -9, 0.5, -9)
    v17.BackgroundTransparency = 1
    v17.Parent = v8
    local v18 = Instance.new("ImageLabel")
    v18.Selectable = false
    v18.Size = UDim2.new(1, 0, 1, 0)
    v18.BackgroundTransparency = 1
    v18.Image = "rbxasset://textures/ui/Chat/MessageCounter.png"
    v18.Visible = false
    v18.Parent = v17
    local v19 = Instance.new("TextLabel")
    v19.Selectable = false
    v19.BackgroundTransparency = 1
    v19.Size = UDim2.new(0, 13, 0, 9)
    v19.Position = UDim2.new(0.5, -7, 0.5, -7)
    v19.Font = u4.DefaultFont
    v19.TextSize = 14
    v19.TextColor3 = Color3.new(1, 1, 1)
    v19.Text = ""
    v19.Parent = v18
    return v7, v14, v15, v16, v18, v9, v10
end
function u6.Destroy(p21) --[[Anonymous function at line 140]]
    p21.GuiObject:Destroy()
end
function u6.UpdateMessagePostedInChannel(p22, p23) --[[Anonymous function at line 144]]
    if not p22.Active or p23 == true then
        local v24 = p22.UnreadMessageCount + 1
        p22.UnreadMessageCount = v24
        local v25 = p22.NewMessageIcon
        v25.Visible = true
        v25.TextLabel.Text = v24 < 100 and tostring(v24) or "!"
        local v26 = UDim2.new(0, 0, -0.1, 0)
        local _ = v25.Position + v26
        local v27 = Enum.EasingDirection.Out
        local v28 = Enum.EasingStyle.Quad
        v25.Position = UDim2.new(0, 0, -0.15, 0)
        v25:TweenPosition(UDim2.new(0, 0, 0, 0), v27, v28, 0.15, true)
    end
end
function u6.SetActive(p29, p30) --[[Anonymous function at line 167]]
    p29.Active = p30
    p29.UnselectedFrame.Visible = not p30
    p29.SelectedFrame.Visible = p30
    if p30 then
        p29.UnreadMessageCount = 0
        p29.NewMessageIcon.Visible = false
        p29.NameTag.Font = Enum.Font.SourceSansBold
    else
        p29.NameTag.Font = Enum.Font.SourceSans
    end
end
function u6.SetTextSize(p31, p32) --[[Anonymous function at line 183]]
    p31.NameTag.TextSize = p32
end
function u6.FadeOutBackground(p33, p34) --[[Anonymous function at line 187]]
    --[[
    Upvalues:
        [1] = u5
    --]]
    p33.AnimParams.Background_TargetTransparency = 1
    p33.AnimParams.Background_NormalizedExptValue = u5:NormalizedDefaultExptValueInSeconds(p34)
end
function u6.FadeInBackground(p35, p36) --[[Anonymous function at line 192]]
    --[[
    Upvalues:
        [1] = u5
    --]]
    p35.AnimParams.Background_TargetTransparency = 0.6
    p35.AnimParams.Background_NormalizedExptValue = u5:NormalizedDefaultExptValueInSeconds(p36)
end
function u6.FadeOutText(p37, p38) --[[Anonymous function at line 197]]
    --[[
    Upvalues:
        [1] = u5
    --]]
    p37.AnimParams.Text_TargetTransparency = 1
    p37.AnimParams.Text_NormalizedExptValue = u5:NormalizedDefaultExptValueInSeconds(p38)
    p37.AnimParams.TextStroke_TargetTransparency = 1
    p37.AnimParams.TextStroke_NormalizedExptValue = u5:NormalizedDefaultExptValueInSeconds(p38)
end
function u6.FadeInText(p39, p40) --[[Anonymous function at line 204]]
    --[[
    Upvalues:
        [1] = u5
    --]]
    p39.AnimParams.Text_TargetTransparency = 0
    p39.AnimParams.Text_NormalizedExptValue = u5:NormalizedDefaultExptValueInSeconds(p40)
    p39.AnimParams.TextStroke_TargetTransparency = 0.75
    p39.AnimParams.TextStroke_NormalizedExptValue = u5:NormalizedDefaultExptValueInSeconds(p40)
end
function u6.AnimGuiObjects(p41) --[[Anonymous function at line 211]]
    p41.UnselectedFrame.BackgroundTransparency = p41.AnimParams.Background_CurrentTransparency
    p41.SelectedFrame.BackgroundImage.BackgroundTransparency = p41.AnimParams.Background_CurrentTransparency
    p41.SelectedFrame.BlueBarLeft.ImageTransparency = p41.AnimParams.Background_CurrentTransparency
    p41.SelectedFrame.BlueBarRight.ImageTransparency = p41.AnimParams.Background_CurrentTransparency
    p41.NameTagNonSelect.TextTransparency = p41.AnimParams.Background_CurrentTransparency
    p41.NameTagNonSelect.TextStrokeTransparency = p41.AnimParams.Background_CurrentTransparency
    p41.NameTag.TextTransparency = p41.AnimParams.Text_CurrentTransparency
    p41.NewMessageIcon.ImageTransparency = p41.AnimParams.Text_CurrentTransparency
    p41.WhiteTextNewMessageNotification.TextTransparency = p41.AnimParams.Text_CurrentTransparency
    p41.NameTagSelect.TextTransparency = p41.AnimParams.Text_CurrentTransparency
    p41.NameTag.TextStrokeTransparency = p41.AnimParams.TextStroke_CurrentTransparency
    p41.WhiteTextNewMessageNotification.TextStrokeTransparency = p41.AnimParams.TextStroke_CurrentTransparency
    p41.NameTagSelect.TextStrokeTransparency = p41.AnimParams.TextStroke_CurrentTransparency
end
function u6.InitializeAnimParams(p42) --[[Anonymous function at line 229]]
    --[[
    Upvalues:
        [1] = u5
    --]]
    p42.AnimParams.Text_TargetTransparency = 0
    p42.AnimParams.Text_CurrentTransparency = 0
    p42.AnimParams.Text_NormalizedExptValue = u5:NormalizedDefaultExptValueInSeconds(0)
    p42.AnimParams.TextStroke_TargetTransparency = 0.75
    p42.AnimParams.TextStroke_CurrentTransparency = 0.75
    p42.AnimParams.TextStroke_NormalizedExptValue = u5:NormalizedDefaultExptValueInSeconds(0)
    p42.AnimParams.Background_TargetTransparency = 0.6
    p42.AnimParams.Background_CurrentTransparency = 0.6
    p42.AnimParams.Background_NormalizedExptValue = u5:NormalizedDefaultExptValueInSeconds(0)
end
function u6.Update(p43, p44) --[[Anonymous function at line 243]]
    --[[
    Upvalues:
        [1] = u5
    --]]
    p43.AnimParams.Background_CurrentTransparency = u5:Expt(p43.AnimParams.Background_CurrentTransparency, p43.AnimParams.Background_TargetTransparency, p43.AnimParams.Background_NormalizedExptValue, p44)
    p43.AnimParams.Text_CurrentTransparency = u5:Expt(p43.AnimParams.Text_CurrentTransparency, p43.AnimParams.Text_TargetTransparency, p43.AnimParams.Text_NormalizedExptValue, p44)
    p43.AnimParams.TextStroke_CurrentTransparency = u5:Expt(p43.AnimParams.TextStroke_CurrentTransparency, p43.AnimParams.TextStroke_TargetTransparency, p43.AnimParams.TextStroke_NormalizedExptValue, p44)
    p43:AnimGuiObjects()
end
function v1.new(p45) --[[Anonymous function at line 269]]
    --[[
    Upvalues:
        [1] = u6
        [2] = u20
        [3] = u4
    --]]
    local v46 = u6
    local v47 = setmetatable({}, v46)
    local v48, v49, v50, v51, v52, v53, v54 = u20()
    v47.GuiObject = v48
    v47.NameTag = v49
    v47.NameTagNonSelect = v50
    v47.NameTagSelect = v51
    v47.NewMessageIcon = v52
    v47.UnselectedFrame = v53
    v47.SelectedFrame = v54
    v47.BlueBarLeft = v54.BlueBarLeft
    v47.BlueBarRight = v54.BlueBarRight
    v47.BackgroundImage = v54.BackgroundImage
    v47.WhiteTextNewMessageNotification = v47.NewMessageIcon.TextLabel
    v47.ChannelName = p45
    v47.UnreadMessageCount = 0
    v47.Active = false
    v47.GuiObject.Name = "Frame_" .. v47.ChannelName
    if string.len(p45) > u4.MaxChannelNameLength then
        local v55 = u4.MaxChannelNameLength - 3
        p45 = string.sub(p45, 1, v55) .. "..."
    end
    v47.NameTag.Text = ""
    v47.NameTagNonSelect.Text = p45
    v47.NameTagSelect.Text = p45
    v47.AnimParams = {}
    v47:InitializeAnimParams()
    v47:AnimGuiObjects()
    v47:SetActive(false)
    return v47
end
return v1]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ChannelsTab]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="362"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1 = {}
local u2 = {}
u2.__index = u2
function u2.GetInstance(p3, p4) --[[Anonymous function at line 14]]
    if p3.InstancePoolsByClass[p4] == nil then
        p3.InstancePoolsByClass[p4] = {}
    end
    local v5 = #p3.InstancePoolsByClass[p4]
    if v5 <= 0 then
        return Instance.new(p4)
    end
    local v6 = p3.InstancePoolsByClass[p4][v5]
    table.remove(p3.InstancePoolsByClass[p4])
    return v6
end
function u2.ReturnInstance(p7, p8) --[[Anonymous function at line 27]]
    if p7.InstancePoolsByClass[p8.ClassName] == nil then
        p7.InstancePoolsByClass[p8.ClassName] = {}
    end
    if #p7.InstancePoolsByClass[p8.ClassName] < p7.PoolSizePerType then
        local v9 = p7.InstancePoolsByClass[p8.ClassName]
        table.insert(v9, p8)
    else
        p8:Destroy()
    end
end
function v1.new(p10) --[[Anonymous function at line 41]]
    --[[
    Upvalues:
        [1] = u2
    --]]
    local v11 = u2
    local v12 = setmetatable({}, v11)
    v12.InstancePoolsByClass = {}
    v12.Name = "ObjectPool"
    v12.PoolSizePerType = p10
    return v12
end
return v1]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ObjectPool]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="363"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1 = {}
local _ = script.Parent
local u2 = {}
u2.__index = u2
function u2.SendMessage(p3, p4, p5) --[[Anonymous function at line 15]]
    p3.SayMessageRequest:FireServer(p4, p5)
end
function u2.RegisterSayMessageFunction(p6, p7) --[[Anonymous function at line 19]]
    p6.SayMessageRequest = p7
end
function v1.new() --[[Anonymous function at line 26]]
    --[[
    Upvalues:
        [1] = u2
    --]]
    local v8 = u2
    local v9 = setmetatable({}, v8)
    v9.SayMessageRequest = nil
    return v9
end
return v1.new()]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[MessageSender]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="364"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local u44 = {
    ["Expt"] = function(_, p1, p2, p3, p4) --[[Function name: Expt, line 5]]
        --[[
        Upvalues:
            [1] = u44
        --]]
        local v5 = p2 - p1
        if math.abs(v5) < 0.01 then
            return p2
        end
        local v6 = u44:Expty(p1, p2, p3, p4)
        return p1 + (p2 - p1) * v6
    end,
    ["Expty"] = function(_, _, _, p7, p8) --[[Function name: Expty, line 17]]
        local v9 = 1 - p7
        local v10 = -(-math.log(v9)) * p8
        return 1 - math.exp(v10)
    end,
    ["Sign"] = function(_, p11) --[[Function name: Sign, line 24]]
        return p11 > 0 and 1 or (p11 < 0 and -1 or 0)
    end,
    ["BezierValForT"] = function(_, p12, p13, p14, p15, p16) --[[Function name: BezierValForT, line 34]]
        local v17 = (1 - p16) * (1 - p16) * (1 - p16)
        local v18 = 3 * p16 * (1 - p16) * (1 - p16)
        local v19 = 3 * p16 * p16 * (1 - p16)
        local v20 = p16 * p16 * p16
        return v17 * p12 + v18 * p13 + v19 * p14 + v20 * p15
    end,
    ["_BezierPt2ForT"] = {
        ["x"] = 0,
        ["y"] = 0
    },
    ["BezierPt2ForT"] = function(_, p21, p22, p23, p24, p25, p26, p27, p28, p29) --[[Function name: BezierPt2ForT, line 43]]
        --[[
        Upvalues:
            [1] = u44
        --]]
        u44._BezierPt2ForT.x = u44:BezierValForT(p21, p23, p25, p27, p29)
        u44._BezierPt2ForT.y = u44:BezierValForT(p22, p24, p26, p28, p29)
        return u44._BezierPt2ForT
    end,
    ["YForPointOf2PtLine"] = function(_, p30, p31, p32) --[[Function name: YForPointOf2PtLine, line 55]]
        local v33 = (p30.y - p31.y) / (p30.x - p31.x)
        local v34 = p30.y - v33 * p30.x
        return v33 * p32 + v34
    end,
    ["DeltaTimeToTimescale"] = function(_, p35) --[[Function name: DeltaTimeToTimescale, line 63]]
        return p35 / 0.016666666666666666
    end,
    ["SecondsToTick"] = function(_, p36) --[[Function name: SecondsToTick, line 67]]
        return 0.016666666666666666 / p36
    end,
    ["ExptValueInSeconds"] = function(_, p37, p38, p39) --[[Function name: ExptValueInSeconds, line 71]]
        local v40 = p37 / p38
        local v41 = 1 / (60 * p39)
        return 1 - math.pow(v40, v41)
    end,
    ["NormalizedDefaultExptValueInSeconds"] = function(p42, p43) --[[Function name: NormalizedDefaultExptValueInSeconds, line 75]]
        return p42:ExptValueInSeconds(0.01, 1, p43)
    end
}
return u44]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[CurveUtil]]></string><BinaryString name="Tags"></BinaryString></Properties></Item></Item></Item><Item class="LocalScript" referent="365"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local u1 = game:GetService("Players")
local v2 = game:GetService("ReplicatedStorage")
local u3 = game:GetService("Chat")
local u4 = game:GetService("TextService")
local u5 = u1.LocalPlayer
while u5 == nil do
    u1.ChildAdded:wait()
    u5 = u1.LocalPlayer
end
local v6 = u5:WaitForChild("PlayerGui")
local v7, v8 = pcall(function() --[[Anonymous function at line 24]]
    return UserSettings():IsUserFeatureEnabled("UserShouldLocalizeGameChatBubble")
end)
local u9 = v7 and v8
local v10, v11 = pcall(function() --[[Anonymous function at line 30]]
    return UserSettings():IsUserFeatureEnabled("UserFixBubbleChatText")
end)
local u12 = v10 and v11
local v13, v14 = pcall(function() --[[Anonymous function at line 37]]
    return UserSettings():IsUserFeatureEnabled("UserRoactBubbleChatBeta")
end)
local u15 = v13 and v14
local v16, v17 = pcall(function() --[[Anonymous function at line 44]]
    return UserSettings():IsUserFeatureEnabled("UserPreventOldBubbleChatOverlap")
end)
local u18 = v16 and v17
local u19 = Enum.Font.SourceSans
local u20 = Enum.FontSize.Size24
local u21 = 128 - utf8.len(utf8.nfcnormalize("...")) - 1
local u22 = {
    ["WHITE"] = "dub",
    ["BLUE"] = "blu",
    ["GREEN"] = "gre",
    ["RED"] = "red"
}
local u23 = Instance.new("ScreenGui")
u23.Name = "BubbleChat"
u23.ResetOnSpawn = false
u23.Parent = v6
local function u29() --[[Anonymous function at line 97]]
    local u24 = {
        ["data"] = {}
    }
    local u25 = Instance.new("BindableEvent")
    u24.Emptied = u25.Event
    function u24.Size(_) --[[Anonymous function at line 104]]
        --[[
        Upvalues:
            [1] = u24
        --]]
        return #u24.data
    end
    function u24.Empty(_) --[[Anonymous function at line 108]]
        --[[
        Upvalues:
            [1] = u24
        --]]
        return u24:Size() <= 0
    end
    function u24.PopFront(_) --[[Anonymous function at line 112]]
        --[[
        Upvalues:
            [1] = u24
            [2] = u25
        --]]
        table.remove(u24.data, 1)
        if u24:Empty() then
            u25:Fire()
        end
    end
    function u24.Front(_) --[[Anonymous function at line 117]]
        --[[
        Upvalues:
            [1] = u24
        --]]
        return u24.data[1]
    end
    function u24.Get(_, p26) --[[Anonymous function at line 121]]
        --[[
        Upvalues:
            [1] = u24
        --]]
        return u24.data[p26]
    end
    function u24.PushBack(_, p27) --[[Anonymous function at line 125]]
        --[[
        Upvalues:
            [1] = u24
        --]]
        local v28 = u24.data
        table.insert(v28, p27)
    end
    function u24.GetData(_) --[[Anonymous function at line 129]]
        --[[
        Upvalues:
            [1] = u24
        --]]
        return u24.data
    end
    return u24
end
local function u38(p30, p31, p32) --[[Anonymous function at line 184]]
    local v37 = {
        ["ComputeBubbleLifetime"] = function(_, p33, p34) --[[Function name: ComputeBubbleLifetime, line 187]]
            if p34 then
                local v35 = utf8.len(utf8.nfcnormalize(p33)) / 75
                return 8 + 7 * math.min(v35, 1)
            else
                local v36 = utf8.len(utf8.nfcnormalize(p33)) / 75
                return 12 + 8 * math.min(v36, 1)
            end
        end,
        ["Origin"] = nil,
        ["RenderBubble"] = nil,
        ["Message"] = p30
    }
    v37.BubbleDieDelay = v37:ComputeBubbleLifetime(p30, p32)
    v37.BubbleColor = p31
    v37.IsLocalPlayer = p32
    return v37
end
function createChatBubbleMain(p39, p40)
    local v41 = Instance.new("ImageLabel")
    v41.Name = "ChatBubble"
    v41.ScaleType = Enum.ScaleType.Slice
    v41.SliceCenter = p40
    v41.Image = "rbxasset://textures/" .. tostring(p39) .. ".png"
    v41.BackgroundTransparency = 1
    v41.BorderSizePixel = 0
    v41.Size = UDim2.new(1, 0, 1, 0)
    v41.Position = UDim2.new(0, 0, 0, 0)
    return v41
end
function createChatBubbleTail(p42, p43)
    local v44 = Instance.new("ImageLabel")
    v44.Name = "ChatBubbleTail"
    v44.Image = "rbxasset://textures/ui/dialog_tail.png"
    v44.BackgroundTransparency = 1
    v44.BorderSizePixel = 0
    v44.Position = p42
    v44.Size = p43
    return v44
end
function createChatBubbleWithTail(p45, p46, p47, p48)
    local v49 = createChatBubbleMain(p45, p48)
    createChatBubbleTail(p46, p47).Parent = v49
    return v49
end
function createScaledChatBubbleWithTail(p50, p51, p52, p53)
    local v54 = createChatBubbleMain(p50, p53)
    local v55 = Instance.new("Frame")
    v55.Name = "ChatBubbleTailFrame"
    v55.BackgroundTransparency = 1
    v55.SizeConstraint = Enum.SizeConstraint.RelativeXX
    v55.Position = UDim2.new(0.5, 0, 1, 0)
    v55.Size = UDim2.new(p51, 0, p51, 0)
    v55.Parent = v54
    createChatBubbleTail(p52, UDim2.new(1, 0, 0.5, 0)).Parent = v55
    return v54
end
function createChatImposter(p56, p57, p58)
    local v59 = Instance.new("ImageLabel")
    v59.Name = "DialogPlaceholder"
    v59.Image = "rbxasset://textures/" .. tostring(p56) .. ".png"
    v59.BackgroundTransparency = 1
    v59.BorderSizePixel = 0
    v59.Position = UDim2.new(0, 0, -1.25, 0)
    v59.Size = UDim2.new(1, 0, 1, 0)
    local v60 = Instance.new("ImageLabel")
    v60.Name = "DotDotDot"
    v60.Image = "rbxasset://textures/" .. tostring(p57) .. ".png"
    v60.BackgroundTransparency = 1
    v60.BorderSizePixel = 0
    v60.Position = UDim2.new(0.001, 0, p58, 0)
    v60.Size = UDim2.new(1, 0, 0.7, 0)
    v60.Parent = v59
    return v59
end
local u68 = {
    ["ChatBubble"] = {},
    ["ChatBubbleWithTail"] = {},
    ["ScalingChatBubbleWithTail"] = {},
    ["CharacterSortedMsg"] = (function() --[[Function name: createMap, line 145]]
        --[[
        Upvalues:
            [1] = u29
        --]]
        local u61 = {
            ["data"] = {}
        }
        local u62 = 0
        function u61.Size(_) --[[Anonymous function at line 150]]
            --[[
            Upvalues:
                [1] = u62
            --]]
            return u62
        end
        function u61.Erase(_, p63) --[[Anonymous function at line 154]]
            --[[
            Upvalues:
                [1] = u61
                [2] = u62
            --]]
            if u61.data[p63] then
                u62 = u62 - 1
            end
            u61.data[p63] = nil
        end
        function u61.Set(_, p64, p65) --[[Anonymous function at line 159]]
            --[[
            Upvalues:
                [1] = u61
                [2] = u62
            --]]
            u61.data[p64] = p65
            if p65 then
                u62 = u62 + 1
            end
        end
        function u61.Get(_, u66) --[[Anonymous function at line 164]]
            --[[
            Upvalues:
                [1] = u61
                [2] = u29
            --]]
            if u66 then
                if not u61.data[u66] then
                    u61.data[u66] = {
                        ["Fifo"] = u29(),
                        ["BillboardGui"] = nil
                    }
                    local u67 = nil
                    u67 = u61.data[u66].Fifo.Emptied:connect(function() --[[Anonymous function at line 169]]
                        --[[
                        Upvalues:
                            [1] = u67
                            [2] = u61
                            [3] = u66
                        --]]
                        u67:disconnect()
                        u61:Erase(u66)
                    end)
                end
                return u61.data[u66]
            end
        end
        function u61.GetData(_) --[[Anonymous function at line 177]]
            --[[
            Upvalues:
                [1] = u61
            --]]
            return u61.data
        end
        return u61
    end)()
}
local function v73(p69, p70, _, p71, p72) --[[Anonymous function at line 304]]
    --[[
    Upvalues:
        [1] = u68
    --]]
    u68.ChatBubble[p69] = createChatBubbleMain(p70, p72)
    u68.ChatBubbleWithTail[p69] = createChatBubbleWithTail(p70, UDim2.new(0.5, -14, 1, p71 and -1 or 0), UDim2.new(0, 30, 0, 14), p72)
    u68.ScalingChatBubbleWithTail[p69] = createScaledChatBubbleWithTail(p70, 0.5, UDim2.new(-0.5, 0, 0, p71 and -1 or 0), p72)
end
v73(u22.WHITE, "ui/dialog_white", "ui/chatBubble_white_notify_bkg", false, Rect.new(5, 5, 15, 15))
v73(u22.BLUE, "ui/dialog_blue", "ui/chatBubble_blue_notify_bkg", true, Rect.new(7, 7, 33, 33))
v73(u22.RED, "ui/dialog_red", "ui/chatBubble_red_notify_bkg", true, Rect.new(7, 7, 33, 33))
v73(u22.GREEN, "ui/dialog_green", "ui/chatBubble_green_notify_bkg", true, Rect.new(7, 7, 33, 33))
function u68.SanitizeChatLine(_, p74) --[[Anonymous function at line 315]]
    --[[
    Upvalues:
        [1] = u21
    --]]
    if u21 >= utf8.len(utf8.nfcnormalize(p74)) then
        return p74
    end
    local v75 = utf8.offset(p74, u21 + utf8.len(utf8.nfcnormalize("...")) + 1) - 1
    return string.sub(p74, 1, v75)
end
local function u80(p76) --[[Anonymous function at line 324]]
    --[[
    Upvalues:
        [1] = u23
        [2] = u68
        [3] = u22
    --]]
    local u77 = Instance.new("BillboardGui")
    u77.Adornee = p76
    u77.Size = UDim2.new(0, 400, 0, 250)
    u77.StudsOffset = Vector3.new(0, 1.5, 2)
    u77.Parent = u23
    local u78 = Instance.new("Frame")
    u78.Name = "BillboardFrame"
    u78.Size = UDim2.new(1, 0, 1, 0)
    u78.Position = UDim2.new(0, 0, -0.5, 0)
    u78.BackgroundTransparency = 1
    u78.Parent = u77
    local u79 = nil
    u79 = u78.ChildRemoved:connect(function() --[[Anonymous function at line 339]]
        --[[
        Upvalues:
            [1] = u78
            [2] = u79
            [3] = u77
        --]]
        if #u78:GetChildren() <= 1 then
            u79:disconnect()
            u77:Destroy()
        end
    end)
    u68:CreateSmallTalkBubble(u22.WHITE).Parent = u78
    return u77
end
function u68.CreateBillboardGuiHelper(_, p81, p82) --[[Anonymous function at line 351]]
    --[[
    Upvalues:
        [1] = u68
        [2] = u80
    --]]
    if p81 and not u68.CharacterSortedMsg:Get(p81).BillboardGui then
        if not p82 and p81:IsA("BasePart") then
            local v83 = u80(p81)
            u68.CharacterSortedMsg:Get(p81).BillboardGui = v83
            return
        end
        if p81:IsA("Model") then
            local v84 = p81:FindFirstChild("Head")
            if v84 and v84:IsA("BasePart") then
                local v85 = u80(v84)
                u68.CharacterSortedMsg:Get(p81).BillboardGui = v85
            end
        end
    end
end
function u68.SetBillboardLODNear(_, p86) --[[Anonymous function at line 385]]
    --[[
    Upvalues:
        [1] = u1
    --]]
    local v87 = p86.Adornee
    local v88
    if v87 and u1.LocalPlayer.Character then
        v88 = v87:IsDescendantOf(u1.LocalPlayer.Character)
    else
        v88 = nil
    end
    p86.Size = UDim2.new(0, 400, 0, 250)
    p86.StudsOffset = Vector3.new(0, v88 and 1.5 or 2.5, v88 and 2 or 0.1)
    p86.Enabled = true
    local v89 = p86.BillboardFrame:GetChildren()
    for v90 = 1, #v89 do
        v89[v90].Visible = true
    end
    p86.BillboardFrame.SmallTalkBubble.Visible = false
end
function u68.SetBillboardLODDistant(_, p91) --[[Anonymous function at line 397]]
    --[[
    Upvalues:
        [1] = u1
    --]]
    local v92 = p91.Adornee
    local v93
    if v92 and u1.LocalPlayer.Character then
        v93 = v92:IsDescendantOf(u1.LocalPlayer.Character)
    else
        v93 = nil
    end
    p91.Size = UDim2.new(4, 0, 3, 0)
    p91.StudsOffset = Vector3.new(0, 3, v93 and 2 or 0.1)
    p91.Enabled = true
    local v94 = p91.BillboardFrame:GetChildren()
    for v95 = 1, #v94 do
        v94[v95].Visible = false
    end
    p91.BillboardFrame.SmallTalkBubble.Visible = true
end
function u68.SetBillboardLODVeryFar(_, p96) --[[Anonymous function at line 409]]
    p96.Enabled = false
end
function u68.SetBillboardGuiLOD(_, p97, p98) --[[Anonymous function at line 413]]
    --[[
    Upvalues:
        [1] = u68
    --]]
    if p98 then
        if p98:IsA("Model") then
            p98 = p98:FindFirstChild("Head") or p98.PrimaryPart
        end
        local v99 = not p98 and 100000 or (p98.Position - game.Workspace.CurrentCamera.CoordinateFrame.Position).magnitude
        if v99 < 65 then
            u68:SetBillboardLODNear(p97)
            return
        elseif v99 >= 65 and v99 < 100 then
            u68:SetBillboardLODDistant(p97)
        else
            u68:SetBillboardLODVeryFar(p97)
        end
    else
        return
    end
end
function u68.CameraCFrameChanged(_) --[[Anonymous function at line 433]]
    --[[
    Upvalues:
        [1] = u68
    --]]
    for v100, v101 in pairs(u68.CharacterSortedMsg:GetData()) do
        local v102 = v101.BillboardGui
        if v102 then
            u68:SetBillboardGuiLOD(v102, v100)
        end
    end
end
function u68.CreateBubbleText(_, p103, p104) --[[Anonymous function at line 440]]
    --[[
    Upvalues:
        [1] = u12
        [2] = u19
        [3] = u20
    --]]
    local v105 = Instance.new("TextLabel")
    v105.Name = "BubbleText"
    v105.BackgroundTransparency = 1
    if u12 then
        v105.Size = UDim2.fromScale(1, 1)
    else
        v105.Position = UDim2.new(0, 15, 0, 0)
        v105.Size = UDim2.new(1, -30, 1, 0)
    end
    v105.Font = u19
    v105.ClipsDescendants = true
    v105.TextWrapped = true
    v105.FontSize = u20
    v105.Text = p103
    v105.Visible = false
    v105.AutoLocalize = p104
    if u12 then
        local v106 = Instance.new("UIPadding")
        v106.PaddingTop = UDim.new(0, 12)
        v106.PaddingRight = UDim.new(0, 12)
        v106.PaddingBottom = UDim.new(0, 12)
        v106.PaddingLeft = UDim.new(0, 12)
        v106.Parent = v105
    end
    return v105
end
function u68.CreateSmallTalkBubble(_, p107) --[[Anonymous function at line 472]]
    --[[
    Upvalues:
        [1] = u68
    --]]
    local v108 = u68.ScalingChatBubbleWithTail[p107]:Clone()
    v108.Name = "SmallTalkBubble"
    v108.AnchorPoint = Vector2.new(0, 0.5)
    v108.Position = UDim2.new(0, 0, 0.5, 0)
    v108.Visible = false
    local v109 = u68:CreateBubbleText("...")
    v109.TextScaled = true
    v109.TextWrapped = false
    v109.Visible = true
    v109.Parent = v108
    return v108
end
function u68.UpdateChatLinesForOrigin(_, p110, p111) --[[Anonymous function at line 487]]
    --[[
    Upvalues:
        [1] = u68
    --]]
    local v112 = u68.CharacterSortedMsg:Get(p110).Fifo
    local v113 = v112:Size()
    local v114 = v112:GetData()
    if #v114 > 1 then
        for v115 = #v114 - 1, 1, -1 do
            local v116 = v114[v115].RenderBubble
            if not v116 then
                return
            end
            if v113 - v115 + 1 > 1 then
                local v117 = v116:FindFirstChild("ChatBubbleTail")
                if v117 then
                    v117:Destroy()
                end
                local v118 = v116:FindFirstChild("BubbleText")
                if v118 then
                    v118.TextTransparency = 0.5
                end
            end
            v116:TweenPosition(UDim2.new(v116.Position.X.Scale, v116.Position.X.Offset, 1, p111 - v116.Size.Y.Offset - 14), Enum.EasingDirection.Out, Enum.EasingStyle.Bounce, 0.1, true)
            p111 = p111 - v116.Size.Y.Offset - 14
        end
    end
end
function u68.DestroyBubble(_, u119, u120) --[[Anonymous function at line 513]]
    if u119 then
        if u119:Empty() then
            return
        else
            local u121 = u119:Front().RenderBubble
            if u121 then
                spawn(function() --[[Anonymous function at line 523]]
                    --[[
                    Upvalues:
                        [1] = u119
                        [2] = u120
                        [3] = u121
                    --]]
                    while u119:Front().RenderBubble ~= u120 do
                        wait()
                    end
                    u121 = u119:Front().RenderBubble
                    local v122 = u121:FindFirstChild("BubbleText")
                    local v123 = u121:FindFirstChild("ChatBubbleTail")
                    while u121 and u121.ImageTransparency < 1 do
                        local v124 = wait()
                        if u121 then
                            local v125 = v124 * 1.5
                            u121.ImageTransparency = u121.ImageTransparency + v125
                            if v122 then
                                v122.TextTransparency = v122.TextTransparency + v125
                            end
                            if v123 then
                                v123.ImageTransparency = v123.ImageTransparency + v125
                            end
                        end
                    end
                    if u121 then
                        u121:Destroy()
                        u119:PopFront()
                    end
                end)
            else
                u119:PopFront()
            end
        end
    else
        return
    end
end
function u68.CreateChatLineRender(_, p126, p127, p128, u129, p130) --[[Anonymous function at line 551]]
    --[[
    Upvalues:
        [1] = u68
        [2] = u4
        [3] = u19
        [4] = u12
    --]]
    if p126 then
        if not u68.CharacterSortedMsg:Get(p126).BillboardGui then
            u68:CreateBillboardGuiHelper(p126, p128)
        end
        local v131 = u68.CharacterSortedMsg:Get(p126).BillboardGui
        if v131 then
            local u132 = u68.ChatBubbleWithTail[p127.BubbleColor]:Clone()
            u132.Visible = false
            local u133 = u68:CreateBubbleText(p127.Message, p130)
            u133.Parent = u132
            u132.Parent = v131.BillboardFrame
            p127.RenderBubble = u132
            local v134 = u4:GetTextSize(u133.Text, 24, u19, Vector2.new(400, 250))
            local v135 = v134.Y / 24
            if u12 then
                local v136 = v134.X + 24
                local v137 = math.ceil(v136)
                local v138 = v135 * 34
                u132.Size = UDim2.fromOffset(0, 0)
                u132.Position = UDim2.fromScale(0.5, 1)
                u132:TweenSizeAndPosition(UDim2.fromOffset(v137, v138), UDim2.new(0.5, -v137 / 2, 1, -v138), Enum.EasingDirection.Out, Enum.EasingStyle.Elastic, 0.1, true, function() --[[Anonymous function at line 590]]
                    --[[
                    Upvalues:
                        [1] = u133
                    --]]
                    u133.Visible = true
                end)
                u68:SetBillboardGuiLOD(v131, p127.Origin)
                u68:UpdateChatLinesForOrigin(p127.Origin, -v138)
            else
                local v139 = (v134.X + 30) / 400
                local v140 = math.max(v139, 0.1)
                u132.Size = UDim2.new(0, 0, 0, 0)
                u132.Position = UDim2.new(0.5, 0, 1, 0)
                local v141 = v135 * 34
                u132:TweenSizeAndPosition(UDim2.new(v140, 0, 0, v141), UDim2.new((1 - v140) / 2, 0, 1, -v141), Enum.EasingDirection.Out, Enum.EasingStyle.Elastic, 0.1, true, function() --[[Anonymous function at line 610]]
                    --[[
                    Upvalues:
                        [1] = u133
                    --]]
                    u133.Visible = true
                end)
                u68:SetBillboardGuiLOD(v131, p127.Origin)
                u68:UpdateChatLinesForOrigin(p127.Origin, -v141)
            end
            delay(p127.BubbleDieDelay, function() --[[Anonymous function at line 617]]
                --[[
                Upvalues:
                    [1] = u68
                    [2] = u129
                    [3] = u132
                --]]
                u68:DestroyBubble(u129, u132)
            end)
        end
    end
end
function u68.OnPlayerChatMessage(_, p142, p143, _) --[[Anonymous function at line 623]]
    --[[
    Upvalues:
        [1] = u68
        [2] = u1
        [3] = u38
        [4] = u22
    --]]
    if u68:BubbleChatEnabled() then
        local v144 = u1.LocalPlayer
        local v145
        if v144 == nil then
            v145 = false
        else
            v145 = p142 ~= v144
        end
        local v146 = u38(u68:SanitizeChatLine(p143), u22.WHITE, not v145)
        if p142 then
            v146.User = p142.Name
            v146.Origin = p142.Character
        end
        if p142 and v146.Origin then
            local v147 = u68.CharacterSortedMsg:Get(v146.Origin).Fifo
            v147:PushBack(v146)
            u68:CreateChatLineRender(p142.Character, v146, true, v147, false)
        end
    end
end
function u68.OnGameChatMessage(_, p148, p149, p150) --[[Anonymous function at line 642]]
    --[[
    Upvalues:
        [1] = u15
        [2] = u18
        [3] = u3
        [4] = u1
        [5] = u22
        [6] = u68
        [7] = u38
        [8] = u9
    --]]
    if u15 or u18 and u3.BubbleChatEnabled then
        return
    else
        local v151 = u1.LocalPlayer
        local v152
        if v151 == nil then
            v152 = false
        else
            v152 = v151.Character ~= p148
        end
        local v153 = u22.WHITE
        if p150 == Enum.ChatColor.Blue then
            v153 = u22.BLUE
        elseif p150 == Enum.ChatColor.Green then
            v153 = u22.GREEN
        elseif p150 == Enum.ChatColor.Red then
            v153 = u22.RED
        end
        local v154 = u38(u68:SanitizeChatLine(p149), v153, not v152)
        v154.Origin = p148
        u68.CharacterSortedMsg:Get(v154.Origin).Fifo:PushBack(v154)
        if u9 then
            u68:CreateChatLineRender(p148, v154, false, u68.CharacterSortedMsg:Get(v154.Origin).Fifo, true)
        else
            u68:CreateChatLineRender(p148, v154, false, u68.CharacterSortedMsg:Get(v154.Origin).Fifo, false)
        end
    end
end
function u68.BubbleChatEnabled(_) --[[Anonymous function at line 668]]
    --[[
    Upvalues:
        [1] = u15
        [2] = u18
        [3] = u3
        [4] = u1
    --]]
    if u15 or u18 and u3.BubbleChatEnabled then
        return false
    end
    local v155 = u3:FindFirstChild("ClientChatModules")
    local v156 = v155 and v155:FindFirstChild("ChatSettings")
    if v156 then
        local v157 = require(v156)
        if v157.BubbleChatEnabled ~= nil then
            return v157.BubbleChatEnabled
        end
    end
    return u1.BubbleChat
end
function u68.ShowOwnFilteredMessage(_) --[[Anonymous function at line 685]]
    --[[
    Upvalues:
        [1] = u3
    --]]
    local v158 = u3:FindFirstChild("ClientChatModules")
    local v159 = v158 and v158:FindFirstChild("ChatSettings")
    if v159 then
        return require(v159).ShowUserOwnFilteredMessage
    else
        return false
    end
end
function findPlayer(p160)
    --[[
    Upvalues:
        [1] = u1
    --]]
    for _, v161 in pairs(u1:GetPlayers()) do
        if v161.Name == p160 then
            return v161
        end
    end
end
u3.Chatted:connect(function(p162, p163, p164) --[[Anonymous function at line 705]]
    --[[
    Upvalues:
        [1] = u68
    --]]
    u68:OnGameChatMessage(p162, p163, p164)
end)
local u165
if game.Workspace.CurrentCamera then
    u165 = game.Workspace.CurrentCamera:GetPropertyChangedSignal("CFrame"):Connect(function(_) --[[Anonymous function at line 709]]
        --[[
        Upvalues:
            [1] = u68
        --]]
        u68:CameraCFrameChanged()
    end)
else
    u165 = nil
end
game.Workspace.Changed:Connect(function(p166) --[[Anonymous function at line 712]]
    --[[
    Upvalues:
        [1] = u165
        [2] = u68
    --]]
    if p166 == "CurrentCamera" then
        if u165 then
            u165:disconnect()
        end
        if game.Workspace.CurrentCamera then
            u165 = game.Workspace.CurrentCamera:GetPropertyChangedSignal("CFrame"):Connect(function(_) --[[Anonymous function at line 716]]
                --[[
                Upvalues:
                    [1] = u68
                --]]
                u68:CameraCFrameChanged()
            end)
        end
    end
end)
local u167 = nil
function getAllowedMessageTypes()
    --[[
    Upvalues:
        [1] = u167
        [2] = u3
    --]]
    if u167 then
        return u167
    end
    local v168 = u3:FindFirstChild("ClientChatModules")
    if not v168 then
        return { "Message", "Whisper" }
    end
    local v169 = v168:FindFirstChild("ChatSettings")
    if v169 then
        local v170 = require(v169)
        if v170.BubbleChatMessageTypes then
            u167 = v170.BubbleChatMessageTypes
            return u167
        end
    end
    local v171 = v168:FindFirstChild("ChatConstants")
    if v171 then
        local v172 = require(v171)
        u167 = { v172.MessageTypeDefault, v172.MessageTypeWhisper }
    end
    return u167
end
function checkAllowedMessageType(p173)
    local v174 = getAllowedMessageTypes()
    for v175 = 1, #v174 do
        if v174[v175] == p173.MessageType then
            return true
        end
    end
    return false
end
local v176 = v2:WaitForChild("DefaultChatSystemChatEvents")
local v177 = v176:WaitForChild("OnMessageDoneFiltering")
v176:WaitForChild("OnNewMessage").OnClientEvent:connect(function(p178, _) --[[Anonymous function at line 762]]
    --[[
    Upvalues:
        [1] = u5
        [2] = u68
    --]]
    if checkAllowedMessageType(p178) then
        local v179 = findPlayer(p178.FromSpeaker)
        if v179 then
            if p178.IsFiltered and p178.FromSpeaker ~= u5.Name or p178.FromSpeaker == u5.Name and not u68:ShowOwnFilteredMessage() then
                u68:OnPlayerChatMessage(v179, p178.Message, nil)
            end
        else
            return
        end
    else
        return
    end
end)
v177.OnClientEvent:connect(function(p180, _) --[[Anonymous function at line 781]]
    --[[
    Upvalues:
        [1] = u5
        [2] = u68
    --]]
    if checkAllowedMessageType(p180) then
        local v181 = findPlayer(p180.FromSpeaker)
        if v181 then
            if p180.FromSpeaker ~= u5.Name or u68:ShowOwnFilteredMessage() then
                u68:OnPlayerChatMessage(v181, p180.Message, nil)
            end
        else
            return
        end
    else
        return
    end
end)]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[BubbleChat]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Script" referent="366"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

-- [FilteringEnabled] Server Scripts are IMPOSSIBLE to save]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ChatServiceRunner]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="ModuleScript" referent="367"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local u1 = { 0.05, 0.1, 0.2 }
local v2 = {}
local u3 = game:GetService("RunService")
local u4 = game:GetService("Chat")
u4:WaitForChild("ClientChatModules")
local v5 = script.Parent
local v6 = u4:WaitForChild("ClientChatModules")
local u7 = {
    ["ChatColor"] = require(v6:WaitForChild("ChatSettings")).ErrorMessageTextColor or Color3.fromRGB(245, 50, 50)
}
local u8 = require(v6:WaitForChild("ChatConstants"))
local u9 = require(v5:WaitForChild("ChatChannel"))
local u10 = require(v5:WaitForChild("Speaker"))
local u11 = require(v5:WaitForChild("Util"))
local u12 = nil
pcall(function() --[[Anonymous function at line 38]]
    --[[
    Upvalues:
        [1] = u12
    --]]
    u12 = require(game:GetService("Chat").ClientChatModules.ChatLocalization)
end)
u12 = u12 or {}
if not (u12.FormatMessageToSend and u12.LocalizeFormattedMessage) then
    function u12.FormatMessageToSend(_, _, p13) --[[Anonymous function at line 42]]
        return p13
    end
end
local u14 = {}
u14.__index = u14
function u14.AddChannel(u15, u16, p17) --[[Anonymous function at line 55]]
    --[[
    Upvalues:
        [1] = u12
        [2] = u9
        [3] = u8
    --]]
    if u15.ChatChannels[u16:lower()] then
        error(string.format("Channel %q alrady exists.", u16))
    end
    local function v22(p18, p19) --[[Anonymous function at line 60]]
        --[[
        Upvalues:
            [1] = u15
            [2] = u16
            [3] = u12
        --]]
        if p19:lower() ~= "/leave" then
            return false
        end
        local v20 = u15:GetChannel(u16)
        local v21 = u15:GetSpeaker(p18)
        if v20 and v21 then
            if v20.Leavable then
                v21:LeaveChannel(u16)
                v21:SendSystemMessage(u12:FormatMessageToSend("GameChat_ChatService_YouHaveLeftChannel", string.format("You have left channel \'%s\'", u16), "RBX_NAME", u16), "System")
            else
                v21:SendSystemMessage(u12:FormatMessageToSend("GameChat_ChatService_CannotLeaveChannel", "You cannot leave this channel."), u16)
            end
        end
        return true
    end
    local v23 = u9.new(u15, u16)
    u15.ChatChannels[u16:lower()] = v23
    v23:RegisterProcessCommandsFunction("default_commands", v22, u8.HighPriority)
    local v24, v25 = pcall(function() --[[Anonymous function at line 89]]
        --[[
        Upvalues:
            [1] = u15
            [2] = u16
        --]]
        u15.eChannelAdded:Fire(u16)
    end)
    if not v24 and v25 then
        print("Error addding channel: " .. v25)
    end
    if p17 ~= nil then
        v23.AutoJoin = p17
        if p17 then
            for _, v26 in pairs(u15.Speakers) do
                v26:JoinChannel(u16)
            end
        end
    end
    return v23
end
function u14.RemoveChannel(u27, p28) --[[Anonymous function at line 106]]
    if u27.ChatChannels[p28:lower()] then
        local u29 = u27.ChatChannels[p28:lower()].Name
        u27.ChatChannels[p28:lower()]:InternalDestroy()
        u27.ChatChannels[p28:lower()] = nil
        local v30, v31 = pcall(function() --[[Anonymous function at line 113]]
            --[[
            Upvalues:
                [1] = u27
                [2] = u29
            --]]
            u27.eChannelRemoved:Fire(u29)
        end)
        if not v30 and v31 then
            print("Error removing channel: " .. v31)
            return
        end
    else
        warn(string.format("Channel %q does not exist.", p28))
    end
end
function u14.GetChannel(p32, p33) --[[Anonymous function at line 122]]
    return p32.ChatChannels[p33:lower()]
end
function u14.AddSpeaker(u34, u35) --[[Anonymous function at line 127]]
    --[[
    Upvalues:
        [1] = u10
    --]]
    if u34.Speakers[u35:lower()] then
        error("Speaker \"" .. u35 .. "\" already exists!")
    end
    local v36 = u10.new(u34, u35)
    u34.Speakers[u35:lower()] = v36
    local v37, v38 = pcall(function() --[[Anonymous function at line 135]]
        --[[
        Upvalues:
            [1] = u34
            [2] = u35
        --]]
        u34.eSpeakerAdded:Fire(u35)
    end)
    if not v37 and v38 then
        print("Error adding speaker: " .. v38)
    end
    return v36
end
function u14.InternalUnmuteSpeaker(p39, p40) --[[Anonymous function at line 143]]
    for _, v41 in pairs(p39.ChatChannels) do
        if v41:IsSpeakerMuted(p40) then
            v41:UnmuteSpeaker(p40)
        end
    end
end
function u14.RemoveSpeaker(u42, p43) --[[Anonymous function at line 151]]
    if u42.Speakers[p43:lower()] then
        local u44 = u42.Speakers[p43:lower()].Name
        u42:InternalUnmuteSpeaker(u44)
        u42.Speakers[p43:lower()]:InternalDestroy()
        u42.Speakers[p43:lower()] = nil
        local v45, v46 = pcall(function() --[[Anonymous function at line 160]]
            --[[
            Upvalues:
                [1] = u42
                [2] = u44
            --]]
            u42.eSpeakerRemoved:Fire(u44)
        end)
        if not v45 and v46 then
            print("Error removing speaker: " .. v46)
            return
        end
    else
        warn("Speaker \"" .. p43 .. "\" does not exist!")
    end
end
function u14.GetSpeaker(p47, p48) --[[Anonymous function at line 170]]
    return p47.Speakers[p48:lower()]
end
function u14.GetSpeakerByUserOrDisplayName(p49, p50) --[[Anonymous function at line 174]]
    local v51 = p49.Speakers[p50:lower()]
    if v51 then
        return v51
    end
    for _, v52 in pairs(p49.Speakers) do
        local v53 = v52:GetPlayer()
        if v53 and v53.DisplayName:lower() == p50:lower() then
            return v52
        end
    end
end
function u14.GetChannelList(p54) --[[Anonymous function at line 190]]
    local v55 = {}
    for _, v56 in pairs(p54.ChatChannels) do
        if not v56.Private then
            local v57 = v56.Name
            table.insert(v55, v57)
        end
    end
    return v55
end
function u14.GetAutoJoinChannelList(p58) --[[Anonymous function at line 200]]
    local v59 = {}
    for _, v60 in pairs(p58.ChatChannels) do
        if v60.AutoJoin then
            table.insert(v59, v60)
        end
    end
    return v59
end
function u14.GetSpeakerList(p61) --[[Anonymous function at line 210]]
    local v62 = {}
    for _, v63 in pairs(p61.Speakers) do
        local v64 = v63.Name
        table.insert(v62, v64)
    end
    return v62
end
function u14.SendGlobalSystemMessage(p65, p66) --[[Anonymous function at line 218]]
    for _, v67 in pairs(p65.Speakers) do
        v67:SendSystemMessage(p66, nil)
    end
end
function u14.RegisterFilterMessageFunction(p68, p69, p70, p71) --[[Anonymous function at line 224]]
    if p68.FilterMessageFunctions:HasFunction(p69) then
        error(string.format("FilterMessageFunction \'%s\' already exists", p69))
    end
    p68.FilterMessageFunctions:AddFunction(p69, p70, p71)
end
function u14.FilterMessageFunctionExists(p72, p73) --[[Anonymous function at line 231]]
    return p72.FilterMessageFunctions:HasFunction(p73)
end
function u14.UnregisterFilterMessageFunction(p74, p75) --[[Anonymous function at line 235]]
    if not p74.FilterMessageFunctions:HasFunction(p75) then
        error(string.format("FilterMessageFunction \'%s\' does not exists", p75))
    end
    p74.FilterMessageFunctions:RemoveFunction(p75)
end
function u14.RegisterProcessCommandsFunction(p76, p77, p78, p79) --[[Anonymous function at line 242]]
    if p76.ProcessCommandsFunctions:HasFunction(p77) then
        error(string.format("ProcessCommandsFunction \'%s\' already exists", p77))
    end
    p76.ProcessCommandsFunctions:AddFunction(p77, p78, p79)
end
function u14.ProcessCommandsFunctionExists(p80, p81) --[[Anonymous function at line 249]]
    return p80.ProcessCommandsFunctions:HasFunction(p81)
end
function u14.UnregisterProcessCommandsFunction(p82, p83) --[[Anonymous function at line 253]]
    if not p82.ProcessCommandsFunctions:HasFunction(p83) then
        error(string.format("ProcessCommandsFunction \'%s\' does not exist", p83))
    end
    p82.ProcessCommandsFunctions:RemoveFunction(p83)
end
local u84 = 0
local u85 = 0
local u86 = 0
function u14.InternalNotifyFilterIssue(p87) --[[Anonymous function at line 263]]
    --[[
    Upvalues:
        [1] = u85
        [2] = u86
        [3] = u84
        [4] = u12
        [5] = u7
    --]]
    if tick() - u85 > 60 then
        u86 = 0
    end
    u86 = u86 + 1
    u85 = tick()
    if u86 >= 3 and tick() - u84 > 60 then
        u84 = tick()
        local v88 = p87:GetChannel("System")
        if v88 then
            v88:SendSystemMessage(u12:FormatMessageToSend("GameChat_ChatService_ChatFilterIssues", "The chat filter is currently experiencing issues and messages may be slow to appear."), u7)
        end
    end
end
local u89 = {}
function u14.InternalApplyRobloxFilter(p90, p91, u92, u93) --[[Anonymous function at line 292]]
    --[[
    Upvalues:
        [1] = u3
        [2] = u4
        [3] = u1
        [4] = u89
    --]]
    if not u3:IsServer() or u3:IsStudio() then
        if not u89[u92] then
            u89[u92] = true
            wait()
        end
        return u92
    end
    local v94 = p90:GetSpeaker(p91)
    if u93 then
        u93 = p90:GetSpeaker(u93)
    end
    if v94 == nil then
        return nil
    end
    local u95 = v94:GetPlayer()
    if u93 then
        u93 = u93:GetPlayer()
    end
    if u95 == nil then
        return u92
    end
    local v96 = string.gsub(u92, " ", "")
    if string.len(v96) == 0 then
        return u92
    end
    local v97 = tick()
    local v98 = 0
    while true do
        local v99, v100 = pcall(function() --[[Anonymous function at line 315]]
            --[[
            Upvalues:
                [1] = u93
                [2] = u4
                [3] = u92
                [4] = u95
            --]]
            if u93 then
                return u4:FilterStringAsync(u92, u95, u93)
            else
                return u4:FilterStringForBroadcast(u92, u95)
            end
        end)
        if v99 then
            break
        end
        warn("Error filtering message:", v100)
        v98 = v98 + 1
        if v98 > 3 or tick() - v97 > 60 then
            p90:InternalNotifyFilterIssue()
            return nil
        end
        local v101 = u1
        local v102 = #u1
        local v103 = v101[math.min(v102, v98)]
        local v104 = v103 + (math.random() * 2 - 1) * v103
        wait(v104)
    end
    return v100
end
function u14.InternalApplyRobloxFilterAndTranslate(p105, p106, u107, u108, u109) --[[Anonymous function at line 351]]
    --[[
    Upvalues:
        [1] = u3
    --]]
    local v110 = u3:IsServer()
    if v110 then
        v110 = not u3:IsStudio()
    end
    if not v110 then
        wait()
        return true, false, u108
    end
    local v111 = p105:GetSpeaker(p106)
    if v111 == nil then
        return false, nil, nil
    end
    local u112 = v111:GetPlayer()
    if u112 == nil then
        return true, false, u108
    end
    local v113 = string.gsub(u108, " ", "")
    if string.len(v113) == 0 then
        return true, false, u108
    end
    local v114, v115 = pcall(function() --[[Anonymous function at line 369]]
        --[[
        Upvalues:
            [1] = u108
            [2] = u112
            [3] = u107
            [4] = u109
        --]]
        return game:GetService("TextService"):FilterAndTranslateStringAsync(u108, u112.UserId, u107, u109)
    end)
    if v114 then
        return true, true, v115
    end
    warn("Error filtering and translating message", u108, v115)
    p105:InternalNotifyFilterIssue()
    return false, nil, nil
end
function u14.InternalApplyRobloxFilterNewAPI(p116, p117, u118, u119) --[[Anonymous function at line 388]]
    --[[
    Upvalues:
        [1] = u3
    --]]
    local v120 = u3:IsServer()
    if v120 then
        v120 = not u3:IsStudio()
    end
    if not v120 then
        wait()
        return true, false, u118
    end
    local v121 = p116:GetSpeaker(p117)
    if v121 == nil then
        return false, nil, nil
    end
    local u122 = v121:GetPlayer()
    if u122 == nil then
        return true, false, u118
    end
    local v123 = string.gsub(u118, " ", "")
    if string.len(v123) == 0 then
        return true, false, u118
    end
    local v124, v125 = pcall(function() --[[Anonymous function at line 407]]
        --[[
        Upvalues:
            [1] = u118
            [2] = u122
            [3] = u119
        --]]
        return game:GetService("TextService"):FilterStringAsync(u118, u122.UserId, u119)
    end)
    if v124 then
        return true, true, v125
    end
    warn("Error filtering message:", u118, v125)
    p116:InternalNotifyFilterIssue()
    return false, nil, nil
end
function u14.InternalDoMessageFilter(p126, u127, u128, u129) --[[Anonymous function at line 426]]
    for v130, u131, _ in p126.FilterMessageFunctions:GetIterator() do
        local v132, v133 = pcall(function() --[[Anonymous function at line 430]]
            --[[
            Upvalues:
                [1] = u131
                [2] = u127
                [3] = u128
                [4] = u129
            --]]
            u131(u127, u128, u129)
        end)
        if not v132 then
            warn(string.format("DoMessageFilter Function \'%s\' failed for reason: %s", v130, v133))
        end
    end
end
function u14.InternalDoProcessCommands(p134, u135, u136, u137) --[[Anonymous function at line 440]]
    for v138, u139, _ in p134.ProcessCommandsFunctions:GetIterator() do
        local v141, v142 = pcall(function() --[[Anonymous function at line 444]]
            --[[
            Upvalues:
                [1] = u139
                [2] = u135
                [3] = u136
                [4] = u137
            --]]
            local v140 = u139(u135, u136, u137)
            if type(v140) ~= "boolean" then
                error("Process command functions must return a bool")
            end
            return v140
        end)
        if v141 then
            if v142 then
                return true
            end
        else
            warn(string.format("DoProcessCommands Function \'%s\' failed for reason: %s", v138, v142))
        end
    end
    return false
end
function u14.InternalGetUniqueMessageId(p143) --[[Anonymous function at line 462]]
    local v144 = p143.MessageIdCounter
    p143.MessageIdCounter = v144 + 1
    return v144
end
function u14.InternalAddSpeakerWithPlayerObject(u145, u146, p147, p148) --[[Anonymous function at line 468]]
    --[[
    Upvalues:
        [1] = u10
    --]]
    if u145.Speakers[u146:lower()] then
        error("Speaker \"" .. u146 .. "\" already exists!")
    end
    local v149 = u10.new(u145, u146)
    v149:InternalAssignPlayerObject(p147)
    u145.Speakers[u146:lower()] = v149
    if p148 then
        local v150, v151 = pcall(function() --[[Anonymous function at line 478]]
            --[[
            Upvalues:
                [1] = u145
                [2] = u146
            --]]
            u145.eSpeakerAdded:Fire(u146)
        end)
        if not v150 and v151 then
            print("Error adding speaker: " .. v151)
        end
    end
    return v149
end
function u14.InternalFireSpeakerAdded(u152, u153) --[[Anonymous function at line 487]]
    local v154, v155 = pcall(function() --[[Anonymous function at line 488]]
        --[[
        Upvalues:
            [1] = u152
            [2] = u153
        --]]
        u152.eSpeakerAdded:Fire(u153)
    end)
    if not v154 and v155 then
        print("Error firing speaker added: " .. v155)
    end
end
function v2.new() --[[Anonymous function at line 497]]
    --[[
    Upvalues:
        [1] = u14
        [2] = u11
    --]]
    local v156 = u14
    local v157 = setmetatable({}, v156)
    v157.MessageIdCounter = 0
    v157.ChatChannels = {}
    v157.Speakers = {}
    v157.FilterMessageFunctions = u11:NewSortedFunctionContainer()
    v157.ProcessCommandsFunctions = u11:NewSortedFunctionContainer()
    v157.eChannelAdded = Instance.new("BindableEvent")
    v157.eChannelRemoved = Instance.new("BindableEvent")
    v157.eSpeakerAdded = Instance.new("BindableEvent")
    v157.eSpeakerRemoved = Instance.new("BindableEvent")
    v157.ChannelAdded = v157.eChannelAdded.Event
    v157.ChannelRemoved = v157.eChannelRemoved.Event
    v157.SpeakerAdded = v157.eSpeakerAdded.Event
    v157.SpeakerRemoved = v157.eSpeakerRemoved.Event
    v157.ChatServiceMajorVersion = 0
    v157.ChatServiceMinorVersion = 5
    return v157
end
return v2.new()]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ChatService]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="368"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1, v2 = pcall(function() --[[Anonymous function at line 8]]
    return UserSettings():IsUserFeatureEnabled("UserShouldMuteUnfilteredMessage")
end)
local u3 = v1 and v2
local v4, v5 = pcall(function() --[[Anonymous function at line 13]]
    return UserSettings():IsUserFeatureEnabled("UserRemoveMessageOnTextFilterFailures")
end)
local u6 = v4 and v5
local v7, v8 = pcall(function() --[[Anonymous function at line 21]]
    return UserSettings():IsUserFeatureEnabled("UserIsChatTranslationEnabled2")
end)
local u9 = v7 and v8
local v10 = {}
local v11 = script.Parent
local u12 = game:GetService("Chat")
local u13 = game:GetService("RunService")
local v14 = u12:WaitForChild("ClientChatModules")
local u15 = require(v14:WaitForChild("ChatSettings"))
local u16 = require(v14:WaitForChild("ChatConstants"))
local u17 = require(v11:WaitForChild("Util"))
local u18 = nil
pcall(function() --[[Anonymous function at line 42]]
    --[[
    Upvalues:
        [1] = u18
    --]]
    u18 = require(game:GetService("Chat").ClientChatModules.ChatLocalization)
end)
u18 = u18 or {}
if not (u18.FormatMessageToSend and u18.LocalizeFormattedMessage) then
    function u18.FormatMessageToSend(_, _, p19) --[[Anonymous function at line 46]]
        return p19
    end
end
local u20 = {}
u20.__index = u20
function u20.SendSystemMessage(u21, p22, p23) --[[Anonymous function at line 55]]
    local u24 = u21:InternalCreateMessageObject(p22, nil, true, p23)
    local v25, v26 = pcall(function() --[[Anonymous function at line 58]]
        --[[
        Upvalues:
            [1] = u21
            [2] = u24
        --]]
        u21.eMessagePosted:Fire(u24)
    end)
    if not v25 and v26 then
        print("Error posting message: " .. v26)
    end
    u21:InternalAddMessageToHistoryLog(u24)
    for _, v27 in pairs(u21.Speakers) do
        v27:InternalSendSystemMessage(u24, u21.Name)
    end
    return u24
end
function u20.SendSystemMessageToSpeaker(p28, p29, p30, p31) --[[Anonymous function at line 72]]
    --[[
    Upvalues:
        [1] = u13
    --]]
    local v32 = p28.Speakers[p30]
    if v32 then
        v32:InternalSendSystemMessage(p28:InternalCreateMessageObject(p29, nil, true, p31), p28.Name)
    elseif u13:IsStudio() then
        warn(string.format("Speaker \'%s\' is not in channel \'%s\' and cannot be sent a system message", p30, p28.Name))
    end
end
function u20.SendMessageObjToFilters(p33, p34, p35, p36) --[[Anonymous function at line 82]]
    local v37 = p35.Message
    p35.Message = p34
    p33:InternalDoMessageFilter(p36.Name, p35, p33.Name)
    p33.ChatService:InternalDoMessageFilter(p36.Name, p35, p33.Name)
    local v38 = p35.Message
    p35.Message = v37
    return v38
end
function u20.CanCommunicateByUserId(_, u39, u40) --[[Anonymous function at line 92]]
    --[[
    Upvalues:
        [1] = u13
        [2] = u12
    --]]
    if u13:IsStudio() then
        return true
    end
    if u39 == 0 or u40 == 0 then
        return true
    end
    local v41, v42 = pcall(function() --[[Anonymous function at line 100]]
        --[[
        Upvalues:
            [1] = u12
            [2] = u39
            [3] = u40
        --]]
        return u12:CanUsersChatAsync(u39, u40)
    end)
    return v41 and v42
end
function u20.CanCommunicate(p43, p44, p45) --[[Anonymous function at line 106]]
    local v46 = p44:GetPlayer()
    local v47 = p45:GetPlayer()
    return not (v46 and v47) and true or p43:CanCommunicateByUserId(v46.UserId, v47.UserId)
end
function u20.SendMessageToSpeaker(p48, p49, p50, p51, p52) --[[Anonymous function at line 115]]
    --[[
    Upvalues:
        [1] = u13
    --]]
    local v53 = p48.Speakers[p50]
    local v54 = p48.ChatService:GetSpeaker(p51)
    if v53 and v54 then
        if v53:IsSpeakerMuted(p51) then
            return
        end
        if not p48:CanCommunicate(v53, v54) then
            return
        end
        local v55 = p48:InternalCreateMessageObject(p49, p51, p50 == p51, p52)
        local v56 = p48:SendMessageObjToFilters(p49, v55, p51)
        v53:InternalSendMessage(v55, p48.Name)
        local v57 = p48.Private and Enum.TextFilterContext.PrivateChat or Enum.TextFilterContext.PublicChat
        local v58, v59, v60 = p48.ChatService:InternalApplyRobloxFilterNewAPI(v55.FromSpeaker, v56, v57)
        if v58 then
            v55.FilterResult = v60
            v55.IsFilterResult = v59
            v55.IsFiltered = true
            v53:InternalSendFilteredMessageWithFilterResult(v55, p48.Name)
            return
        end
    elseif u13:IsStudio() then
        warn(string.format("Speaker \'%s\' is not in channel \'%s\' and cannot be sent a message", p50, p48.Name))
    end
end
function u20.KickSpeaker(p61, p62, p63) --[[Anonymous function at line 151]]
    local v64 = p61.ChatService:GetSpeaker(p62)
    if not v64 then
        error("Speaker \"" .. p62 .. "\" does not exist!")
    end
    local v65 = v64:GetNameForDisplay()
    local v66, v67
    if p63 then
        v66 = string.format("You were kicked from \'%s\' for the following reason(s): %s", p61.Name, p63)
        v67 = string.format("%s was kicked for the following reason(s): %s", v65, p63)
    else
        v66 = string.format("You were kicked from \'%s\'", p61.Name)
        v67 = string.format("%s was kicked", v65)
    end
    p61:SendSystemMessageToSpeaker(v66, p62)
    v64:LeaveChannel(p61.Name)
    p61:SendSystemMessage(v67)
end
function u20.MuteSpeaker(u68, u69, u70, u71) --[[Anonymous function at line 174]]
    local v72 = u68.ChatService:GetSpeaker(u69)
    if not v72 then
        error("Speaker \"" .. u69 .. "\" does not exist!")
    end
    u68.Mutes[u69:lower()] = (u71 == 0 or u71 == nil) and 0 or os.time() + u71
    if u70 then
        local v73 = v72:GetNameForDisplay()
        u68:SendSystemMessage(string.format("%s was muted for the following reason(s): %s", v73, u70))
    end
    local v74, v75 = pcall(function() --[[Anonymous function at line 188]]
        --[[
        Upvalues:
            [1] = u68
            [2] = u69
            [3] = u70
            [4] = u71
        --]]
        u68.eSpeakerMuted:Fire(u69, u70, u71)
    end)
    if not v74 and v75 then
        print("Error mutting speaker: " .. v75)
    end
    local u76 = u68.ChatService:GetSpeaker(u69)
    if u76 then
        local v77, v78 = pcall(function() --[[Anonymous function at line 195]]
            --[[
            Upvalues:
                [1] = u76
                [2] = u68
                [3] = u70
                [4] = u71
            --]]
            u76.eMuted:Fire(u68.Name, u70, u71)
        end)
        if not v77 and v78 then
            print("Error mutting speaker: " .. v78)
        end
    end
end
function u20.UnmuteSpeaker(u79, u80) --[[Anonymous function at line 203]]
    if not u79.ChatService:GetSpeaker(u80) then
        error("Speaker \"" .. u80 .. "\" does not exist!")
    end
    u79.Mutes[u80:lower()] = nil
    local v81, v82 = pcall(function() --[[Anonymous function at line 211]]
        --[[
        Upvalues:
            [1] = u79
            [2] = u80
        --]]
        u79.eSpeakerUnmuted:Fire(u80)
    end)
    if not v81 and v82 then
        print("Error unmuting speaker: " .. v82)
    end
    local u83 = u79.ChatService:GetSpeaker(u80)
    if u83 then
        local v84, v85 = pcall(function() --[[Anonymous function at line 218]]
            --[[
            Upvalues:
                [1] = u83
                [2] = u79
            --]]
            u83.eUnmuted:Fire(u79.Name)
        end)
        if not v84 and v85 then
            print("Error unmuting speaker: " .. v85)
        end
    end
end
function u20.IsSpeakerMuted(p86, p87) --[[Anonymous function at line 225]]
    return p86.Mutes[p87:lower()] ~= nil
end
function u20.GetSpeakerList(p88) --[[Anonymous function at line 229]]
    local v89 = {}
    for _, v90 in pairs(p88.Speakers) do
        local v91 = v90.Name
        table.insert(v89, v91)
    end
    return v89
end
function u20.RegisterFilterMessageFunction(p92, p93, p94, p95) --[[Anonymous function at line 237]]
    if p92.FilterMessageFunctions:HasFunction(p93) then
        error(string.format("FilterMessageFunction \'%s\' already exists", p93))
    end
    p92.FilterMessageFunctions:AddFunction(p93, p94, p95)
end
function u20.FilterMessageFunctionExists(p96, p97) --[[Anonymous function at line 244]]
    return p96.FilterMessageFunctions:HasFunction(p97)
end
function u20.UnregisterFilterMessageFunction(p98, p99) --[[Anonymous function at line 248]]
    if not p98.FilterMessageFunctions:HasFunction(p99) then
        error(string.format("FilterMessageFunction \'%s\' does not exists", p99))
    end
    p98.FilterMessageFunctions:RemoveFunction(p99)
end
function u20.RegisterProcessCommandsFunction(p100, p101, p102, p103) --[[Anonymous function at line 255]]
    if p100.ProcessCommandsFunctions:HasFunction(p101) then
        error(string.format("ProcessCommandsFunction \'%s\' already exists", p101))
    end
    p100.ProcessCommandsFunctions:AddFunction(p101, p102, p103)
end
function u20.ProcessCommandsFunctionExists(p104, p105) --[[Anonymous function at line 262]]
    return p104.ProcessCommandsFunctions:HasFunction(p105)
end
function u20.UnregisterProcessCommandsFunction(p106, p107) --[[Anonymous function at line 266]]
    if not p106.ProcessCommandsFunctions:HasFunction(p107) then
        error(string.format("ProcessCommandsFunction \'%s\' does not exist", p107))
    end
    p106.ProcessCommandsFunctions:RemoveFunction(p107)
end
function u20.GetHistoryLog(p108) --[[Anonymous function at line 281]]
    local v109 = p108.ChatHistory
    local v110 = {}
    for v111, v112 in pairs(v109) do
        v110[v111] = v112
    end
    return v110
end
function u20.GetHistoryLogForSpeaker(p113, p114) --[[Anonymous function at line 285]]
    --[[
    Upvalues:
        [1] = u16
    --]]
    local v115 = p114:GetPlayer()
    local v116 = not v115 and -1 or v115.UserId
    local v117 = {}
    for v118 = 1, #p113.ChatHistory do
        if p113:CanCommunicateByUserId(v116, p113.ChatHistory[v118].SpeakerUserId) then
            local v119 = p113.ChatHistory[v118]
            local v120 = {}
            for v121, v122 in pairs(v119) do
                v120[v121] = v122
            end
            if v120.MessageType == u16.MessageTypeDefault or v120.MessageType == u16.MessageTypeMeCommand then
                local v123 = v120.FilterResult
                if v120.IsFilterResult then
                    if v115 then
                        v120.Message = v123:GetChatForUserAsync(v115.UserId)
                    else
                        v120.Message = v123:GetNonChatStringForBroadcastAsync()
                    end
                else
                    v120.Message = v123
                end
            end
            table.insert(v117, v120)
        end
    end
    return v117
end
function u20.InternalDestroy(p124) --[[Anonymous function at line 323]]
    for _, v125 in pairs(p124.Speakers) do
        v125:LeaveChannel(p124.Name)
    end
    p124.eDestroyed:Fire()
    p124.eDestroyed:Destroy()
    p124.eMessagePosted:Destroy()
    p124.eSpeakerJoined:Destroy()
    p124.eSpeakerLeft:Destroy()
    p124.eSpeakerMuted:Destroy()
    p124.eSpeakerUnmuted:Destroy()
end
function u20.InternalDoMessageFilter(p126, u127, u128, u129) --[[Anonymous function at line 338]]
    for v130, u131, _ in p126.FilterMessageFunctions:GetIterator() do
        local v132, v133 = pcall(function() --[[Anonymous function at line 341]]
            --[[
            Upvalues:
                [1] = u131
                [2] = u127
                [3] = u128
                [4] = u129
            --]]
            u131(u127, u128, u129)
        end)
        if not v132 then
            warn(string.format("DoMessageFilter Function \'%s\' failed for reason: %s", v130, v133))
        end
    end
end
function u20.InternalDoProcessCommands(p134, u135, u136, u137) --[[Anonymous function at line 351]]
    for v138, u139, _ in p134.ProcessCommandsFunctions:GetIterator() do
        local v141, v142 = pcall(function() --[[Anonymous function at line 354]]
            --[[
            Upvalues:
                [1] = u139
                [2] = u135
                [3] = u136
                [4] = u137
            --]]
            local v140 = u139(u135, u136, u137)
            if type(v140) ~= "boolean" then
                error("Process command functions must return a bool")
            end
            return v140
        end)
        if v141 then
            if v142 then
                return true
            end
        else
            warn(string.format("DoProcessCommands Function \'%s\' failed for reason: %s", v138, v142))
        end
    end
    return false
end
function getLanguageCodeFromLocale(p143)
    return string.gmatch(p143, "[^-]+")() or "en"
end
function u20.InternalPostMessage(u144, p145, p146, p147) --[[Anonymous function at line 382]]
    --[[
    Upvalues:
        [1] = u18
        [2] = u12
        [3] = u3
        [4] = u9
        [5] = u6
    --]]
    if u144:InternalDoProcessCommands(p145.Name, p146, u144.Name) then
        return false
    end
    if u144.Mutes[p145.Name:lower()] ~= nil then
        local v148 = u144.Mutes[p145.Name:lower()]
        if v148 <= 0 or v148 >= os.time() then
            u144:SendSystemMessageToSpeaker(u18:FormatMessageToSend("GameChat_ChatChannel_MutedInChannel", "You are muted and cannot talk in this channel"), p145.Name)
            return false
        end
        u144:UnmuteSpeaker(p145.Name)
    end
    local u149 = u144:InternalCreateMessageObject(p146, p145.Name, false, p147)
    u149.Message = p146
    local u150 = nil
    pcall(function() --[[Anonymous function at line 400]]
        --[[
        Upvalues:
            [1] = u150
            [2] = u12
            [3] = u149
        --]]
        u150 = u12:InvokeChatCallback(Enum.ChatCallbackType.OnServerReceivingMessage, u149)
    end)
    u149.Message = nil
    if u150 then
        if u150.ShouldDeliver == false then
            return false
        end
        u149 = u150
    end
    local v151 = u144:SendMessageObjToFilters(p146, u149, p145)
    local v152 = {}
    for _, v153 in pairs(u144.Speakers) do
        if not v153:IsSpeakerMuted(p145.Name) and u144:CanCommunicate(p145, v153) then
            local v154 = v153.Name
            table.insert(v152, v154)
            if v153.Name == p145.Name then
                local v155 = {}
                for v156, v157 in pairs(u149) do
                    v155[v156] = v157
                end
                if u3 then
                    local v158 = u149.MessageLengthUtf8 or u149.MessageLength
                    v155.Message = string.rep("_", v158)
                else
                    v155.Message = v151
                end
                v155.IsFiltered = true
                v153:InternalSendMessage(v155, u144.Name)
            else
                v153:InternalSendMessage(u149, u144.Name)
            end
        end
    end
    local v159, v160 = pcall(function() --[[Anonymous function at line 439]]
        --[[
        Upvalues:
            [1] = u144
            [2] = u149
        --]]
        u144.eMessagePosted:Fire(u149)
    end)
    if not v159 and v160 then
        print("Error posting message: " .. v160)
    end
    local v161 = u144.Private and Enum.TextFilterContext.PrivateChat or Enum.TextFilterContext.PublicChat
    local v162 = nil
    if u9 then
        local v163 = {}
        local v164 = {}
        for _, v165 in pairs(u144.Speakers) do
            local v166 = v165:GetPlayer()
            if v166 ~= nil and v166.LocaleId ~= nil then
                v163[getLanguageCodeFromLocale(v166.LocaleId)] = true
            end
        end
        for v167, _ in v163 do
            table.insert(v164, v167)
        end
        local v168, v169, v170 = u144.ChatService:InternalApplyRobloxFilterAndTranslate(u149.FromSpeaker, v164, v151, v161)
        if v168 then
            if v169 then
                u149.FilterResult = v170.SourceText
            else
                u149.FilterResult = v170
            end
            u149.IsFilterResult = v169
            if v169 then
                v162 = v170
            end
        else
            if not u6 then
                return false
            end
            u149.IsFilterResult = false
            u149.FilterResult = ""
            u149.MessageLength = 0
        end
    else
        local v171, v172, v173 = u144.ChatService:InternalApplyRobloxFilterNewAPI(u149.FromSpeaker, v151, v161)
        if v171 then
            u149.FilterResult = v173
            u149.IsFilterResult = v172
        else
            if not u6 then
                return false
            end
            u149.IsFilterResult = false
            u149.FilterResult = ""
            u149.MessageLength = 0
        end
    end
    u149.IsFiltered = true
    u144:InternalAddMessageToHistoryLog(u149)
    for _, v174 in pairs(v152) do
        local v175 = u144.Speakers[v174]
        if v175 then
            local v176 = u9
            if v176 then
                if v162 then
                    if p145:GetPlayer() == nil or v175:GetPlayer() == nil then
                        v176 = false
                    else
                        v176 = p145:GetPlayer().LocaleId ~= v175:GetPlayer().LocaleId
                    end
                else
                    v176 = v162
                end
            end
            if v176 then
                v175:InternalSendFilteredMessageWithTranslatedFilterResult(u149, u144.Name, v162)
            else
                v175:InternalSendFilteredMessageWithFilterResult(u149, u144.Name)
            end
        end
    end
    local v177 = {}
    for _, v178 in pairs(u144.Speakers) do
        if not v178:IsSpeakerMuted(p145.Name) and u144:CanCommunicate(p145, v178) then
            local v179 = false
            for _, v180 in pairs(v152) do
                if v178.Name == v180 then
                    v179 = true
                    break
                end
            end
            if not v179 then
                local v181 = v178.Name
                table.insert(v177, v181)
            end
        end
    end
    for _, v182 in pairs(v177) do
        local v183 = u144.Speakers[v182]
        if v183 then
            v183:InternalSendFilteredMessageWithFilterResult(u149, u144.Name)
        end
    end
    return u149
end
function u20.InternalAddSpeaker(u184, u185) --[[Anonymous function at line 551]]
    if u184.Speakers[u185.Name] then
        warn("Speaker \"" .. u185.name .. "\" is already in the channel!")
    else
        u184.Speakers[u185.Name] = u185
        local v186, v187 = pcall(function() --[[Anonymous function at line 558]]
            --[[
            Upvalues:
                [1] = u184
                [2] = u185
            --]]
            u184.eSpeakerJoined:Fire(u185.Name)
        end)
        if not v186 and v187 then
            print("Error removing channel: " .. v187)
        end
    end
end
function u20.InternalRemoveSpeaker(u188, u189) --[[Anonymous function at line 564]]
    if u188.Speakers[u189.Name] then
        u188.Speakers[u189.Name] = nil
        local v190, v191 = pcall(function() --[[Anonymous function at line 571]]
            --[[
            Upvalues:
                [1] = u188
                [2] = u189
            --]]
            u188.eSpeakerLeft:Fire(u189.Name)
        end)
        if not v190 and v191 then
            print("Error removing speaker: " .. v191)
        end
    else
        warn("Speaker \"" .. u189.name .. "\" is not in the channel!")
    end
end
function u20.InternalRemoveExcessMessagesFromLog(p192) --[[Anonymous function at line 577]]
    local v193 = table.remove
    while #p192.ChatHistory > p192.MaxHistory do
        v193(p192.ChatHistory, 1)
    end
end
function u20.InternalAddMessageToHistoryLog(p194, p195) --[[Anonymous function at line 584]]
    local v196 = p194.ChatHistory
    table.insert(v196, p195)
    p194:InternalRemoveExcessMessagesFromLog()
end
function u20.GetMessageType(_, _, p197) --[[Anonymous function at line 590]]
    --[[
    Upvalues:
        [1] = u16
    --]]
    if p197 == nil then
        return u16.MessageTypeSystem
    else
        return u16.MessageTypeDefault
    end
end
function u20.InternalCreateMessageObject(p198, p199, p200, p201, p202) --[[Anonymous function at line 597]]
    --[[
    Upvalues:
        [1] = u15
    --]]
    local v203 = p198:GetMessageType(p199, p200)
    local v204 = -1
    local v205 = nil
    local v206
    if p200 then
        v206 = p198.ChatService:GetSpeaker(p200)
        if v206 then
            local v207 = v206:GetPlayer()
            if v207 then
                v204 = v207.UserId
                if u15.PlayerDisplayNamesEnabled then
                    v205 = v206:GetNameForDisplay()
                end
            else
                v204 = 0
            end
        end
    else
        v206 = nil
    end
    local v208 = {
        ["ID"] = p198.ChatService:InternalGetUniqueMessageId(),
        ["FromSpeaker"] = p200,
        ["SpeakerDisplayName"] = v205,
        ["SpeakerUserId"] = v204,
        ["OriginalChannel"] = p198.Name,
        ["MessageLength"] = string.len(p199),
        ["MessageLengthUtf8"] = utf8.len(utf8.nfcnormalize(p199)),
        ["MessageType"] = v203,
        ["IsFiltered"] = p201,
        ["Message"] = p201 and p199 and p199 or nil,
        ["Time"] = os.time(),
        ["ExtraData"] = {}
    }
    if v206 then
        for v209, v210 in pairs(v206.ExtraData) do
            v208.ExtraData[v209] = v210
        end
    end
    if p202 then
        for v211, v212 in pairs(p202) do
            v208.ExtraData[v211] = v212
        end
    end
    return v208
end
function u20.SetChannelNameColor(p213, p214) --[[Anonymous function at line 657]]
    p213.ChannelNameColor = p214
    for _, v215 in pairs(p213.Speakers) do
        v215:UpdateChannelNameColor(p213.Name, p214)
    end
end
function u20.GetWelcomeMessageForSpeaker(p216, p217) --[[Anonymous function at line 664]]
    return p216.GetWelcomeMessageFunction and p216.GetWelcomeMessageFunction(p217) or p216.WelcomeMessage
end
function u20.RegisterGetWelcomeMessageFunction(p218, p219) --[[Anonymous function at line 674]]
    if type(p219) ~= "function" then
        error("RegisterGetWelcomeMessageFunction must be called with a function.")
    end
    p218.GetWelcomeMessageFunction = p219
end
function u20.UnRegisterGetWelcomeMessageFunction(p220) --[[Anonymous function at line 681]]
    p220.GetWelcomeMessageFunction = nil
end
function v10.new(p221, p222, p223, p224) --[[Anonymous function at line 688]]
    --[[
    Upvalues:
        [1] = u20
        [2] = u17
    --]]
    local v225 = u20
    local v226 = setmetatable({}, v225)
    v226.ChatService = p221
    v226.Name = p222
    v226.WelcomeMessage = p223 or ""
    v226.GetWelcomeMessageFunction = nil
    v226.ChannelNameColor = p224
    v226.Joinable = true
    v226.Leavable = true
    v226.AutoJoin = false
    v226.Private = false
    v226.Speakers = {}
    v226.Mutes = {}
    v226.MaxHistory = 200
    v226.HistoryIndex = 0
    v226.ChatHistory = {}
    v226.FilterMessageFunctions = u17:NewSortedFunctionContainer()
    v226.ProcessCommandsFunctions = u17:NewSortedFunctionContainer()
    v226.eDestroyed = Instance.new("BindableEvent")
    v226.eMessagePosted = Instance.new("BindableEvent")
    v226.eSpeakerJoined = Instance.new("BindableEvent")
    v226.eSpeakerLeft = Instance.new("BindableEvent")
    v226.eSpeakerMuted = Instance.new("BindableEvent")
    v226.eSpeakerUnmuted = Instance.new("BindableEvent")
    v226.MessagePosted = v226.eMessagePosted.Event
    v226.SpeakerJoined = v226.eSpeakerJoined.Event
    v226.SpeakerLeft = v226.eSpeakerLeft.Event
    v226.SpeakerMuted = v226.eSpeakerMuted.Event
    v226.SpeakerUnmuted = v226.eSpeakerUnmuted.Event
    v226.Destroyed = v226.eDestroyed.Event
    return v226
end
return v10]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ChatChannel]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="369"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1 = {}
local u2 = game:GetService("RunService")
local v3 = game:GetService("Chat"):WaitForChild("ClientChatModules")
local u4 = require(v3:WaitForChild("ChatSettings"))
local _ = script.Parent
local v5, v6 = pcall(function() --[[Anonymous function at line 16]]
    return UserSettings():IsUserFeatureEnabled("UserRemoveMessageOnTextFilterFailures")
end)
local u7 = v5 and v6
local _, _ = pcall(function() --[[Anonymous function at line 24]]
    return UserSettings():IsUserFeatureEnabled("UserIsChatTranslationEnabled2")
end)
local u8 = {}
local u9 = {
    ["eDestroyed"] = true,
    ["eSaidMessage"] = true,
    ["eReceivedMessage"] = true,
    ["eReceivedUnfilteredMessage"] = true,
    ["eMessageDoneFiltering"] = true,
    ["eReceivedSystemMessage"] = true,
    ["eChannelJoined"] = true,
    ["eChannelLeft"] = true,
    ["eMuted"] = true,
    ["eUnmuted"] = true,
    ["eExtraDataUpdated"] = true,
    ["eMainChannelSet"] = true,
    ["eChannelNameColorUpdated"] = true
}
local u10 = {
    ["Destroyed"] = "eDestroyed",
    ["SaidMessage"] = "eSaidMessage",
    ["ReceivedMessage"] = "eReceivedMessage",
    ["ReceivedUnfilteredMessage"] = "eReceivedUnfilteredMessage",
    ["RecievedUnfilteredMessage"] = "eReceivedUnfilteredMessage",
    ["MessageDoneFiltering"] = "eMessageDoneFiltering",
    ["ReceivedSystemMessage"] = "eReceivedSystemMessage",
    ["ChannelJoined"] = "eChannelJoined",
    ["ChannelLeft"] = "eChannelLeft",
    ["Muted"] = "eMuted",
    ["Unmuted"] = "eUnmuted",
    ["ExtraDataUpdated"] = "eExtraDataUpdated",
    ["MainChannelSet"] = "eMainChannelSet",
    ["ChannelNameColorUpdated"] = "eChannelNameColorUpdated"
}
function u8.__index(p11, p12) --[[Anonymous function at line 76]]
    --[[
    Upvalues:
        [1] = u8
        [2] = u9
        [3] = u10
    --]]
    local v13 = u8
    local v14 = rawget(v13, p12)
    if v14 then
        return v14
    end
    if u9[p12] and not rawget(p11, p12) then
        local v15 = Instance.new
        rawset(p11, p12, v15("BindableEvent"))
    end
    local v16 = u10[p12]
    if v16 and not rawget(p11, p12) then
        if not rawget(p11, v16) then
            local v17 = Instance.new
            rawset(p11, v16, v17("BindableEvent"))
        end
        local v18 = rawget(p11, v16).Event
        rawset(p11, p12, v18)
    end
    return rawget(p11, p12)
end
function u8.LazyFire(p19, p20, ...) --[[Anonymous function at line 93]]
    local v21 = rawget(p19, p20)
    if v21 then
        v21:Fire(...)
    end
end
function u8.SayMessage(u22, p23, u24, p25) --[[Anonymous function at line 100]]
    if u22.ChatService:InternalDoProcessCommands(u22.Name, p23, u24) then
        return
    elseif u24 then
        local v26 = u22.Channels[u24:lower()]
        if v26 then
            local u27 = v26:InternalPostMessage(u22, p23, p25)
            if u27 then
                pcall(function() --[[Anonymous function at line 115]]
                    --[[
                    Upvalues:
                        [1] = u22
                        [2] = u27
                        [3] = u24
                    --]]
                    u22:LazyFire("eSaidMessage", u27, u24)
                end)
            end
            return u27
        end
    end
end
function u8.JoinChannel(u28, p29) --[[Anonymous function at line 123]]
    if u28.Channels[p29:lower()] then
        warn("Speaker is already in channel \"" .. p29 .. "\"")
    else
        local u30 = u28.ChatService:GetChannel(p29)
        if not u30 then
            error("Channel \"" .. p29 .. "\" does not exist!")
        end
        u28.Channels[p29:lower()] = u30
        u30:InternalAddSpeaker(u28)
        local v31, v32 = pcall(function() --[[Anonymous function at line 136]]
            --[[
            Upvalues:
                [1] = u28
                [2] = u30
            --]]
            u28.eChannelJoined:Fire(u30.Name, u30:GetWelcomeMessageForSpeaker(u28))
        end)
        if not v31 and v32 then
            print("Error joining channel: " .. v32)
        end
    end
end
function u8.LeaveChannel(u33, p34) --[[Anonymous function at line 144]]
    if u33.Channels[p34:lower()] then
        local u35 = u33.Channels[p34:lower()]
        u33.Channels[p34:lower()] = nil
        u35:InternalRemoveSpeaker(u33)
        local v36, v37 = pcall(function() --[[Anonymous function at line 154]]
            --[[
            Upvalues:
                [1] = u33
                [2] = u35
            --]]
            u33:LazyFire("eChannelLeft", u35.Name)
            if u33.PlayerObj then
                u33.EventFolder.OnChannelLeft:FireClient(u33.PlayerObj, u35.Name)
            end
        end)
        if not v36 and v37 then
            print("Error leaving channel: " .. v37)
        end
    else
        warn("Speaker is not in channel \"" .. p34 .. "\"")
    end
end
function u8.IsInChannel(p38, p39) --[[Anonymous function at line 165]]
    return p38.Channels[p39:lower()] ~= nil
end
function u8.GetChannelList(p40) --[[Anonymous function at line 169]]
    local v41 = {}
    for _, v42 in pairs(p40.Channels) do
        local v43 = v42.Name
        table.insert(v41, v43)
    end
    return v41
end
function u8.SendMessage(p44, p45, p46, p47, p48) --[[Anonymous function at line 177]]
    --[[
    Upvalues:
        [1] = u2
    --]]
    local v49 = p44.Channels[p46:lower()]
    if v49 then
        v49:SendMessageToSpeaker(p45, p44.Name, p47, p48)
    elseif u2:IsStudio() then
        warn(string.format("Speaker \'%s\' is not in channel \'%s\' and cannot receive a message in it.", p44.Name, p46))
    end
end
function u8.SendSystemMessage(p50, p51, p52, p53) --[[Anonymous function at line 188]]
    --[[
    Upvalues:
        [1] = u2
    --]]
    local v54 = p50.Channels[p52:lower()]
    if v54 then
        v54:SendSystemMessageToSpeaker(p51, p50.Name, p53)
    elseif u2:IsStudio() then
        warn(string.format("Speaker \'%s\' is not in channel \'%s\' and cannot receive a system message in it.", p50.Name, p52))
    end
end
function u8.GetPlayer(p55) --[[Anonymous function at line 199]]
    return p55.PlayerObj
end
function u8.GetNameForDisplay(p56) --[[Anonymous function at line 203]]
    --[[
    Upvalues:
        [1] = u4
    --]]
    if u4.PlayerDisplayNamesEnabled then
        local v57 = p56:GetPlayer()
        if v57 then
            return v57.DisplayName
        else
            return p56.Name
        end
    else
        return p56.Name
    end
end
function u8.SetExtraData(p58, p59, p60) --[[Anonymous function at line 217]]
    p58.ExtraData[p59] = p60
    p58:LazyFire("eExtraDataUpdated", p59, p60)
end
function u8.GetExtraData(p61, p62) --[[Anonymous function at line 222]]
    return p61.ExtraData[p62]
end
function u8.SetMainChannel(u63, u64) --[[Anonymous function at line 226]]
    local v65, v66 = pcall(function() --[[Anonymous function at line 227]]
        --[[
        Upvalues:
            [1] = u63
            [2] = u64
        --]]
        u63:LazyFire("eMainChannelSet", u64)
        if u63.PlayerObj then
            u63.EventFolder.OnMainChannelSet:FireClient(u63.PlayerObj, u64)
        end
    end)
    if not v65 and v66 then
        print("Error setting main channel: " .. v66)
    end
end
function u8.AddMutedSpeaker(p67, p68) --[[Anonymous function at line 239]]
    p67.MutedSpeakers[p68:lower()] = true
end
function u8.RemoveMutedSpeaker(p69, p70) --[[Anonymous function at line 243]]
    p69.MutedSpeakers[p70:lower()] = false
end
function u8.IsSpeakerMuted(p71, p72) --[[Anonymous function at line 247]]
    return p71.MutedSpeakers[p72:lower()]
end
function u8.InternalDestroy(p73) --[[Anonymous function at line 253]]
    for _, v74 in pairs(p73.Channels) do
        v74:InternalRemoveSpeaker(p73)
    end
    p73.eDestroyed:Fire()
    p73.EventFolder = nil
    p73.eDestroyed:Destroy()
    p73.eSaidMessage:Destroy()
    p73.eReceivedMessage:Destroy()
    p73.eReceivedUnfilteredMessage:Destroy()
    p73.eMessageDoneFiltering:Destroy()
    p73.eReceivedSystemMessage:Destroy()
    p73.eChannelJoined:Destroy()
    p73.eChannelLeft:Destroy()
    p73.eMuted:Destroy()
    p73.eUnmuted:Destroy()
    p73.eExtraDataUpdated:Destroy()
    p73.eMainChannelSet:Destroy()
    p73.eChannelNameColorUpdated:Destroy()
end
function u8.InternalAssignPlayerObject(p75, p76) --[[Anonymous function at line 276]]
    p75.PlayerObj = p76
end
function u8.InternalAssignEventFolder(p77, p78) --[[Anonymous function at line 280]]
    p77.EventFolder = p78
end
function u8.InternalSendMessage(u79, u80, u81) --[[Anonymous function at line 284]]
    local v82, v83 = pcall(function() --[[Anonymous function at line 285]]
        --[[
        Upvalues:
            [1] = u79
            [2] = u80
            [3] = u81
        --]]
        u79:LazyFire("eReceivedUnfilteredMessage", u80, u81)
        if u79.PlayerObj then
            u79.EventFolder.OnNewMessage:FireClient(u79.PlayerObj, u80, u81)
        end
    end)
    if not v82 and v83 then
        print("Error sending internal message: " .. v83)
    end
end
function u8.InternalSendFilteredMessage(u84, u85, u86) --[[Anonymous function at line 296]]
    local v87, v88 = pcall(function() --[[Anonymous function at line 297]]
        --[[
        Upvalues:
            [1] = u84
            [2] = u85
            [3] = u86
        --]]
        u84:LazyFire("eReceivedMessage", u85, u86)
        u84:LazyFire("eMessageDoneFiltering", u85, u86)
        if u84.PlayerObj then
            u84.EventFolder.OnMessageDoneFiltering:FireClient(u84.PlayerObj, u85, u86)
        end
    end)
    if not v87 and v88 then
        print("Error sending internal filtered message: " .. v88)
    end
end
function u8.InternalSendFilteredMessageWithTranslatedFilterResult(p89, p90, p91, p92) --[[Anonymous function at line 312]]
    --[[
    Upvalues:
        [1] = u7
    --]]
    local u93 = {}
    for v94, v95 in pairs(p90) do
        u93[v94] = v95
    end
    local u96 = u93.FilterResult
    local u97 = p89:GetPlayer()
    local u98
    if u97 == nil then
        u98 = nil
    else
        u98 = p92:GetTranslationForLocale(u97.LocaleId)
    end
    local u99 = ""
    local u100 = nil
    pcall(function() --[[Anonymous function at line 322]]
        --[[
        Upvalues:
            [1] = u93
            [2] = u97
            [3] = u99
            [4] = u96
            [5] = u98
            [6] = u100
        --]]
        if u93.IsFilterResult then
            if u97 then
                u99 = u96:GetChatForUserAsync(u97.UserId)
                if u98 then
                    u100 = u98:GetChatForUserAsync(u97.UserId)
                    return
                end
            else
                u99 = u96:GetNonChatStringForBroadcastAsync()
                if u98 then
                    u100 = u98:GetNonChatStringForBroadcastAsync()
                    return
                end
            end
        else
            u99 = u96
        end
    end)
    if u7 then
        u93.Message = u99
        if u100 then
            u93.TranslatedMessage = u100
        end
        u93.FilterResult = nil
        p89:InternalSendFilteredMessage(u93, p91)
    elseif #u99 > 0 then
        u93.Message = u99
        if u100 then
            u93.TranslatedMessage = u100
        end
        u93.FilterResult = nil
        p89:InternalSendFilteredMessage(u93, p91)
    end
end
function u8.InternalSendFilteredMessageWithFilterResult(p101, p102, p103) --[[Anonymous function at line 358]]
    --[[
    Upvalues:
        [1] = u7
    --]]
    local u104 = {}
    for v105, v106 in pairs(p102) do
        u104[v105] = v106
    end
    local u107 = u104.FilterResult
    local u108 = p101:GetPlayer()
    local u109 = ""
    pcall(function() --[[Anonymous function at line 365]]
        --[[
        Upvalues:
            [1] = u104
            [2] = u108
            [3] = u109
            [4] = u107
        --]]
        if u104.IsFilterResult then
            if u108 then
                u109 = u107:GetChatForUserAsync(u108.UserId)
            else
                u109 = u107:GetNonChatStringForBroadcastAsync()
            end
        else
            u109 = u107
            return
        end
    end)
    if u7 then
        u104.Message = u109
        u104.FilterResult = nil
        p101:InternalSendFilteredMessage(u104, p103)
    elseif #u109 > 0 then
        u104.Message = u109
        u104.FilterResult = nil
        p101:InternalSendFilteredMessage(u104, p103)
    end
end
function u8.InternalSendSystemMessage(u110, u111, u112) --[[Anonymous function at line 394]]
    local v113, v114 = pcall(function() --[[Anonymous function at line 395]]
        --[[
        Upvalues:
            [1] = u110
            [2] = u111
            [3] = u112
        --]]
        u110:LazyFire("eReceivedSystemMessage", u111, u112)
        if u110.PlayerObj then
            u110.EventFolder.OnNewSystemMessage:FireClient(u110.PlayerObj, u111, u112)
        end
    end)
    if not v113 and v114 then
        print("Error sending internal system message: " .. v114)
    end
end
function u8.UpdateChannelNameColor(p115, p116, p117) --[[Anonymous function at line 406]]
    p115:LazyFire("eChannelNameColorUpdated", p116, p117)
    if p115.PlayerObj then
        p115.EventFolder.ChannelNameColorUpdated:FireClient(p115.PlayerObj, p116, p117)
    end
end
function v1.new(p118, p119) --[[Anonymous function at line 416]]
    --[[
    Upvalues:
        [1] = u8
    --]]
    local v120 = u8
    local v121 = setmetatable({}, v120)
    v121.ChatService = p118
    v121.PlayerObj = nil
    v121.Name = p119
    v121.ExtraData = {}
    v121.Channels = {}
    v121.MutedSpeakers = {}
    v121.EventFolder = nil
    return v121
end
return v1]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Speaker]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="370"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1 = game:GetService("Chat"):WaitForChild("ClientChatModules")
local v2 = require(v1:WaitForChild("ChatConstants")).StandardPriority
local u3 = v2 == nil and 10 or v2
local v4 = {}
v4.__index = v4
local u5 = {}
local u6 = {}
u6.__index = u6
function u6.RebuildProcessCommandsPriorities(p7) --[[Anonymous function at line 25]]
    p7.RegisteredPriorites = {}
    for v8, v9 in pairs(p7.FunctionMap) do
        local v10 = true
        for _, _ in pairs(v9) do
            v10 = false
            break
        end
        if not v10 then
            local v11 = p7.RegisteredPriorites
            table.insert(v11, v8)
        end
    end
    table.sort(p7.RegisteredPriorites, function(p12, p13) --[[Anonymous function at line 37]]
        return p13 < p12
    end)
end
function u6.HasFunction(p14, p15) --[[Anonymous function at line 42]]
    return p14.RegisteredFunctions[p15] ~= nil
end
function u6.RemoveFunction(p16, p17) --[[Anonymous function at line 49]]
    local v18 = p16.RegisteredFunctions[p17]
    p16.RegisteredFunctions[p17] = nil
    p16.FunctionMap[v18][p17] = nil
    p16:RebuildProcessCommandsPriorities()
end
function u6.AddFunction(p19, p20, p21, p22) --[[Anonymous function at line 56]]
    --[[
    Upvalues:
        [1] = u3
    --]]
    if p22 == nil then
        p22 = u3
    end
    if p19.RegisteredFunctions[p20] then
        error(p20 .. " is already in use!")
    end
    p19.RegisteredFunctions[p20] = p22
    if p19.FunctionMap[p22] == nil then
        p19.FunctionMap[p22] = {}
    end
    p19.FunctionMap[p22][p20] = p21
    p19:RebuildProcessCommandsPriorities()
end
function u6.GetIterator(u23) --[[Anonymous function at line 75]]
    local u24 = 1
    local u25 = nil
    local u26 = nil
    return function() --[[Anonymous function at line 80]]
        --[[
        Upvalues:
            [1] = u24
            [2] = u23
            [3] = u25
            [4] = u26
        --]]
        while u24 <= #u23.RegisteredPriorites do
            local v27 = u23.RegisteredPriorites[u24]
            local v28, v29 = next(u23.FunctionMap[v27], u25)
            u25 = v28
            u26 = v29
            if u25 ~= nil then
                return u25, u26, v27
            end
            u24 = u24 + 1
        end
    end
end
function u5.new() --[[Anonymous function at line 96]]
    --[[
    Upvalues:
        [1] = u6
    --]]
    local v30 = u6
    local v31 = setmetatable({}, v30)
    v31.RegisteredFunctions = {}
    v31.RegisteredPriorites = {}
    v31.FunctionMap = {}
    return v31
end
function v4.NewSortedFunctionContainer(_) --[[Anonymous function at line 107]]
    --[[
    Upvalues:
        [1] = u5
    --]]
    return u5.new()
end
return v4]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Util]]></string><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="Folder" referent="371"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ClientChatModules]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="ModuleScript" referent="372"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1 = game:GetService("Players")
local v2 = script.Parent
local v3 = require(v2:WaitForChild("ChatConstants"))
local u4 = {
    ["WindowDraggable"] = false,
    ["WindowResizable"] = false,
    ["ShowChannelsBar"] = false,
    ["GamepadNavigationEnabled"] = false,
    ["AllowMeCommand"] = false,
    ["ShowUserOwnFilteredMessage"] = true,
    ["ChatOnWithTopBarOff"] = false,
    ["ScreenGuiDisplayOrder"] = 6,
    ["ShowFriendJoinNotification"] = true,
    ["BubbleChatEnabled"] = v1.BubbleChat,
    ["ClassicChatEnabled"] = v1.ClassicChat,
    ["ChatWindowTextSize"] = 18,
    ["ChatChannelsTabTextSize"] = 18,
    ["ChatBarTextSize"] = 18,
    ["ChatWindowTextSizePhone"] = 14,
    ["ChatChannelsTabTextSizePhone"] = 18,
    ["ChatBarTextSizePhone"] = 14,
    ["DefaultFont"] = Enum.Font.SourceSansBold,
    ["ChatBarFont"] = Enum.Font.SourceSansBold,
    ["BackGroundColor"] = Color3.new(0, 0, 0),
    ["DefaultMessageColor"] = Color3.new(1, 1, 1),
    ["DefaultNameColor"] = Color3.new(1, 1, 1),
    ["ChatBarBackGroundColor"] = Color3.new(0, 0, 0),
    ["ChatBarBoxColor"] = Color3.new(1, 1, 1),
    ["ChatBarTextColor"] = Color3.new(0, 0, 0),
    ["ChannelsTabUnselectedColor"] = Color3.new(0, 0, 0),
    ["ChannelsTabSelectedColor"] = Color3.new(0.11764705882352941, 0.11764705882352941, 0.11764705882352941),
    ["DefaultChannelNameColor"] = Color3.fromRGB(35, 76, 142),
    ["WhisperChannelNameColor"] = Color3.fromRGB(102, 14, 102),
    ["ErrorMessageTextColor"] = Color3.fromRGB(245, 50, 50),
    ["MinimumWindowSize"] = UDim2.new(0.3, 0, 0.25, 0),
    ["MaximumWindowSize"] = UDim2.new(1, 0, 1, 0),
    ["DefaultWindowPosition"] = UDim2.new(0, 0, 0, 0),
    ["DefaultWindowSizePhone"] = UDim2.new(0.5, 0, 0.5, 24),
    ["DefaultWindowSizeTablet"] = UDim2.new(0.4, 0, 0.3, 24),
    ["DefaultWindowSizeDesktop"] = UDim2.new(0.3, 0, 0.25, 24),
    ["ChatWindowBackgroundFadeOutTime"] = 3.5,
    ["ChatWindowTextFadeOutTime"] = 30,
    ["ChatDefaultFadeDuration"] = 0.8,
    ["ChatShouldFadeInFromNewInformation"] = false,
    ["ChatAnimationFPS"] = 20,
    ["GeneralChannelName"] = "All",
    ["EchoMessagesInGeneralChannel"] = true,
    ["ChannelsBarFullTabSize"] = 4,
    ["MaxChannelNameLength"] = 12,
    ["MaxChannelNameCheckLength"] = 50,
    ["RightClickToLeaveChannelEnabled"] = false,
    ["MessageHistoryLengthPerChannel"] = 50,
    ["ShowJoinAndLeaveHelpText"] = false,
    ["MaximumMessageLength"] = 200,
    ["DisallowedWhiteSpace"] = {
        "\n",
        "\r",
        "\t",
        "\11",
        "\f"
    },
    ["ClickOnPlayerNameToWhisper"] = true,
    ["ClickOnChannelNameToSetMainChannel"] = true,
    ["BubbleChatMessageTypes"] = { v3.MessageTypeDefault, v3.MessageTypeWhisper },
    ["WhisperCommandAutoCompletePlayerNames"] = true,
    ["PlayerDisplayNamesEnabled"] = true,
    ["WhisperByDisplayName"] = true
}
local u5 = Instance.new("BindableEvent")
local v9 = setmetatable({}, {
    ["__index"] = function(_, p6) --[[Function name: __index, line 107]]
        --[[
        Upvalues:
            [1] = u4
        --]]
        return u4[p6]
    end,
    ["__newindex"] = function(_, p7, p8) --[[Function name: __newindex, line 110]]
        --[[
        Upvalues:
            [1] = u4
            [2] = u5
        --]]
        u4[p7] = p8
        u5:Fire(p7, p8)
    end
})
local v10 = u5.Event
rawset(v9, "SettingsChanged", v10)
return v9]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ChatSettings]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="373"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

return {
    ["MessageTypeDefault"] = "Message",
    ["MessageTypeSystem"] = "System",
    ["MessageTypeMeCommand"] = "MeCommand",
    ["MessageTypeWelcome"] = "Welcome",
    ["MessageTypeSetCore"] = "SetCore",
    ["MessageTypeWhisper"] = "Whisper",
    ["MajorVersion"] = 0,
    ["MinorVersion"] = 8,
    ["BuildVersion"] = "2018.05.16",
    ["VeryLowPriority"] = -5,
    ["LowPriority"] = 0,
    ["StandardPriority"] = 10,
    ["HighPriority"] = 20,
    ["VeryHighPriority"] = 25,
    ["WhisperChannelPrefix"] = "To "
}]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ChatConstants]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="374"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local u1 = game:GetService("LocalizationService")
local u2 = game:GetService("Chat")
local u3 = {
    ["System"] = "InGame.Chat.Label.SystemMessagePrefix",
    ["Team"] = "InGame.Chat.Label.TeamMessagePrefix"
}
local u4 = {
    ["From(%s.+)"] = {
        ["English"] = "From",
        ["LocalizationKey"] = "InGame.Chat.Label.From"
    },
    ["To(%s.+)"] = {
        ["English"] = "To",
        ["LocalizationKey"] = "InGame.Chat.Label.To"
    }
}
return {
    ["_hasFetchedLocalization"] = false,
    ["_getTranslator"] = function(u5) --[[Function name: _getTranslator, line 27]]
        --[[
        Upvalues:
            [1] = u2
            [2] = u1
        --]]
        if not (u5._translator or u5._hasFetchedLocalization) then
            u5._hasFetchedLocalization = true
            local v6 = u2:WaitForChild("ChatLocalization", 4)
            if v6 then
                u5._translator = v6:GetTranslator(u1.RobloxLocaleId)
                u1:GetPropertyChangedSignal("RobloxLocaleId"):Connect(function() --[[Anonymous function at line 35]]
                    --[[
                    Upvalues:
                        [1] = u5
                    --]]
                    u5._hasFetchedLocalization = false
                    u5._translator = nil
                end)
            else
                warn("Missing ChatLocalization. Chat interface will not be localized.")
            end
        end
        return u5._translator
    end,
    ["Get"] = function(u7, u8, p9, u10) --[[Function name: Get, line 47]]
        local u11 = p9
        pcall(function() --[[Anonymous function at line 49]]
            --[[
            Upvalues:
                [1] = u7
                [2] = u11
                [3] = u8
                [4] = u10
            --]]
            local v12 = u7:_getTranslator()
            if v12 then
                u11 = v12:FormatByKey(u8, u10)
            else
                warn("Missing Translator. Used default for", u8)
            end
        end)
        return u11
    end,
    ["LocalizeFormattedMessage"] = function(p13, p14) --[[Function name: LocalizeFormattedMessage, line 60]]
        local v15, v16 = string.find(p14, "{RBX_LOCALIZATION_KEY}")
        if not v15 then
            return p14
        end
        local v17, v18 = string.find(p14, "{RBX_LOCALIZATION_DEFAULT}")
        if not v17 then
            return p14
        end
        local v19, v20 = string.find(p14, "{RBX_LOCALIZATION_PARAMS}")
        local v21 = v16 + 1
        local v22 = v17 - 1
        local v23 = string.sub(p14, v21, v22)
        if not v19 then
            local v24 = v18 + 1
            return p13:Get(v23, (string.sub(p14, v24)))
        end
        local v25 = v18 + 1
        local v26 = v19 - 1
        local v27 = string.sub(p14, v25, v26)
        local v28 = v20 + 1
        local v29 = string.sub(p14, v28)
        local v30 = {}
        for v31, v32 in string.gmatch(v29, "([^%s]+)=([^%s]+)") do
            v30[v31] = v32
        end
        return p13:Get(v23, v27, v30)
    end,
    ["FormatMessageToSend"] = function(_, p33, p34, p35, p36) --[[Function name: FormatMessageToSend, line 89]]
        if p35 and p36 then
            return "{RBX_LOCALIZATION_KEY}" .. p33 .. "{RBX_LOCALIZATION_DEFAULT}" .. p34 .. "{RBX_LOCALIZATION_PARAMS}" .. p35 .. "=" .. p36
        else
            return "{RBX_LOCALIZATION_KEY}" .. p33 .. "{RBX_LOCALIZATION_DEFAULT}" .. p34
        end
    end,
    ["tryLocalize"] = function(p37, p38) --[[Function name: tryLocalize, line 100]]
        --[[
        Upvalues:
            [1] = u3
            [2] = u4
        --]]
        if u3[p38] then
            return p37:Get(u3[p38], p38)
        end
        for v39, v40 in pairs(u3) do
            if string.find(p38, v39) then
                local v41 = p37:Get(v40, v39)
                return string.gsub(p38, v39, v41, 1)
            end
        end
        for v42, v43 in pairs(u4) do
            local v44 = string.find(p38, v42)
            local v45 = string.match(p38, v42)
            if v44 and v45 then
                local v46 = p37:Get(v43.LocalizationKey, v43.English)
                return (v44 <= 1 and "" or p38:sub(1, v44 - 1)) .. v46 .. v45
            end
        end
        return p38
    end
}]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ChatLocalization]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Folder" referent="375"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[MessageCreatorModules]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="ModuleScript" referent="376"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1, v2 = pcall(function() --[[Anonymous function at line 8]]
    return UserSettings():IsUserFeatureEnabled("UserIsChatTranslationEnabled2")
end)
local u3 = v1 and v2
local u4 = game:GetService("Players")
local v5 = script.Parent.Parent
local u6 = require(v5:WaitForChild("ChatSettings"))
local v7 = require(v5:WaitForChild("ChatConstants"))
local u8 = require(script.Parent:WaitForChild("Util"))
local u9 = utf8.char(57344)
function IsPlayerVerified(p10)
    --[[
    Upvalues:
        [1] = u4
    --]]
    local u11 = u4:GetPlayerByUserId(p10)
    if u11 then
        local v12, v13 = pcall(function() --[[Anonymous function at line 30]]
            --[[
            Upvalues:
                [1] = u11
            --]]
            return u11.HasVerifiedBadge
        end)
        if v12 then
            return v13
        else
            return false
        end
    else
        return false
    end
end
function AppendVerifiedBadge(p14)
    --[[
    Upvalues:
        [1] = u9
    --]]
    return p14 .. u9
end
function CreateMessageLabel(u15, p16, u17)
    --[[
    Upvalues:
        [1] = u6
        [2] = u8
        [3] = u3
    --]]
    local v18 = u15.FromSpeaker
    local v19
    if u6.PlayerDisplayNamesEnabled and u15.SpeakerDisplayName then
        v19 = u15.SpeakerDisplayName
    else
        v19 = v18
    end
    local v20 = u15.SpeakerUserId
    if IsPlayerVerified(v20) then
        v19 = AppendVerifiedBadge(v19)
    end
    local _ = u15.Message
    local v21 = u15.ExtraData or {}
    local v22 = v21.Font or u6.DefaultFont
    local v23 = v21.TextSize or u6.ChatWindowTextSize
    local v24 = v21.NameColor or u6.DefaultNameColor
    local v25 = v21.ChatColor or u6.DefaultMessageColor
    local v26 = v21.ChannelColor or v25
    local v27 = v21.Tags or {}
    local v28 = string.format("[%s]:", v19)
    u8:GetStringTextBounds(v28, v22, v23)
    local u29 = u8:GetNumberOfSpaces(v28, v22, v23) + 1
    local u30, u31 = u8:CreateBaseMessage("", v22, v23, v25)
    local u32 = u8:AddNameButtonToBaseMessage(u31, v24, v28, v18)
    local u33 = UDim2.new(0, 0, 0, 0)
    local v34
    if p16 == u15.OriginalChannel then
        v34 = nil
    else
        local v35 = string.format("{%s}", u15.OriginalChannel)
        v34 = u8:AddChannelButtonToBaseMessage(u31, v26, v35, u15.OriginalChannel)
        u33 = UDim2.new(0, v34.Size.X.Offset + u8:GetStringTextBounds(" ", v22, v23).X, 0, 0)
        u29 = u29 + u8:GetNumberOfSpaces(v35, v22, v23) + 1
    end
    local v36 = {}
    for _, v37 in pairs(v27) do
        local v38 = v37.TagColor or Color3.fromRGB(255, 0, 255)
        local v39 = v37.TagText or "???"
        local v40 = string.format("[%s] ", v39)
        local v41 = u8:AddTagLabelToBaseMessage(u31, v38, v40)
        v41.Position = u33
        u29 = u29 + u8:GetNumberOfSpaces(v40, v22, v23)
        u33 = u33 + UDim2.new(0, v41.Size.X.Offset, 0, 0)
        table.insert(v36, v41)
    end
    u32.Position = u33
    local u42 = false
    local u43 = nil
    if u3 then
        pcall(function() --[[Anonymous function at line 105]]
            --[[
            Upvalues:
                [1] = u43
                [2] = u8
                [3] = u31
                [4] = u33
                [5] = u32
            --]]
            u43 = u8:AddTranslationButtonToBaseMessage(u31)
            u33 = u33 + UDim2.new(0, u32.Size.X.Offset + 2, 0, 0)
            u43.Position = u33
        end)
    end
    local function u46(p44) --[[Anonymous function at line 112]]
        --[[
        Upvalues:
            [1] = u42
            [2] = u15
            [3] = u31
            [4] = u8
            [5] = u29
        --]]
        u42 = false
        if u15.IsFiltered then
            u31.Text = u8:CreateLeadingSpaces(u29) .. u8:SanitizeForRichText(p44.Message)
        else
            local v45 = p44.MessageLengthUtf8 or p44.MessageLength
            u31.Text = u8:CreateLeadingSpaces(u29) .. string.rep("_", v45)
        end
    end
    local function v49(p47) --[[Anonymous function at line 151]]
        --[[
        Upvalues:
            [1] = u3
            [2] = u15
            [3] = u43
            [4] = u29
            [5] = u42
            [6] = u46
            [7] = u31
            [8] = u8
        --]]
        if u3 then
            u15.TranslatedMessage = p47.TranslatedMessage
            if p47.TranslatedMessage then
                if u43 == nil then
                    return
                else
                    if u43.Visible == false then
                        u29 = u29 + 6
                    end
                    u43.Visible = true
                    u42 = true
                    if p47.TranslatedMessage == "" then
                        u46(p47)
                    else
                        u31.Text = u8:CreateLeadingSpaces(u29) .. u8:SanitizeForRichText(p47.TranslatedMessage)
                    end
                end
            else
                u46(p47)
                return
            end
        elseif u15.IsFiltered then
            u31.Text = u8:CreateLeadingSpaces(u29) .. u8:SanitizeForRichText(p47.Message)
        else
            local v48 = p47.MessageLengthUtf8 or p47.MessageLength
            u31.Text = u8:CreateLeadingSpaces(u29) .. string.rep("_", v48)
        end
    end
    if u3 and u43 ~= nil then
        local u51 = u43.MouseButton1Click:connect(function() --[[Anonymous function at line 176]]
            --[[
            Upvalues:
                [1] = u42
                [2] = u15
                [3] = u43
                [4] = u29
                [5] = u46
                [6] = u31
                [7] = u8
                [8] = u17
            --]]
            if u42 or not u15.TranslatedMessage then
                u46(u15)
            else
                local v50 = u15
                if u43 ~= nil then
                    if u43.Visible == false then
                        u29 = u29 + 6
                    end
                    u43.Visible = true
                    u42 = true
                    if v50.TranslatedMessage == "" then
                        u46(v50)
                    else
                        u31.Text = u8:CreateLeadingSpaces(u29) .. u8:SanitizeForRichText(v50.TranslatedMessage)
                    end
                end
            end
            if u17 then
                u17()
            end
        end)
        local u52 = nil
        u52 = u43.Changed:connect(function(p53) --[[Anonymous function at line 181]]
            --[[
            Upvalues:
                [1] = u51
                [2] = u52
            --]]
            if p53 == "Parent" then
                u51:Disconnect()
                u52:Disconnect()
            end
        end)
    end
    v49(u15)
    local function v55(p54) --[[Anonymous function at line 191]]
        --[[
        Upvalues:
            [1] = u8
            [2] = u31
            [3] = u30
        --]]
        return u8:GetMessageHeight(u31, u30, p54)
    end
    local v56 = {
        [u32] = {
            ["TextTransparency"] = {
                ["FadedIn"] = 0,
                ["FadedOut"] = 1
            },
            ["TextStrokeTransparency"] = {
                ["FadedIn"] = 0.75,
                ["FadedOut"] = 1
            }
        }
    }
    if u3 and u43 ~= nil then
        v56[u43] = {
            ["ImageTransparency"] = {
                ["FadedIn"] = 0,
                ["FadedOut"] = 1
            }
        }
    end
    v56[u31] = {
        ["TextTransparency"] = {
            ["FadedIn"] = 0,
            ["FadedOut"] = 1
        },
        ["TextStrokeTransparency"] = {
            ["FadedIn"] = 0.75,
            ["FadedOut"] = 1
        }
    }
    for v57, v58 in pairs(v36) do
        string.format("Tag%d", v57)
        v56[v58] = {
            ["TextTransparency"] = {
                ["FadedIn"] = 0,
                ["FadedOut"] = 1
            },
            ["TextStrokeTransparency"] = {
                ["FadedIn"] = 0.75,
                ["FadedOut"] = 1
            }
        }
    end
    if v34 then
        v56[v34] = {
            ["TextTransparency"] = {
                ["FadedIn"] = 0,
                ["FadedOut"] = 1
            },
            ["TextStrokeTransparency"] = {
                ["FadedIn"] = 0.75,
                ["FadedOut"] = 1
            }
        }
    end
    local v59, v60, v61 = u8:CreateFadeFunctions(v56)
    return {
        [u8.KEY_BASE_FRAME] = u30,
        [u8.KEY_BASE_MESSAGE] = u31,
        [u8.KEY_UPDATE_TEXT_FUNC] = v49,
        [u8.KEY_GET_HEIGHT] = v55,
        [u8.KEY_FADE_IN] = v59,
        [u8.KEY_FADE_OUT] = v60,
        [u8.KEY_UPDATE_ANIMATION] = v61
    }
end
return {
    [u8.KEY_MESSAGE_TYPE] = v7.MessageTypeDefault,
    [u8.KEY_CREATOR_FUNCTION] = CreateMessageLabel
}]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[DefaultChatMessage]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="377"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1 = script.Parent.Parent
local u2 = require(v1:WaitForChild("ChatSettings"))
local v3 = require(v1:WaitForChild("ChatConstants"))
local u4 = require(script.Parent:WaitForChild("Util"))
function CreateMeCommandMessageLabel(u5, p6)
    --[[
    Upvalues:
        [1] = u2
        [2] = u4
    --]]
    local _ = u5.Message
    local v7 = u5.ExtraData or {}
    local v8 = v7.Font or Enum.Font.SourceSansItalic
    local v9 = v7.TextSize or u2.ChatWindowTextSize
    local v10 = Color3.new(1, 1, 1)
    local v11 = v7.ChannelColor or v10
    local u12, u13 = u4:CreateBaseMessage("", v8, v9, v10)
    local u14, v15
    if p6 == u5.OriginalChannel then
        u14 = 0
        v15 = nil
    else
        local v16 = string.format("{%s}", u5.OriginalChannel)
        v15 = u4:AddChannelButtonToBaseMessage(u13, v11, v16, u5.OriginalChannel)
        u14 = u4:GetNumberOfSpaces(v16, v8, v9) + 1
    end
    local function v25(p17) --[[Anonymous function at line 29]]
        --[[
        Upvalues:
            [1] = u5
            [2] = u13
            [3] = u4
            [4] = u14
        --]]
        if u5.IsFiltered then
            local v18 = u13
            local v19 = u4:CreateLeadingSpaces(u14)
            local v20 = u4
            local v21 = p17.FromSpeaker
            local v22 = p17.Message
            v18.Text = v19 .. v20:SanitizeForRichText(v21 .. " " .. string.sub(v22, 5))
        else
            local v23 = p17.MessageLengthUtf8 or p17.MessageLength
            local v24 = utf8.len(utf8.nfcnormalize(p17.FromSpeaker)) + v23 - 4
            u13.Text = u4:CreateLeadingSpaces(u14) .. string.rep("_", v24)
        end
    end
    v25(u5)
    local function v27(p26) --[[Anonymous function at line 41]]
        --[[
        Upvalues:
            [1] = u4
            [2] = u13
            [3] = u12
        --]]
        return u4:GetMessageHeight(u13, u12, p26)
    end
    local v28 = {
        [u13] = {
            ["TextTransparency"] = {
                ["FadedIn"] = 0,
                ["FadedOut"] = 1
            },
            ["TextStrokeTransparency"] = {
                ["FadedIn"] = 0.75,
                ["FadedOut"] = 1
            }
        }
    }
    if v15 then
        v28[v15] = {
            ["TextTransparency"] = {
                ["FadedIn"] = 0,
                ["FadedOut"] = 1
            },
            ["TextStrokeTransparency"] = {
                ["FadedIn"] = 0.75,
                ["FadedOut"] = 1
            }
        }
    end
    local v29, v30, v31 = u4:CreateFadeFunctions(v28)
    return {
        [u4.KEY_BASE_FRAME] = u12,
        [u4.KEY_BASE_MESSAGE] = u13,
        [u4.KEY_UPDATE_TEXT_FUNC] = v25,
        [u4.KEY_GET_HEIGHT] = v27,
        [u4.KEY_FADE_IN] = v29,
        [u4.KEY_FADE_OUT] = v30,
        [u4.KEY_UPDATE_ANIMATION] = v31
    }
end
return {
    [u4.KEY_MESSAGE_TYPE] = v3.MessageTypeMeCommand,
    [u4.KEY_CREATOR_FUNCTION] = CreateMeCommandMessageLabel
}]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[MeCommandMessage]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="378"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1 = script.Parent.Parent
local u2 = require(v1:WaitForChild("ChatSettings"))
local v3 = require(v1:WaitForChild("ChatConstants"))
local u4 = require(script.Parent:WaitForChild("Util"))
function CreateSetCoreMessageLabel(p5, _)
    --[[
    Upvalues:
        [1] = u2
        [2] = u4
    --]]
    local v6 = p5.Message
    local v7 = p5.ExtraData or {}
    local u8, u9 = u4:CreateBaseMessage(v6, v7.Font or u2.DefaultFont, v7.TextSize or u2.ChatWindowTextSize, v7.Color or u2.DefaultMessageColor)
    local function v11(p10) --[[Anonymous function at line 20]]
        --[[
        Upvalues:
            [1] = u4
            [2] = u9
            [3] = u8
        --]]
        return u4:GetMessageHeight(u9, u8, p10)
    end
    local v12, v13, v14 = u4:CreateFadeFunctions({
        [u9] = {
            ["TextTransparency"] = {
                ["FadedIn"] = 0,
                ["FadedOut"] = 1
            },
            ["TextStrokeTransparency"] = {
                ["FadedIn"] = 0.75,
                ["FadedOut"] = 1
            }
        }
    })
    return {
        [u4.KEY_BASE_FRAME] = u8,
        [u4.KEY_BASE_MESSAGE] = u9,
        [u4.KEY_UPDATE_TEXT_FUNC] = nil,
        [u4.KEY_GET_HEIGHT] = v11,
        [u4.KEY_FADE_IN] = v12,
        [u4.KEY_FADE_OUT] = v13,
        [u4.KEY_UPDATE_ANIMATION] = v14
    }
end
return {
    [u4.KEY_MESSAGE_TYPE] = v3.MessageTypeSetCore,
    [u4.KEY_CREATOR_FUNCTION] = CreateSetCoreMessageLabel
}]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[SetCoreMessage]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="379"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1 = script.Parent.Parent
local u2 = require(v1:WaitForChild("ChatSettings"))
local v3 = require(v1:WaitForChild("ChatConstants"))
local u4 = require(script.Parent:WaitForChild("Util"))
local u5 = nil
pcall(function() --[[Anonymous function at line 12]]
    --[[
    Upvalues:
        [1] = u5
    --]]
    u5 = require(game:GetService("Chat").ClientChatModules.ChatLocalization)
end)
function CreateSystemMessageLabel(p6, p7)
    --[[
    Upvalues:
        [1] = u5
        [2] = u2
        [3] = u4
    --]]
    local v8 = p6.Message
    if u5 and u5.LocalizeFormattedMessage then
        v8 = u5:LocalizeFormattedMessage(v8)
    end
    local v9 = p6.ExtraData or {}
    local v10 = v9.Font or u2.DefaultFont
    local v11 = v9.TextSize or u2.ChatWindowTextSize
    local v12 = v9.ChatColor or u2.DefaultMessageColor
    local v13 = v9.ChannelColor or v12
    local u14, u15 = u4:CreateBaseMessage(v8, v10, v11, v12)
    u15.AutoLocalize = true
    local v16
    if p7 == p6.OriginalChannel then
        v16 = nil
    else
        local v17
        if u5 and p6.OriginalChannel == "System" then
            local v18 = u5:Get("InGame.Chat.Label.SystemMessagePrefix", "System")
            v17 = string.format("{%s}", v18)
        elseif u5 and p6.OriginalChannel == "Team" then
            local v19 = u5:Get("InGame.Chat.Label.TeamMessagePrefix", "System")
            v17 = string.format("{%s}", v19)
        else
            v17 = string.format("{%s}", p6.OriginalChannel)
        end
        v16 = u4:AddChannelButtonToBaseMessage(u15, v13, v17, p6.OriginalChannel)
        u15.Text = u4:CreateLeadingSpaces(u4:GetNumberOfSpaces(v17, v10, v11) + 1) .. u4:SanitizeForRichText(v8)
    end
    local function v21(p20) --[[Anonymous function at line 45]]
        --[[
        Upvalues:
            [1] = u4
            [2] = u15
            [3] = u14
        --]]
        return u4:GetMessageHeight(u15, u14, p20)
    end
    local v22 = {
        [u15] = {
            ["TextTransparency"] = {
                ["FadedIn"] = 0,
                ["FadedOut"] = 1
            },
            ["TextStrokeTransparency"] = {
                ["FadedIn"] = 0.75,
                ["FadedOut"] = 1
            }
        }
    }
    if v16 then
        v22[v16] = {
            ["TextTransparency"] = {
                ["FadedIn"] = 0,
                ["FadedOut"] = 1
            },
            ["TextStrokeTransparency"] = {
                ["FadedIn"] = 0.75,
                ["FadedOut"] = 1
            }
        }
    end
    local v23, v24, v25 = u4:CreateFadeFunctions(v22)
    return {
        [u4.KEY_BASE_FRAME] = u14,
        [u4.KEY_BASE_MESSAGE] = u15,
        [u4.KEY_UPDATE_TEXT_FUNC] = nil,
        [u4.KEY_GET_HEIGHT] = v21,
        [u4.KEY_FADE_IN] = v23,
        [u4.KEY_FADE_OUT] = v24,
        [u4.KEY_UPDATE_ANIMATION] = v25
    }
end
return {
    [u4.KEY_MESSAGE_TYPE] = v3.MessageTypeSystem,
    [u4.KEY_CREATOR_FUNCTION] = CreateSystemMessageLabel
}]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[SystemMessage]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="380"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1 = script.Parent.Parent
require(v1:WaitForChild("ChatSettings"))
local v2 = require(script.Parent:WaitForChild("Util"))
function CreateUnknownMessageLabel(p3)
    print("No message creator for message: " .. p3.Message)
end
return {
    [v2.KEY_MESSAGE_TYPE] = "UnknownMessage",
    [v2.KEY_CREATOR_FUNCTION] = CreateUnknownMessageLabel
}]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[UnknownMessage]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="381"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1, u2 = pcall(function() --[[Anonymous function at line 41]]
    return UserSettings():IsUserFeatureEnabled("UserFixOverlappingRtlChatMessages2")
end)
if not v1 then
    u2 = false
end
local u3 = game:GetService("TextService")
local u4 = game:GetService("Players")
local u5 = u4.LocalPlayer
while not u5 do
    u4.ChildAdded:wait()
    u5 = u4.LocalPlayer
end
local v6 = script.Parent.Parent
local u7 = require(v6:WaitForChild("ChatSettings"))
local u8 = require(v6:WaitForChild("ChatConstants"))
local v9 = {}
local u10 = {}
u10.__index = u10
function u10.GetStringTextBounds(_, p11, p12, p13, p14) --[[Anonymous function at line 66]]
    --[[
    Upvalues:
        [1] = u3
    --]]
    return u3:GetTextSize(p11, p13, p12, p14 or Vector2.new(10000, 10000))
end
function u10.GetMessageHeight(p15, p16, p17, p18) --[[Anonymous function at line 72]]
    --[[
    Upvalues:
        [1] = u2
    --]]
    local v19 = p18 or p17.AbsoluteSize.X
    local v20
    if u2 then
        v20 = p16.ContentText
    else
        v20 = p16.Text
    end
    local v21 = p15:GetStringTextBounds(v20, p16.Font, p16.TextSize, Vector2.new(v19, 1000))
    local v22 = v21.Y
    local v23 = v21.Y
    if v22 == math.floor(v23) then
        return v21.Y
    else
        return v21.Y + 1
    end
end
function u10.GetNumberOfSpaces(p24, p25, p26, p27) --[[Anonymous function at line 84]]
    local v28 = p24:GetStringTextBounds(p25, p26, p27)
    local v29 = p24:GetStringTextBounds(" ", p26, p27)
    local v30 = v28.X / v29.X
    return math.ceil(v30)
end
function u10.CreateLeadingSpaces(_, p31) --[[Anonymous function at line 90]]
    --[[
    Upvalues:
        [1] = u2
    --]]
    if u2 then
        return "<font dir=\"ltr\">" .. string.rep(" ", p31) .. "</font>"
    else
        return string.rep(" ", p31)
    end
end
function u10.SanitizeForRichText(_, p32) --[[Anonymous function at line 98]]
    --[[
    Upvalues:
        [1] = u2
    --]]
    if u2 then
        return string.gsub(p32, "%p", {
            ["<"] = "&lt;",
            [">"] = "&gt;",
            ["&"] = "&amp;"
        })
    else
        return p32
    end
end
function u10.CreateBaseMessage(p33, p34, p35, p36, p37) --[[Anonymous function at line 110]]
    --[[
    Upvalues:
        [1] = u2
    --]]
    local v38 = p33:GetFromObjectPool("Frame")
    v38.Selectable = false
    v38.Size = UDim2.new(1, 0, 0, 18)
    v38.Visible = true
    v38.BackgroundTransparency = 1
    local v39 = p33:GetFromObjectPool("TextLabel")
    v39.Selectable = false
    v39.Size = UDim2.new(1, -14, 1, 0)
    v39.Position = UDim2.new(0, 8, 0, 0)
    v39.BackgroundTransparency = 1
    v39.Font = p35
    v39.TextSize = p36
    v39.TextXAlignment = Enum.TextXAlignment.Left
    v39.TextYAlignment = Enum.TextYAlignment.Top
    v39.TextTransparency = 0
    v39.TextStrokeTransparency = 0.75
    v39.TextColor3 = p37
    v39.TextWrapped = true
    v39.ClipsDescendants = true
    v39.Text = p34
    v39.Visible = true
    v39.RichText = u2 and true or false
    v39.Parent = v38
    return v38, v39
end
function u10.AddNameButtonToBaseMessage(u40, p41, p42, p43, u44) --[[Anonymous function at line 141]]
    local v45 = u40:GetStringTextBounds(p43, p41.Font, p41.TextSize)
    local u46 = u40:GetFromObjectPool("TextButton")
    u46.Selectable = false
    u46.Size = UDim2.new(0, v45.X, 0, v45.Y)
    u46.Position = UDim2.new(0, 0, 0, 0)
    u46.BackgroundTransparency = 1
    u46.Font = p41.Font
    u46.TextSize = p41.TextSize
    u46.TextXAlignment = p41.TextXAlignment
    u46.TextYAlignment = p41.TextYAlignment
    u46.TextTransparency = p41.TextTransparency
    u46.TextStrokeTransparency = p41.TextStrokeTransparency
    u46.TextColor3 = p42
    u46.Text = p43
    u46.Visible = true
    u46.Parent = p41
    local u47 = u46.MouseButton1Click:connect(function() --[[Anonymous function at line 159]]
        --[[
        Upvalues:
            [1] = u40
            [2] = u46
            [3] = u44
        --]]
        u40:NameButtonClicked(u46, u44)
    end)
    local u48 = nil
    u48 = u46.Changed:connect(function(p49) --[[Anonymous function at line 164]]
        --[[
        Upvalues:
            [1] = u47
            [2] = u48
        --]]
        if p49 == "Parent" then
            u47:Disconnect()
            u48:Disconnect()
        end
    end)
    return u46
end
function u10.AddTranslationButtonToBaseMessage(p50, p51) --[[Anonymous function at line 174]]
    local v52 = p51.TextSize * 0.9
    local v53 = math.floor(v52)
    local v54 = Vector2.new(v53, v53)
    local v55 = p50:GetFromObjectPool("ImageButton")
    v55.Selectable = false
    v55.Size = UDim2.new(0, v54.X, 0, v54.Y)
    v55.Position = UDim2.new(0, 0, 0, 0)
    v55.BackgroundTransparency = 1
    v55.Visible = false
    v55.Parent = p51
    v55.Image = "rbxasset://textures/translateIcon.png"
    v55.HoverImage = "rbxasset://textures/translateIconDark.png"
    v55.PressedImage = "rbxasset://textures/translateIconDark.png"
    return v55
end
function u10.AddChannelButtonToBaseMessage(u56, p57, p58, p59, u60) --[[Anonymous function at line 191]]
    local v61 = u56:GetStringTextBounds(p59, p57.Font, p57.TextSize)
    local u62 = u56:GetFromObjectPool("TextButton")
    u62.Selectable = false
    u62.Size = UDim2.new(0, v61.X, 0, v61.Y)
    u62.Position = UDim2.new(0, 0, 0, 0)
    u62.BackgroundTransparency = 1
    u62.Font = p57.Font
    u62.TextSize = p57.TextSize
    u62.TextXAlignment = p57.TextXAlignment
    u62.TextYAlignment = p57.TextYAlignment
    u62.TextTransparency = p57.TextTransparency
    u62.TextStrokeTransparency = p57.TextStrokeTransparency
    u62.TextColor3 = p58
    u62.Text = p59
    u62.Visible = true
    u62.Parent = p57
    local u63 = u62.MouseButton1Click:connect(function() --[[Anonymous function at line 209]]
        --[[
        Upvalues:
            [1] = u56
            [2] = u62
            [3] = u60
        --]]
        u56:ChannelButtonClicked(u62, u60)
    end)
    local u64 = nil
    u64 = u62.Changed:connect(function(p65) --[[Anonymous function at line 214]]
        --[[
        Upvalues:
            [1] = u63
            [2] = u64
        --]]
        if p65 == "Parent" then
            u63:Disconnect()
            u64:Disconnect()
        end
    end)
    return u62
end
function u10.AddTagLabelToBaseMessage(p66, p67, p68, p69) --[[Anonymous function at line 224]]
    local v70 = p66:GetStringTextBounds(p69, p67.Font, p67.TextSize)
    local v71 = p66:GetFromObjectPool("TextLabel")
    v71.Selectable = false
    v71.Size = UDim2.new(0, v70.X, 0, v70.Y)
    v71.Position = UDim2.new(0, 0, 0, 0)
    v71.BackgroundTransparency = 1
    v71.Font = p67.Font
    v71.TextSize = p67.TextSize
    v71.TextXAlignment = p67.TextXAlignment
    v71.TextYAlignment = p67.TextYAlignment
    v71.TextTransparency = p67.TextTransparency
    v71.TextStrokeTransparency = p67.TextStrokeTransparency
    v71.TextColor3 = p68
    v71.Text = p69
    v71.Visible = true
    v71.Parent = p67
    return v71
end
function GetWhisperChannelPrefix()
    --[[
    Upvalues:
        [1] = u8
    --]]
    return not u8.WhisperChannelPrefix and "To " or u8.WhisperChannelPrefix
end
function u10.NameButtonClicked(p72, _, p73) --[[Anonymous function at line 252]]
    --[[
    Upvalues:
        [1] = u7
        [2] = u4
        [3] = u5
    --]]
    if p72.ChatWindow then
        if u7.ClickOnPlayerNameToWhisper then
            local v74 = u4:FindFirstChild(p73)
            if v74 and v74 ~= u5 then
                local v75 = GetWhisperChannelPrefix() .. p73
                if p72.ChatWindow:GetChannel(v75) then
                    p72.ChatBar:ResetCustomState()
                    if p72.ChatWindow:GetTargetMessageChannel() ~= v75 then
                        p72.ChatWindow:SwitchCurrentChannel(v75)
                    end
                    local v76 = "/w " .. p73
                    p72.ChatBar:SetText(v76)
                    p72.ChatBar:CaptureFocus()
                    return
                end
                if not p72.ChatBar:IsInCustomState() then
                    local v77 = "/w " .. p73
                    p72.ChatBar:SetText(v77)
                    p72.ChatBar:CaptureFocus()
                end
            end
        end
    end
end
function u10.ChannelButtonClicked(p78, _, p79) --[[Anonymous function at line 282]]
    --[[
    Upvalues:
        [1] = u7
    --]]
    if p78.ChatWindow then
        if u7.ClickOnChannelNameToSetMainChannel and p78.ChatWindow:GetChannel(p79) then
            p78.ChatBar:ResetCustomState()
            if p78.ChatWindow:GetTargetMessageChannel() ~= p79 then
                p78.ChatWindow:SwitchCurrentChannel(p79)
            end
            p78.ChatBar:ResetText()
            p78.ChatBar:CaptureFocus()
        end
    end
end
function u10.RegisterChatWindow(p80, p81) --[[Anonymous function at line 300]]
    p80.ChatWindow = p81
    p80.ChatBar = p81:GetChatBar()
end
function u10.GetFromObjectPool(p82, p83) --[[Anonymous function at line 305]]
    if p82.ObjectPool == nil then
        return Instance.new(p83)
    else
        return p82.ObjectPool:GetInstance(p83)
    end
end
function u10.RegisterObjectPool(p84, p85) --[[Anonymous function at line 312]]
    p84.ObjectPool = p85
end
function u10.CreateFadeFunctions(_, u86) --[[Anonymous function at line 332]]
    local u87 = {}
    for v88, v89 in pairs(u86) do
        u87[v88] = {}
        for v90, v91 in pairs(v89) do
            u87[v88][v90] = {
                ["Target"] = v91.FadedIn,
                ["Current"] = v88[v90],
                ["NormalizedExptValue"] = 1
            }
        end
    end
    local function u96() --[[Anonymous function at line 363]]
        --[[
        Upvalues:
            [1] = u87
        --]]
        for v92, v93 in pairs(u87) do
            for v94, v95 in pairs(v93) do
                v92[v94] = v95.Current
            end
        end
    end
    return function(p97, p98) --[[Function name: FadeInFunction, line 345]]
        --[[
        Upvalues:
            [1] = u87
            [2] = u86
        --]]
        for v99, v100 in pairs(u87) do
            for v101, v102 in pairs(v100) do
                v102.Target = u86[v99][v101].FadedIn
                v102.NormalizedExptValue = p98:NormalizedDefaultExptValueInSeconds(p97)
            end
        end
    end, function(p103, p104) --[[Function name: FadeOutFunction, line 354]]
        --[[
        Upvalues:
            [1] = u87
            [2] = u86
        --]]
        for v105, v106 in pairs(u87) do
            for v107, v108 in pairs(v106) do
                v108.Target = u86[v105][v107].FadedOut
                v108.NormalizedExptValue = p104:NormalizedDefaultExptValueInSeconds(p103)
            end
        end
    end, function(p109, p110) --[[Function name: UpdateAnimFunction, line 371]]
        --[[
        Upvalues:
            [1] = u87
            [2] = u96
        --]]
        for _, v111 in pairs(u87) do
            for _, v112 in pairs(v111) do
                v112.Current = p110:Expt(v112.Current, v112.Target, v112.NormalizedExptValue, p109)
            end
        end
        u96()
    end
end
function u10.NewBindableEvent(_, p113) --[[Anonymous function at line 389]]
    local v114 = Instance.new("BindableEvent")
    v114.Name = p113
    return v114
end
function u10.RegisterGuiRoot(_) --[[Anonymous function at line 396]] end
function v9.new() --[[Anonymous function at line 401]]
    --[[
    Upvalues:
        [1] = u10
    --]]
    local v115 = u10
    local v116 = setmetatable({}, v115)
    v116.ObjectPool = nil
    v116.ChatWindow = nil
    v116.DEFAULT_MESSAGE_CREATOR = "UnknownMessage"
    v116.MESSAGE_CREATOR_MODULES_VERSION = 1
    v116.KEY_MESSAGE_TYPE = "MessageType"
    v116.KEY_CREATOR_FUNCTION = "MessageCreatorFunc"
    v116.KEY_BASE_FRAME = "BaseFrame"
    v116.KEY_BASE_MESSAGE = "BaseMessage"
    v116.KEY_UPDATE_TEXT_FUNC = "UpdateTextFunction"
    v116.KEY_GET_HEIGHT = "GetHeightFunction"
    v116.KEY_FADE_IN = "FadeInFunction"
    v116.KEY_FADE_OUT = "FadeOutFunction"
    v116.KEY_UPDATE_ANIMATION = "UpdateAnimFunction"
    return v116
end
return v9.new()]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Util]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="382"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1 = script.Parent.Parent
local u2 = require(v1:WaitForChild("ChatSettings"))
local v3 = require(v1:WaitForChild("ChatConstants"))
local u4 = require(script.Parent:WaitForChild("Util"))
pcall(function() --[[Anonymous function at line 12]]
    ChatLocalization = require(game:GetService("Chat").ClientChatModules.ChatLocalization)
end)
function CreateWelcomeMessageLabel(p5, p6)
    --[[
    Upvalues:
        [1] = u2
        [2] = u4
    --]]
    local v7 = p5.Message
    if ChatLocalization and ChatLocalization.LocalizeFormattedMessage then
        v7 = ChatLocalization:LocalizeFormattedMessage(v7)
    end
    local v8 = p5.ExtraData or {}
    local v9 = v8.Font or u2.DefaultFont
    local v10 = v8.FontSize or u2.ChatWindowTextSize
    local v11 = v8.ChatColor or u2.DefaultMessageColor
    local v12 = v8.ChannelColor or v11
    local u13, u14 = u4:CreateBaseMessage(v7, v9, v10, v11)
    local v15
    if p6 == p5.OriginalChannel then
        v15 = nil
    else
        local v16 = p5.OriginalChannel
        if ChatLocalization.tryLocalize then
            v16 = ChatLocalization:tryLocalize(p5.OriginalChannel)
        end
        local v17 = string.format("{%s}", v16)
        v15 = u4:AddChannelButtonToBaseMessage(u14, v12, v17, p5.OriginalChannel)
        u14.Text = u4:CreateLeadingSpaces(u4:GetNumberOfSpaces(v17, v9, v10) + 1) .. u4:SanitizeForRichText(v7)
    end
    local function v19(p18) --[[Anonymous function at line 39]]
        --[[
        Upvalues:
            [1] = u4
            [2] = u14
            [3] = u13
        --]]
        return u4:GetMessageHeight(u14, u13, p18)
    end
    local v20 = {
        [u14] = {
            ["TextTransparency"] = {
                ["FadedIn"] = 0,
                ["FadedOut"] = 1
            },
            ["TextStrokeTransparency"] = {
                ["FadedIn"] = 0.75,
                ["FadedOut"] = 1
            }
        }
    }
    if v15 then
        v20[v15] = {
            ["TextTransparency"] = {
                ["FadedIn"] = 0,
                ["FadedOut"] = 1
            },
            ["TextStrokeTransparency"] = {
                ["FadedIn"] = 0.75,
                ["FadedOut"] = 1
            }
        }
    end
    local v21, v22, v23 = u4:CreateFadeFunctions(v20)
    return {
        [u4.KEY_BASE_FRAME] = u13,
        [u4.KEY_BASE_MESSAGE] = u14,
        [u4.KEY_UPDATE_TEXT_FUNC] = nil,
        [u4.KEY_GET_HEIGHT] = v19,
        [u4.KEY_FADE_IN] = v21,
        [u4.KEY_FADE_OUT] = v22,
        [u4.KEY_UPDATE_ANIMATION] = v23
    }
end
return {
    [u4.KEY_MESSAGE_TYPE] = v3.MessageTypeWelcome,
    [u4.KEY_CREATOR_FUNCTION] = CreateWelcomeMessageLabel
}]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[WelcomeMessage]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="383"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local u1 = game:GetService("Players")
local u2 = u1.LocalPlayer
while not u2 do
    u1.ChildAdded:wait()
    u2 = u1.LocalPlayer
end
local v3 = script.Parent.Parent
local u4 = require(v3:WaitForChild("ChatSettings"))
local v5 = require(v3:WaitForChild("ChatConstants"))
local u6 = require(script.Parent:WaitForChild("Util"))
local u7 = utf8.char(57344)
local u8 = nil
pcall(function() --[[Anonymous function at line 22]]
    --[[
    Upvalues:
        [1] = u8
    --]]
    u8 = require(game:GetService("Chat").ClientChatModules.ChatLocalization)
end)
function IsPlayerVerified(p9)
    --[[
    Upvalues:
        [1] = u1
    --]]
    local u10 = u1:GetPlayerByUserId(p9)
    if u10 then
        local v11, v12 = pcall(function() --[[Anonymous function at line 31]]
            --[[
            Upvalues:
                [1] = u10
            --]]
            return u10.HasVerifiedBadge
        end)
        if v11 then
            return v12
        else
            return false
        end
    else
        return false
    end
end
function AppendVerifiedBadge(p13)
    --[[
    Upvalues:
        [1] = u7
    --]]
    return p13 .. u7
end
function CreateMessageLabel(u14, p15)
    --[[
    Upvalues:
        [1] = u4
        [2] = u6
        [3] = u2
        [4] = u8
    --]]
    local v16 = u14.FromSpeaker
    local v17
    if u4.PlayerDisplayNamesEnabled and u14.SpeakerDisplayName then
        v17 = u14.SpeakerDisplayName
    else
        v17 = v16
    end
    local v18 = u14.SpeakerUserId
    if IsPlayerVerified(v18) then
        v17 = AppendVerifiedBadge(v17)
    end
    local _ = u14.Message
    local v19 = u14.ExtraData or {}
    local v20 = v19.Font or u4.DefaultFont
    local v21 = v19.TextSize or u4.ChatWindowTextSize
    local v22 = v19.NameColor or u4.DefaultNameColor
    local v23 = v19.ChatColor or u4.DefaultMessageColor
    local v24 = v19.ChannelColor or v23
    local v25 = string.format("[%s]:", v17)
    u6:GetStringTextBounds(v25, v20, v21)
    local u26 = u6:GetNumberOfSpaces(v25, v20, v21) + 1
    local u27, u28 = u6:CreateBaseMessage("", v20, v21, v23)
    local v29 = u6:AddNameButtonToBaseMessage(u28, v22, v25, v16)
    local v30
    if p15 == u14.OriginalChannel then
        v30 = nil
    else
        local v31 = u14.OriginalChannel
        if u14.FromSpeaker ~= u2.Name then
            v31 = string.format("From %s", u14.FromSpeaker)
        end
        if u8.tryLocalize then
            v31 = u8:tryLocalize(v31)
        end
        local v32 = string.format("{%s}", v31)
        v30 = u6:AddChannelButtonToBaseMessage(u28, v24, v32, u14.OriginalChannel)
        v29.Position = UDim2.new(0, v30.Size.X.Offset + u6:GetStringTextBounds(" ", v20, v21).X, 0, 0)
        u26 = u26 + u6:GetNumberOfSpaces(v32, v20, v21) + 1
    end
    local function v35(p33) --[[Anonymous function at line 92]]
        --[[
        Upvalues:
            [1] = u14
            [2] = u28
            [3] = u6
            [4] = u26
        --]]
        if u14.IsFiltered then
            u28.Text = u6:CreateLeadingSpaces(u26) .. u6:SanitizeForRichText(p33.Message)
        else
            local v34 = p33.MessageLengthUtf8 or p33.MessageLength
            u28.Text = u6:CreateLeadingSpaces(u26) .. string.rep("_", v34)
        end
    end
    v35(u14)
    local function v37(p36) --[[Anonymous function at line 103]]
        --[[
        Upvalues:
            [1] = u6
            [2] = u28
            [3] = u27
        --]]
        return u6:GetMessageHeight(u28, u27, p36)
    end
    local v38 = {
        [v29] = {
            ["TextTransparency"] = {
                ["FadedIn"] = 0,
                ["FadedOut"] = 1
            },
            ["TextStrokeTransparency"] = {
                ["FadedIn"] = 0.75,
                ["FadedOut"] = 1
            }
        },
        [u28] = {
            ["TextTransparency"] = {
                ["FadedIn"] = 0,
                ["FadedOut"] = 1
            },
            ["TextStrokeTransparency"] = {
                ["FadedIn"] = 0.75,
                ["FadedOut"] = 1
            }
        }
    }
    if v30 then
        v38[v30] = {
            ["TextTransparency"] = {
                ["FadedIn"] = 0,
                ["FadedOut"] = 1
            },
            ["TextStrokeTransparency"] = {
                ["FadedIn"] = 0.75,
                ["FadedOut"] = 1
            }
        }
    end
    local v39, v40, v41 = u6:CreateFadeFunctions(v38)
    return {
        [u6.KEY_BASE_FRAME] = u27,
        [u6.KEY_BASE_MESSAGE] = u28,
        [u6.KEY_UPDATE_TEXT_FUNC] = v35,
        [u6.KEY_GET_HEIGHT] = v37,
        [u6.KEY_FADE_IN] = v39,
        [u6.KEY_FADE_OUT] = v40,
        [u6.KEY_UPDATE_ANIMATION] = v41
    }
end
return {
    [u6.KEY_MESSAGE_TYPE] = v5.MessageTypeWhisper,
    [u6.KEY_CREATOR_FUNCTION] = CreateMessageLabel
}]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[WhisperMessage]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="BoolValue" referent="384"><Properties><bool name="Value">true</bool><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[InsertDefaultModules]]></string><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="Folder" referent="385"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[CommandModules]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="ModuleScript" referent="386"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1 = require(script.Parent:WaitForChild("Util"))
function ProcessMessage(p2, p3, _)
    if string.sub(p2, 1, 4):lower() ~= "/cls" and string.sub(p2, 1, 6):lower() ~= "/clear" then
        return false
    end
    local v4 = p3:GetCurrentChannel()
    if v4 then
        v4:ClearMessageLog()
    end
    return true
end
return {
    [v1.KEY_COMMAND_PROCESSOR_TYPE] = v1.COMPLETED_MESSAGE_PROCESSOR,
    [v1.KEY_PROCESSOR_FUNCTION] = ProcessMessage
}]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ClearMessages]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="387"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local u1 = game:GetService("StarterGui")
local v2 = require(script.Parent:WaitForChild("Util"))
function ProcessMessage(p3, _, _)
    --[[
    Upvalues:
        [1] = u1
    --]]
    if string.sub(p3, 1, 8):lower() ~= "/console" and string.sub(p3, 1, 11):lower() ~= "/newconsole" then
        return false
    end
    local v4, u5 = pcall(function() --[[Anonymous function at line 11]]
        --[[
        Upvalues:
            [1] = u1
        --]]
        return u1:GetCore("DevConsoleVisible")
    end)
    if v4 then
        local v6, v7 = pcall(function() --[[Anonymous function at line 13]]
            --[[
            Upvalues:
                [1] = u1
                [2] = u5
            --]]
            u1:SetCore("DevConsoleVisible", not u5)
        end)
        if not v6 and v7 then
            print("Error making developer console visible: " .. v7)
        end
    end
    return true
end
return {
    [v2.KEY_COMMAND_PROCESSOR_TYPE] = v2.COMPLETED_MESSAGE_PROCESSOR,
    [v2.KEY_PROCESSOR_FUNCTION] = ProcessMessage
}]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[DeveloperConsole]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="388"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local u1 = require(script.Parent:WaitForChild("Util"))
local u2 = require(script.Parent.Parent:WaitForChild("ChatConstants"))
return {
    [u1.KEY_COMMAND_PROCESSOR_TYPE] = u1.COMPLETED_MESSAGE_PROCESSOR,
    [u1.KEY_PROCESSOR_FUNCTION] = function(p3, p4, _) --[[Function name: ProcessMessage, line 9]]
        --[[
        Upvalues:
            [1] = u1
            [2] = u2
        --]]
        if string.sub(p3, 1, 8):lower() ~= "/version" and string.sub(p3, 1, 9):lower() ~= "/version " then
            return false
        end
        u1:SendSystemMessageToSelf(string.format("This experience is running chat version [%d.%d.%s].", u2.MajorVersion, u2.MinorVersion, u2.BuildVersion), p4:GetCurrentChannel(), {})
        return true
    end
}]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[GetVersion]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="389"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local u1 = game:GetService("Chat")
local v2 = game:GetService("Players")
local v3 = script.Parent
local u4 = require(v3:WaitForChild("Util"))
local u5 = nil
pcall(function() --[[Anonymous function at line 13]]
    --[[
    Upvalues:
        [1] = u5
        [2] = u1
    --]]
    u5 = require(u1.ClientChatModules.ChatLocalization)
end)
u5 = u5 == nil and {
    ["Get"] = function(_, _, p6) --[[Function name: Get, line 14]]
        return p6
    end
} or u5
local u7 = v2.LocalPlayer
local u8 = {
    ["wave"] = true,
    ["point"] = true,
    ["dance"] = true,
    ["dance2"] = true,
    ["dance3"] = true,
    ["laugh"] = true,
    ["cheer"] = true
}
local u9 = {
    ["NotSupported"] = "InGame.Chat.Response.EmotesNotSupported",
    ["R15Only"] = "InGame.Chat.Response.EmotesWrongAvatarType",
    ["SwitchToR15"] = "InGame.Chat.ErrorMessageSwitchToR15",
    ["NoMatchingEmote"] = "InGame.Chat.Response.EmoteNotAvailable",
    ["TemporarilyUnavailable"] = "InGame.Chat.Response.EmotesTemporarilyUnavailable",
    ["AnimationPlaying"] = "InGame.Chat.ErrorMessageAnimationPlaying"
}
local u10 = {
    [u9.NotSupported] = "You can\'t use Emotes here.",
    [u9.R15Only] = "Only R15 avatars can use Emotes.",
    [u9.SwitchToR15] = "Switch to your R15 avatar to play Emote.",
    [u9.NoMatchingEmote] = "You can\'t use that Emote.",
    [u9.TemporarilyUnavailable] = "You can\'t use Emotes right now.",
    [u9.AnimationPlaying] = "You cannot play Emotes during this action."
}
local u11 = Color3.fromRGB(245, 50, 50)
local function v49(p12, p13, _) --[[Anonymous function at line 67]]
    --[[
    Upvalues:
        [1] = u8
        [2] = u7
        [3] = u9
        [4] = u5
        [5] = u10
        [6] = u11
        [7] = u4
    --]]
    local v14
    if string.sub(p12, 1, 3) == "/e " then
        v14 = string.sub(p12, 4)
    elseif string.sub(p12, 1, 7) == "/emote " then
        v14 = string.sub(p12, 8)
    else
        v14 = nil
    end
    if not v14 then
        return false
    end
    if u8[v14] then
        return true
    end
    local u15 = p13:GetCurrentChannel()
    if not u15 then
        return true
    end
    local v16 = u7.Character
    if not v16 then
        local v17 = u9.TemporarilyUnavailable
        local v18 = {
            ["ChatColor"] = u11
        }
        u4:SendSystemMessageToSelf(u5:Get(v17, u10[v17]), u15, v18)
        return true
    end
    local v19 = v16:FindFirstChild("Animate")
    if not v19 then
        local v20 = u9.NotSupported
        local v21 = {
            ["ChatColor"] = u11
        }
        u4:SendSystemMessageToSelf(u5:Get(v20, u10[v20]), u15, v21)
        return true
    end
    if not v19:FindFirstChild("PlayEmote") then
        local v22 = u9.NotSupported
        local v23 = {
            ["ChatColor"] = u11
        }
        u4:SendSystemMessageToSelf(u5:Get(v22, u10[v22]), u15, v23)
        return true
    end
    local u24 = v16:FindFirstChildOfClass("Humanoid")
    if not u24 then
        local v25 = u9.TemporarilyUnavailable
        local v26 = {
            ["ChatColor"] = u11
        }
        u4:SendSystemMessageToSelf(u5:Get(v25, u10[v25]), u15, v26)
        return true
    end
    if u24.RigType ~= Enum.HumanoidRigType.R15 then
        local v27 = u9.R15Only
        local v28 = {
            ["ChatColor"] = u11
        }
        u4:SendSystemMessageToSelf(u5:Get(v27, u10[v27]), u15, v28)
        return true
    end
    local v29 = u24:FindFirstChildOfClass("HumanoidDescription")
    if not v29 then
        local v30 = u9.TemporarilyUnavailable
        local v31 = {
            ["ChatColor"] = u11
        }
        u4:SendSystemMessageToSelf(u5:Get(v30, u10[v30]), u15, v31)
        return true
    end
    local v32 = v29:GetEmotes()
    local v33 = {}
    for v34, _ in pairs(v32) do
        v33[string.lower(v34)] = v34
    end
    local v35 = tonumber(v14)
    if v35 then
        local v36 = v29:GetEquippedEmotes()
        for _, v37 in pairs(v36) do
            if v37.Slot == v35 then
                v14 = v37.Name
            end
        end
    end
    local u38 = v33[string.lower(v14)]
    if u38 then
        spawn(function() --[[Anonymous function at line 143]]
            --[[
            Upvalues:
                [1] = u24
                [2] = u38
                [3] = u15
                [4] = u9
                [5] = u5
                [6] = u10
                [7] = u11
                [8] = u4
            --]]
            local v39, v40 = pcall(function() --[[Anonymous function at line 144]]
                --[[
                Upvalues:
                    [1] = u24
                    [2] = u38
                --]]
                return u24:PlayEmote(u38)
            end)
            if v39 then
                if not v40 then
                    local v41 = u15
                    local v42 = u9.TemporarilyUnavailable
                    local v43 = {
                        ["ChatColor"] = u11
                    }
                    u4:SendSystemMessageToSelf(u5:Get(v42, u10[v42]), v41, v43)
                end
            else
                local v44 = u15
                local v45 = u9.NotSupported
                local v46 = {
                    ["ChatColor"] = u11
                }
                u4:SendSystemMessageToSelf(u5:Get(v45, u10[v45]), v44, v46)
            end
        end)
        return true
    end
    local v47 = u9.NoMatchingEmote
    local v48 = {
        ["ChatColor"] = u11
    }
    u4:SendSystemMessageToSelf(u5:Get(v47, u10[v47]), u15, v48)
    return true
end
return {
    [u4.KEY_COMMAND_PROCESSOR_TYPE] = u4.COMPLETED_MESSAGE_PROCESSOR,
    [u4.KEY_PROCESSOR_FUNCTION] = v49
}]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[PlayEmote]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="390"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local u1 = require(script.Parent:WaitForChild("Util"))
local u2 = game:GetService("RunService")
local u3 = nil
pcall(function() --[[Anonymous function at line 12]]
    --[[
    Upvalues:
        [1] = u3
    --]]
    u3 = require(game:GetService("Chat").ClientChatModules.ChatLocalization)
end)
u3 = u3 == nil and {
    ["Get"] = function(_, _, p4) --[[Function name: Get, line 13]]
        return p4
    end
} or u3
function ProcessMessage(_, p5, _)
    --[[
    Upvalues:
        [1] = u2
        [2] = u1
        [3] = u3
    --]]
    local v6 = game:GetService("Players").LocalPlayer
    if not v6 or (v6.UserId >= 0 or u2:IsStudio()) then
        return false
    end
    local v7 = p5:GetCurrentChannel()
    if v7 then
        u1:SendSystemMessageToSelf(u3:Get("GameChat_SwallowGuestChat_Message", "Create a free account to get access to chat permissions!"), v7, {})
    end
    return true
end
return {
    [u1.KEY_COMMAND_PROCESSOR_TYPE] = u1.COMPLETED_MESSAGE_PROCESSOR,
    [u1.KEY_PROCESSOR_FUNCTION] = ProcessMessage
}]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[SwallowGuestChat]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="391"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local u1 = require(script.Parent:WaitForChild("Util"))
local u2 = nil
pcall(function() --[[Anonymous function at line 10]]
    --[[
    Upvalues:
        [1] = u2
    --]]
    u2 = require(game:GetService("Chat").ClientChatModules.ChatLocalization)
end)
u2 = u2 == nil and {
    ["Get"] = function(_, _, p3) --[[Function name: Get, line 11]]
        return p3
    end
} or u2
function ProcessMessage(p4, p5, p6)
    --[[
    Upvalues:
        [1] = u1
        [2] = u2
    --]]
    if string.sub(p4, 1, 3):lower() ~= "/c " then
        return false
    end
    local v7 = string.sub(p4, 4)
    local v8 = p5:GetChannel(v7)
    if v8 then
        p5:SwitchCurrentChannel(v7)
        if not p6.ShowChannelsBar and p5:GetCurrentChannel() then
            u1:SendSystemMessageToSelf(string.gsub(u2:Get("GameChat_SwitchChannel_NowInChannel", string.format("You are now chatting in channel: \'%s\'", v7), {
                ["RBX_NAME"] = v7
            }), "{RBX_NAME}", v7), v8, {})
        end
    else
        local v9 = p5:GetCurrentChannel()
        if v9 then
            u1:SendSystemMessageToSelf(string.gsub(u2:Get("GameChat_SwitchChannel_NotInChannel", string.format("You are not in channel: \'%s\'", v7), {
                ["RBX_NAME"] = v7
            }), "{RBX_NAME}", v7), v9, {
                ["ChatColor"] = Color3.fromRGB(245, 50, 50)
            })
        end
    end
    return true
end
return {
    [u1.KEY_COMMAND_PROCESSOR_TYPE] = u1.COMPLETED_MESSAGE_PROCESSOR,
    [u1.KEY_PROCESSOR_FUNCTION] = ProcessMessage
}]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[SwitchChannel]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="392"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local u1 = game:GetService("Players")
local u2 = { "/team ", "/t ", "% " }
function IsTeamCommand(p3)
    --[[
    Upvalues:
        [1] = u2
    --]]
    for v4 = 1, #u2 do
        local v5 = u2[v4]
        if string.sub(p3, 1, v5:len()):lower() == v5 then
            return true
        end
    end
    return false
end
local u6 = {}
u6.__index = u6
local v7 = require(script.Parent:WaitForChild("Util"))
local u8 = {}
function u6.EnterTeamChat(p9) --[[Anonymous function at line 27]]
    p9.TeamChatEntered = true
    p9.MessageModeButton.Size = UDim2.new(0, 1000, 1, 0)
    p9.MessageModeButton.Text = "[Team]"
    p9.MessageModeButton.TextColor3 = p9:GetTeamChatColor()
    local v10 = p9.MessageModeButton.TextBounds.X
    p9.MessageModeButton.Size = UDim2.new(0, v10, 1, 0)
    p9.TextBox.Size = UDim2.new(1, -v10, 1, 0)
    p9.TextBox.Position = UDim2.new(0, v10, 0, 0)
    p9.OriginalTeamText = p9.TextBox.Text
    p9.TextBox.Text = " "
end
function u6.TextUpdated(p11) --[[Anonymous function at line 41]]
    local v12 = p11.TextBox.Text
    if p11.TeamChatEntered then
        if v12 == "" then
            p11.MessageModeButton.Text = ""
            p11.MessageModeButton.Size = UDim2.new(0, 0, 0, 0)
            p11.TextBox.Size = UDim2.new(1, 0, 1, 0)
            p11.TextBox.Position = UDim2.new(0, 0, 0, 0)
            p11.TextBox.Text = ""
            p11.TeamChatEntered = false
            p11.ChatBar:ResetCustomState()
            p11.ChatBar:CaptureFocus()
        end
    elseif IsTeamCommand(v12) then
        p11:EnterTeamChat()
        return
    end
end
function u6.GetMessage(p13) --[[Anonymous function at line 64]]
    if p13.TeamChatEntered then
        return "/t " .. p13.TextBox.Text
    else
        return p13.TextBox.Text
    end
end
function u6.ProcessCompletedMessage(_) --[[Anonymous function at line 71]]
    return false
end
function u6.Destroy(p14) --[[Anonymous function at line 75]]
    p14.MessageModeConnection:disconnect()
    p14.Destroyed = true
end
function u6.GetTeamChatColor(p15) --[[Anonymous function at line 80]]
    --[[
    Upvalues:
        [1] = u1
    --]]
    local v16 = u1.LocalPlayer
    if v16.Team then
        return v16.Team.TeamColor.Color
    elseif p15.ChatSettings.DefaultChannelNameColor then
        return p15.ChatSettings.DefaultChannelNameColor
    else
        return Color3.fromRGB(35, 76, 142)
    end
end
function u8.new(p17, p18, p19) --[[Anonymous function at line 91]]
    --[[
    Upvalues:
        [1] = u6
    --]]
    local v20 = u6
    local u21 = setmetatable({}, v20)
    u21.Destroyed = false
    u21.ChatWindow = p17
    u21.ChatBar = p18
    u21.ChatSettings = p19
    u21.TextBox = p18:GetTextBox()
    u21.MessageModeButton = p18:GetMessageModeTextButton()
    u21.OriginalTeamText = ""
    u21.TeamChatEntered = false
    u21.MessageModeConnection = u21.MessageModeButton.MouseButton1Click:connect(function() --[[Anonymous function at line 102]]
        --[[
        Upvalues:
            [1] = u21
        --]]
        local v22 = u21.TextBox.Text
        if string.sub(v22, 1, 1) == " " then
            v22 = string.sub(v22, 2)
        end
        u21.ChatBar:ResetCustomState()
        u21.ChatBar:SetTextBoxText(v22)
        u21.ChatBar:CaptureFocus()
    end)
    u21:EnterTeamChat()
    return u21
end
function ProcessMessage(p23, p24, p25, p26)
    --[[
    Upvalues:
        [1] = u8
    --]]
    if p25.TargetChannel == "Team" then
        return
    elseif IsTeamCommand(p23) then
        return u8.new(p24, p25, p26)
    else
        return nil
    end
end
return {
    [v7.KEY_COMMAND_PROCESSOR_TYPE] = v7.IN_PROGRESS_MESSAGE_PROCESSOR,
    [v7.KEY_PROCESSOR_FUNCTION] = ProcessMessage
}]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Team]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="393"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1 = script.Parent.Parent
local u2 = require(v1:WaitForChild("ChatConstants"))
local v3 = {}
local u4 = {}
u4.__index = u4
function u4.SendSystemMessageToSelf(_, p5, p6, p7) --[[Anonymous function at line 31]]
    --[[
    Upvalues:
        [1] = u2
    --]]
    p6:AddMessageToChannel({
        ["ID"] = -1,
        ["FromSpeaker"] = nil,
        ["SpeakerUserId"] = 0,
        ["OriginalChannel"] = p6.Name,
        ["IsFiltered"] = true,
        ["MessageLength"] = string.len(p5),
        ["MessageLengthUtf8"] = utf8.len(utf8.nfcnormalize(p5)),
        ["Message"] = p5,
        ["MessageType"] = u2.MessageTypeSystem,
        ["Time"] = os.time(),
        ["ExtraData"] = p7
    })
end
function v3.new() --[[Anonymous function at line 50]]
    --[[
    Upvalues:
        [1] = u4
    --]]
    local v8 = u4
    local v9 = setmetatable({}, v8)
    v9.COMMAND_MODULES_VERSION = 1
    v9.KEY_COMMAND_PROCESSOR_TYPE = "ProcessorType"
    v9.KEY_PROCESSOR_FUNCTION = "ProcessorFunction"
    v9.IN_PROGRESS_MESSAGE_PROCESSOR = 0
    v9.COMPLETED_MESSAGE_PROCESSOR = 1
    return v9
end
return v3.new()]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Util]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="394"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1 = require(script.Parent:WaitForChild("Util"))
local u2 = require(script.Parent.Parent:WaitForChild("ChatSettings"))
local u3 = game:GetService("Players")
local u4 = nil
pcall(function() --[[Anonymous function at line 13]]
    --[[
    Upvalues:
        [1] = u4
    --]]
    u4 = require(game:GetService("Chat").ClientChatModules.ChatLocalization)
end)
local u5 = u3.LocalPlayer
local u6 = u4
while u5 == nil do
    u3.ChildAdded:wait()
    u5 = u3.LocalPlayer
end
local u7 = {}
u7.__index = u7
local u8 = {}
function u7.TrimWhisperCommand(_, p9) --[[Anonymous function at line 26]]
    if string.sub(p9, 1, 3):lower() == "/w " then
        return string.sub(p9, 4)
    elseif string.sub(p9, 1, 9):lower() == "/whisper " then
        return string.sub(p9, 10)
    else
        return nil
    end
end
function u7.TrimWhiteSpace(_, p10) --[[Anonymous function at line 35]]
    return string.gsub(p10, "%s+", ""), p10[#p10] == " "
end
function u7.ShouldAutoCompleteNames(_) --[[Anonymous function at line 41]]
    --[[
    Upvalues:
        [1] = u2
    --]]
    return u2.WhisperCommandAutoCompletePlayerNames == nil and true or u2.WhisperCommandAutoCompletePlayerNames
end
function u7.GetWhisperingPlayer(p11, p12) --[[Anonymous function at line 48]]
    --[[
    Upvalues:
        [1] = u3
        [2] = u5
        [3] = u2
    --]]
    local v13 = p11:TrimWhisperCommand((p12:lower()))
    if v13 then
        local v14, v15 = p11:TrimWhiteSpace(v13)
        local v16 = u3:GetPlayers()
        local v17 = {}
        local v18 = {}
        for v19 = 1, #v16 do
            if v16[v19] ~= u5 then
                local v20 = v16[v19].Name:lower()
                local v21 = string.len(v14)
                if string.sub(v20, 1, v21) == v14 then
                    v17[v16[v19]] = v16[v19].Name:lower()
                end
                if u2.WhisperByDisplayName then
                    local v22 = v16[v19].DisplayName:lower()
                    local v23 = string.len(v14)
                    if string.sub(v22, 1, v23) == v14 then
                        v18[v16[v19]] = v22
                    end
                end
            end
        end
        local v24 = 0
        local v25 = nil
        local v26 = nil
        for v27, v28 in pairs(v17) do
            v24 = v24 + 1
            if v28 == v14 and v15 then
                return v27
            end
            v26 = v28
            v25 = v27
        end
        if u2.WhisperByDisplayName then
            for v29, v30 in pairs(v18) do
                if v25 ~= v29 then
                    v24 = v24 + 1
                    v26 = v30
                    v25 = v29
                end
            end
        end
        if v24 == 1 then
            if p11:ShouldAutoCompleteNames() then
                return v25
            end
            if v26 == v14 then
                return v25
            end
        end
    end
    return nil
end
function u7.GetWhisperChanneNameColor(p31) --[[Anonymous function at line 106]]
    if p31.ChatSettings.WhisperChannelNameColor then
        return p31.ChatSettings.WhisperChannelNameColor
    else
        return Color3.fromRGB(102, 14, 102)
    end
end
function u7.EnterWhisperState(p32, p33) --[[Anonymous function at line 113]]
    --[[
    Upvalues:
        [1] = u2
        [2] = u6
    --]]
    p32.PlayerNameEntered = true
    p32.PlayerName = p33.Name
    p32.PlayerDisplayName = p33.DisplayName
    p32.MessageModeButton.Size = UDim2.new(0, 1000, 1, 0)
    local v34
    if u2.PlayerDisplayNamesEnabled and u2.WhisperByDisplayName then
        v34 = string.format("[To %s]", p33.DisplayName)
    else
        v34 = string.format("[To %s]", p33.Name)
    end
    if u6.tryLocalize then
        v34 = u6:tryLocalize(v34)
    end
    p32.MessageModeButton.Text = v34
    p32.MessageModeButton.TextColor3 = p32:GetWhisperChanneNameColor()
    local v35 = p32.MessageModeButton.TextBounds.X
    local v36 = math.ceil(v35)
    p32.MessageModeButton.Size = UDim2.new(0, v36, 1, 0)
    p32.TextBox.Size = UDim2.new(1, -v36, 1, 0)
    p32.TextBox.Position = UDim2.new(0, v36, 0, 0)
    p32.TextBox.Text = " "
end
function u7.TextUpdated(p37) --[[Anonymous function at line 142]]
    local v38 = p37.TextBox.Text
    if p37.PlayerNameEntered then
        if v38 == "" then
            p37.MessageModeButton.Text = ""
            p37.MessageModeButton.Size = UDim2.new(0, 0, 0, 0)
            p37.TextBox.Size = UDim2.new(1, 0, 1, 0)
            p37.TextBox.Position = UDim2.new(0, 0, 0, 0)
            p37.TextBox.Text = ""
            p37.PlayerNameEntered = false
            p37.ChatBar:ResetCustomState()
            p37.ChatBar:CaptureFocus()
        end
    else
        local v39 = p37:GetWhisperingPlayer(v38)
        if v39 then
            p37:EnterWhisperState(v39)
            return
        end
    end
end
function u7.GetMessage(p40) --[[Anonymous function at line 166]]
    if p40.PlayerNameEntered then
        return "/w " .. p40.PlayerName .. " " .. p40.TextBox.Text
    else
        return p40.TextBox.Text
    end
end
function u7.ProcessCompletedMessage(_) --[[Anonymous function at line 173]]
    return false
end
function u7.Destroy(p41) --[[Anonymous function at line 177]]
    p41.MessageModeConnection:disconnect()
    p41.Destroyed = true
end
function u8.new(p42, p43, p44, p45) --[[Anonymous function at line 182]]
    --[[
    Upvalues:
        [1] = u7
    --]]
    local v46 = u7
    local u47 = setmetatable({}, v46)
    u47.Destroyed = false
    u47.ChatWindow = p42
    u47.ChatBar = p43
    u47.ChatSettings = p44
    u47.TextBox = p43:GetTextBox()
    u47.MessageModeButton = p43:GetMessageModeTextButton()
    u47.OriginalWhisperText = ""
    u47.PlayerNameEntered = false
    u47.MessageModeConnection = u47.MessageModeButton.MouseButton1Click:connect(function() --[[Anonymous function at line 193]]
        --[[
        Upvalues:
            [1] = u47
        --]]
        local v48 = u47.TextBox.Text
        if string.sub(v48, 1, 1) == " " then
            v48 = string.sub(v48, 2)
        end
        u47.ChatBar:ResetCustomState()
        u47.ChatBar:SetTextBoxText(v48)
        u47.ChatBar:CaptureFocus()
    end)
    if p45 then
        u47:EnterWhisperState(p45)
        return u47
    else
        u47:TextUpdated()
        return u47
    end
end
function ProcessMessage(p49, p50, p51, p52)
    --[[
    Upvalues:
        [1] = u8
    --]]
    if string.sub(p49, 1, 3):lower() == "/w " or string.sub(p49, 1, 9):lower() == "/whisper " then
        return u8.new(p50, p51, p52)
    else
        return nil
    end
end
function CreateCustomState(p53, p54, p55, p56)
    --[[
    Upvalues:
        [1] = u8
    --]]
    return u8.new(p54, p55, p56, p53)
end
return {
    [v1.KEY_COMMAND_PROCESSOR_TYPE] = v1.IN_PROGRESS_MESSAGE_PROCESSOR,
    [v1.KEY_PROCESSOR_FUNCTION] = ProcessMessage,
    ["CustomStateCreator"] = CreateCustomState
}]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Whisper]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="BoolValue" referent="395"><Properties><bool name="Value">true</bool><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[InsertDefaultModules]]></string><BinaryString name="Tags"></BinaryString></Properties></Item></Item></Item><Item class="LocalizationTable" referent="396"><Properties><string name="Contents"><![CDATA[[{"key":"GameChat_ChatChannel_MutedInChannel","values":{"ru":"Тебя добавили в список игнорируемых. Ты не можешь общаться на этом канале","pt":"Você está silenciado(a) e não pode falar neste canal","de":"Du wurdest stummgeschaltet und kannst in diesem Kanal nicht kommunizieren.","zh-tw":"您遭到靜音，無法在此頻道聊天","id":"Kamu dibisukan, jadi kamu tidak dapat berbicara di channel ini","es-es":"Se te silenció y no puedes hablar en este canal.","es":"Se te silenció y no puedes hablar en este canal.","pt-br":"Você está silenciado(a) e não pode falar neste canal","zh-cjv":"你已被禁言，无法在此频道聊天","it":"Non hai più la parola e non puoi chattare in questo canale","fr":"Vous êtes bâillonné et ne pouvez pas parler sur ce canal","zh-cn":"你已被禁言，无法在此频道聊天","ja":"あなたはミュートされているので、このチャンネルで話すことは出来ません。","th-th":"คุณถูกปิดเสียงและไม่สามารถพูดคุยในแชนเนลนี้ได้","en-us":"You are muted and cannot talk in this channel","ko":"이 채널에서 음소거되어 이야기할 수 없어요"}},{"key":"GameChat_ChatCommandsTeller_AllChannelWelcomeMessage","values":{"ru":"Введи «/?» или «/help», чтобы увидеть список команд чата.","pt":"Digite '/?' ou '/help' no chat para ver uma lista de comandos.","de":"Gib „/?“ oder „/help“ im Chat ein, um eine Liste der Chatbefehle zu erhalten.","zh-tw":"輸入「/?」或「/help」取得聊天指令清單。","id":"Chat '/?' atau '/help' untuk daftar perintah chat.","es-es":"Envía \"/?\" o \"/help\" para obtener la lista de comandos del chat.","es":"Envía \"/?\" o \"/help\" para obtener la lista de comandos del chat.","pt-br":"Digite '/?' ou '/help' no chat para ver uma lista de comandos.","zh-cjv":"输入 “/?”或 “/help” 可获取聊天指令清单。","it":"Scrivi \"/?\" o \"/help\" per avere l'elenco dei comandi della chat.","fr":"Dans le chat, « /? » ou « /help » pour la liste des commandes du chat.","zh-cn":"Chat “/?”或 “/help” 可获取聊天指令清单。","ja":"チャットで 「/?」 または 「/help」を入力するとチャットコマンドの一覧を表示します。","th-th":"พิมพ์ \"/?\" หรือ \"/help\" ในแชทเพื่อดูรายการคำสั่งเกี่ยวกับการแชท","en-us":"Chat '/?' or '/help' for a list of chat commands.","ko":"채팅창에 '/?' 또는 '/help'를 입력하면 채팅 명령어 목록을 볼 수 있어요."}},{"key":"GameChat_ChatCommandsTeller_Desc","values":{"ru":"Это основные команды чата.","pt":"Estes são os comandos de chat básicos.","de":"Das sind die grundlegenden Chatbefehle.","zh-tw":"以下是基本聊天室指令。","id":"Ini adalah perintah chat dasar.","es-es":"Estos son los comandos básicos del chat.","es":"Estos son los comandos básicos del chat.","pt-br":"Estes são os comandos de chat básicos.","zh-cjv":"这些是基本聊天指令。","it":"Questi sono i comandi base della chat.","fr":"Voici les commandes de chat basiques.","zh-cn":"这些是基本聊天指令。","ja":"これらは基本的なチャットコマンドです。","th-th":"คำสั่งเหล่านี้เป็นคำสั่งแชทเบื้องต้น","en-us":"These are the basic chat commands.","ko":"다음은 기본적인 채팅 명령어입니다."}},{"key":"GameChat_ChatCommandsTeller_MeCommand","values":{"ru":"/me <текст> : сообщить о выполнении какого-либо действия.","pt":"/me <text> : comando de RPG para realizar ações.","de":"/me <Text> : Rollenspielbefehl für Aktionen.","zh-tw":"/me <文字>：角色扮演動作的指令。","id":"/me <text> : perintah roleplay untuk melakukan tindakan.","es-es":"/me <text>: comando de rol para realizar acciones.","es":"/me <text>: comando de rol para realizar acciones.","pt-br":"/me <text> : comando de RPG para realizar ações.","zh-cjv":"/me <text> : 做动作的角色扮演指令。","it":"/me <testo>: comando per descrivere azioni e giocare di ruolo.","fr":"/me <texte> : commande jeu de rôle pour accomplir des actions.","zh-cn":"/me <text> : 做动作的角色扮演指令。","ja":"/me <テキスト> : アクションのためのロールプレイングコマンド。","th-th":"/me <ข้อความ> : คำสั่งเพื่อสวมบทบาทในการดำเนินการต่างๆ","en-us":"/me <text> : roleplaying command for doing actions.","ko":"/me <텍스트> : 작업 수행을 위한 롤플레잉 명령어."}},{"key":"GameChat_ChatCommandsTeller_MuteCommand","values":{"ru":"/mute <пользователь> : игнорировать пользователя.","pt":"/mute <speaker> : silenciar uma pessoa.","de":"/mute <Sprecher> : Schaltet Sprecher:in stumm.","zh-tw":"/mute <使用者名稱> : 將此使用者靜音。","id":"/mute <speaker> : bisukan pembicara.","es-es":"/mute <usuario>: silenciar a un usuario.","es":"/mute <usuario>: silenciar a un usuario.","pt-br":"/mute <speaker> : silenciar uma pessoa.","zh-cjv":"/mute <用户名称>：将用户禁言。","it":"/mute <giocatore>: togli la parola a un giocatore.","fr":"/mute <interlocuteur> : bâillonne un interlocuteur.","zh-cn":"/mute <用户名称>：将用户禁言。","ja":"/mute <スピーカー> : スピーカーをミュート。","th-th":"/mute <ผู้ใช้> : ปิดเสียงผู้ใช้","en-us":"/mute <speaker> : mute a speaker.","ko":"/mute <스피커> : 스피커 음소거."}},{"key":"GameChat_ChatCommandsTeller_SwitchChannelCommand","values":{"ru":"/c <канал> : переключить вкладку в меню каналов.","pt":"/c <channel> : trocar abas do menu de canal.","de":"/c <Kanal> : Zum Wechseln zwischen Kanalmenüreitern.","zh-tw":"/c <頻道名稱>：切換頻道選單標籤。","id":"/c <channel> : tab menu beralih channel.","es-es":"/c <channel>: alternar pestañas del menú del chat.","es":"/c <channel>: alternar pestañas del menú del chat.","pt-br":"/c <channel> : trocar abas do menu de canal.","zh-cjv":"/c <频道名称> : 切换频道菜单标签。","it":"/c <canale>: cambia scheda nel menu dei canali.","fr":"/c <canal> : échanger les onglets du menu Canal.","zh-cn":"/c <频道名称> : 切换频道菜单标签。","ja":"/c <チャンネル> : チャンネルメニュータブを切り替える。","th-th":"/c <แชนเนล> : สลับแท็บเมนูแชนเนล","en-us":"/c <channel> : switch channel menu tabs.","ko":"/c <채널> : 채널 메뉴 탭 전환."}},{"key":"GameChat_ChatCommandsTeller_TeamCommand","values":{"ru":"/team <message> или /t <message> : отправить групповое сообщение команде.","pt":"/team <message> ou /t <message> : enviar um chat de equipe aos membros da sua equipe.","de":"/team <Nachricht> oder /t <Nachricht> : Sendet eine Teamnachricht an Mitglieder deines Teams.","zh-tw":"/team <訊息> 或 /t <訊息> : 傳送訊息給隊伍中的使用者。","id":"/team <message> atau /t <message> : kirim chat tim ke anggota tim kamu.","es-es":"/team <message> o /t <message>: enviar un mensaje de chat a los miembros de tu equipo.","es":"/team <message> o /t <message>: enviar un mensaje de chat a los miembros de tu equipo.","pt-br":"/team <message> ou /t <message> : enviar um chat de equipe aos membros da sua equipe.","zh-cjv":"/team <message> 或 /t <message> : 向你的队友发送聊天信息。","it":"/team <message> or /t <message> : invia un messaggio chat a tutti i giocatori della tua squadra.","fr":"/team <message> ou /t <message> : envoyer un message aux personnes de ton équipe.","zh-cn":"/team <message> 或 /t <message> : 向你的队友发送聊天信息。","ja":"/team <メッセージ> または /t <メッセージ> : 自分のチームメンバーにチームチャットを送る。","th-th":"/team <ข้อความ> หรือ /t <ข้อความ> : ส่งแชททีมไปยังคนในทีมของคุณ","en-us":"/team <message> or /t <message> : send a team chat to people on your team.","ko":"/team <메시지> 또는 /t <메시지> : 팀 내 회원에게 팀 채팅 전송."}},{"key":"GameChat_ChatCommandsTeller_UnMuteCommand","values":{"ru":"/unmute <speaker>: перестать игнорировать пользователя.","pt":"/unmute <speaker> : remover silêncio de uma pessoa.","de":"/unmute <Sprecher> : Hebt Stummschaltung eines Sprechers auf.","zh-tw":"/unmute <使用者名稱> : 將此使用者解除靜音。","id":"/unmute <speaker> : bunyikan pembicara.","es-es":"/unmute <speaker>: cancelar silencio de un usuario.","es":"/unmute <speaker>: cancelar silencio de un usuario.","pt-br":"/unmute <speaker> : remover silêncio de uma pessoa.","zh-cjv":"/unmute <用户名称> : 取消该用户禁言。","it":"/unmute <giocatore>: restituisci la parola a un giocatore.","fr":"/unmute <interlocuteur> : retire le bâillon d'un interlocuteur.","zh-cn":"/unmute <用户名称> : 取消该用户禁言。","ja":"/unmute <スピーカー> : スピーカーのミュートを解除。","th-th":"/unmute <ผู้ใช้> : เลิกปิดเสียงผู้ใช้","en-us":"/unmute <speaker> : unmute a speaker.","ko":"/unmute <스피커> : 스피커 음소거 해제."}},{"key":"GameChat_ChatCommandsTeller_WhisperCommand","values":{"ru":"/whisper <speaker> или /w <speaker> : открыть канал для личной переписки с пользователем.","pt":"/whisper <speaker> ou /w <speaker> : abrir um canal de mensagem privada com uma pessoa.","de":"/whisper <Sprecher:in> oder /w <Sprecher:in> : Öffnet privaten Nachrichtenkanal mit Sprecher:in.","zh-tw":"/whisper <使用者名稱> 或 /w <使用者名稱> : 與此使用者開啟私人訊息頻道。","id":"/whisper <speaker> atau /w <speaker> : buka channel pesan privat dengan pembicara.","es-es":"/whisper <usuario> o /w <usuario>: abrir canal de mensajes privados con un usuario.","es":"/whisper <usuario> o /w <usuario>: abrir canal de mensajes privados con un usuario.","pt-br":"/whisper <speaker> ou /w <speaker> : abrir um canal de mensagem privada com uma pessoa.","zh-cjv":"/whisper <用户名称> 或 /w <用户名称> : 与此用户开启私人消息频道。","it":"/whisper <giocatore> o /w <giocatore>: apri un canale privato con un giocatore.","fr":"/whisper <interlocuteur> ou /w <interlocuteur> : ouvre un canal de discussion privé avec l'interlocuteur.","zh-cn":"/whisper <用户名称> 或 /w <用户名称> : 与此用户开启私人消息频道。","ja":"/whisper <スピーカー> または /w <スピーカー> : プライベートメッセージチャンネルを開く","th-th":"/whisper <ผู้ใช้> or /w <ผู้ใช้> : เปิดแชนเนลเพื่อแชทข้อความแบบส่วนตัวกับผู้ใช้","en-us":"/whisper <speaker> or /w <speaker> : open private message channel with speaker.","ko":"/whisper <사용자 이름> 또는 /w <사용자 이름> : 사용자 채널에서 비공개 메시지 열기."}},{"key":"GameChat_ChatFloodDetector_Message","values":{"ru":"Необходимо подождать, прежде чем отправлять новое сообщение!","pt":"Você precisa esperar antes de enviar outra mensagem!","de":"Du musst warten, bevor du eine weitere Nachricht senden kannst!","zh-tw":"請稍後再傳送訊息。","id":"Kamu harus menunggu sebelum mengirim pesan lain.","es-es":"¡Debes esperar antes de enviar otro mensaje!","es":"¡Debes esperar antes de enviar otro mensaje!","pt-br":"Você precisa esperar antes de enviar outra mensagem!","zh-cjv":"发送另一条消息前你必须等待！","it":"Devi aspettare prima di inviare un altro messaggio!","fr":"Vous devez attendre avant d'envoyer un autre message !","zh-cn":"发送另一条消息前你必须等待！","ja":"少し待ってから次のメッセージを送ってください!","th-th":"คุณจำเป็นต้องรอก่อนที่จะส่งข้อความอื่นต่อ!","en-us":"You must wait before sending another message!","ko":"추가 메시지를 보내기 전에 기다려야 해요!"}},{"key":"GameChat_ChatFloodDetector_MessageDisplaySeconds","values":{"ru":"Ты сможешь отправить новое сообщение только через {RBX_NUMBER} с!","pt":"Você precisa esperar {RBX_NUMBER} segundos antes de enviar outra mensagem!","de":"Du musst {RBX_NUMBER} Sekunden lang warten, bevor du eine weitere Nachricht senden kannst!","zh-tw":"請 {RBX_NUMBER} 秒後再傳送訊息。","id":"Kamu harus menunggu {RBX_NUMBER} detik sebelum mengirim pesan lain.","es-es":"¡Debes esperar {RBX_NUMBER} segundos antes de enviar otro mensaje!","es":"¡Debes esperar {RBX_NUMBER} segundos antes de enviar otro mensaje!","pt-br":"Você precisa esperar {RBX_NUMBER} segundos antes de enviar outra mensagem!","zh-cjv":"发送另一条消息前你必须等待 {RBX_NUMBER} 秒！","it":"Devi aspettare {RBX_NUMBER} secondi prima di inviare un altro messaggio!","fr":"Vous devez attendre {RBX_NUMBER} secondes avant d'envoyer un autre message !","zh-cn":"发送另一条消息前你必须等待 {RBX_NUMBER} 秒！","ja":"{RBX_NUMBER} 秒待ってから次のメッセージを送ってください!","th-th":"คุณจำเป็นต้องรอเป็นเวลา {RBX_NUMBER} วินาทีก่อนที่จะส่งข้อความอื่นต่อ!","en-us":"You must wait {RBX_NUMBER} seconds before sending another message!","ko":"추가 메시지를 보내기 전에 {RBX_NUMBER}초 동안 기다려야 해요!"}},{"key":"GameChat_ChatMain_ChatBarText","values":{"ru":"Чтобы общаться в чате, нажми здесь или на клавишу «/»","pt":"Para escrever clique aqui ou aperte a tecla \"/\"","de":"Klicke zum Chatten hier oder drücke die „/“-Taste.","zh-tw":"若要聊天，請按下此處或「/」鍵","id":"Untuk chat, klik di sini atau tekan tombol \"/\"","es-es":"Para chatear, haz clic aquí o pulsa la tecla \"/\".","es":"Para chatear, haz clic aquí o pulsa la tecla \"/\".","pt-br":"Para escrever clique aqui ou aperte a tecla \"/\"","zh-cjv":"若要聊天，请点按此处或按下“/”键","it":"Per chattare, clicca qui o premi il tasto \"/\"","fr":"Pour discuter, cliquez ici ou sur la touche « / »","zh-cn":"若要聊天，请点按此处或按下“/”键","ja":"チャットするにはここをクリックするか 「 / 」 キーを押します。","th-th":"คลิกที่นี่หรือกดที่ \"/\" เพื่อเริ่มแชท","en-us":"To chat click here or press \"/\" key","ko":"여기를 클릭하거나 \"/\" 키를 누른 후 채팅을 시작하세요"}},{"key":"GameChat_ChatMain_ChatBarTextTouch","values":{"ru":"Коснись здесь, чтобы общаться в чате","pt":"Toque aqui para escrever","de":"Tippe zum Chatten hier.","zh-tw":"按下此處聊天","id":"Ketuk di sini untuk chat","es-es":"Toca aquí para chatear","es":"Toca aquí para chatear","pt-br":"Toque aqui para escrever","zh-cjv":"轻点此处以聊天","it":"Tocca qui per chattare","fr":"Touchez ici pour discuter","zh-cn":"轻点此处以聊天","ja":"ここをタップしてチャットする","th-th":"แตะที่นี่เพื่อแชท","en-us":"Tap here to chat","ko":"여기를 클릭한 후 내용을 입력하세요"}},{"key":"GameChat_ChatMain_ChatTranslationOnboarding","values":{"ru":"Доступен перевод текстового чата. Нажми на символ перед сообщением, чтобы увидеть оригинал. Перевод можно отключить в Настройках.","pt":"O chat de texto será traduzido para seu idioma. Toque no símbolo na frente da mensagem para ver o original. Você pode desativar as traduções no menu de configurações.","de":"Der Textchat wird in deine Sprache übersetzt. Tippe auf das Symbol vor der Nachricht, um sie in der Originalsprache anzuzeigen. Du kannst Übersetzungen im Menü \"Einstellungen\" ausschalten.","zh-tw":"文字交談會翻譯為您慣用的語言。請輕觸訊息前的符號，查看原文。您可以在「設定」選單關閉翻譯。","id":"Chat teks akan diterjemahkan ke dalam bahasa kamu. Ketuk simbol di depan pesan untuk melihat pesan orisinal. Kamu dapat mematikan terjemahan di menu Pengaturan.","es-es":"El chat de texto se traducirá a tu idioma. Toca el símbolo delante del mensaje para ver el original. Puedes desactivar las traducciones en el menú Configuración.","es":"El chat de texto se traducirá a tu idioma. Toca el símbolo delante del mensaje para ver el original. Puedes desactivar las traducciones en el menú Configuración.","pt-br":"O chat de texto será traduzido para seu idioma. Toque no símbolo na frente da mensagem para ver o original. Você pode desativar as traduções no menu de configurações.","zh-cjv":"文本聊天将被翻译至你的语言。点按消息前面的符号，查看原始文本。 你可以在“设置”菜单中关闭翻译。","it":"La chat di testo verrà tradotta nella tua lingua. Tocca il simbolo di fronte al messaggio per vedere l'originale. Puoi disattivare le traduzioni nel menu Impostazioni.","fr":"Le texte du chat sera traduit dans ta langue. Touche le symbole devant le message pour voir l'original. Tu peux désactiver les traductions dans le menu Paramètres.","zh-cn":"文本聊天将被翻译至你的语言。点按消息前面的符号，查看原始文本。 你可以在“设置”菜单中关闭翻译。","ja":"テキストチャットが設定言語に翻訳されます。原文を見るには、メッセージの前にある翻訳マークをタップしてください。翻訳は設定メニューでオフにできます。","th-th":"ข้อความในแชทจะได้รับการแปลเป็นภาษาของคุณ แตะสัญลักษณ์หน้าข้อความเพื่อดูข้อความในภาษาต้นฉบับ คุณสามารถปิดการแปลภาษาได้ในเมนูการตั้งค่า","en-us":"Text chat will be translated into your language. Tap the symbol in front of the message to see the original. You can turn off translations in the Settings menu.","ko":"텍스트 채팅이 사용자의 언어로 번역됩니다. 메시지 앞의 기호를 탭하면 이를 원래 언어로 확인할 수 있습니다. 설정 메뉴에서 번역 기능을 끌 수 있습니다."}},{"key":"GameChat_ChatMain_SpeakerHasBeenBlocked","values":{"ru":"Пользователь {RBX_NAME} заблокирован.","pt":"O usuário '{RBX_NAME}' foi bloqueado(a).","de":"Sprecher:in „{RBX_NAME}“ wurde blockiert.","zh-tw":"已封鎖使用者「{RBX_NAME}」。","id":"Pembicara {RBX_NAME} telah diblokir.","es-es":"Se bloqueó al usuario \"{RBX_NAME}\".","es":"Se bloqueó al usuario \"{RBX_NAME}\".","pt-br":"O usuário '{RBX_NAME}' foi bloqueado(a).","zh-cjv":"发言者“{RBX_NAME}”已被屏蔽。","it":"Hai bloccato il giocatore \"{RBX_NAME}\".","fr":"L'interlocuteur {RBX_NAME} a été bloqué.","zh-cn":"发言者“{RBX_NAME}”已被屏蔽。","ja":"スピーカーの「{RBX_NAME}」さんをブロック中です。","th-th":"บล็อคผู้ใช้ \"{RBX_NAME}\" แล้ว","en-us":"Speaker '{RBX_NAME}' has been blocked.","ko":"사용자 '{RBX_NAME}' 님을 차단했어요."}},{"key":"GameChat_ChatMain_SpeakerHasBeenMuted","values":{"ru":"Пользователь {RBX_NAME} добавлен в список игнорируемых.","pt":"O usuário '{RBX_NAME}' foi silenciado(a).","de":"Sprecher:in „{RBX_NAME}“ wurde stummgeschaltet.","zh-tw":"已將使用者「{RBX_NAME}」靜音。","id":"Pembicara {RBX_NAME} telah dibisukan.","es-es":"Se silenció al usuario \"{RBX_NAME}\".","es":"Se silenció al usuario \"{RBX_NAME}\".","pt-br":"O usuário '{RBX_NAME}' foi silenciado(a).","zh-cjv":"发言者“{RBX_NAME}”已被禁言。","it":"Hai tolto la parola al giocatore \"{RBX_NAME}\".","fr":"L'interlocuteur {RBX_NAME} a été bâillonné.","zh-cn":"发言者“{RBX_NAME}”已被禁言。","ja":"スピーカーの「{RBX_NAME}」さんをミュート中です。","th-th":"ปิดเสียงผู้ใช้ \"{RBX_NAME}\" แล้ว","en-us":"Speaker '{RBX_NAME}' has been muted.","ko":"사용자 '{RBX_NAME}' 님이 음소거되었어요."}},{"key":"GameChat_ChatMain_SpeakerHasBeenUnBlocked","values":{"ru":"Пользователь {RBX_NAME} разблокирован.","pt":"O usuário '{RBX_NAME}' foi desbloqueado.","de":"Blockierung von Sprecher:in „{RBX_NAME}“ wurde aufgehoben.","zh-tw":"已解除封鎖使用者「{RBX_NAME}」。","id":"Pembicara {RBX_NAME} telah dibuka blokir.","es-es":"Se bloqueó al usuario \"{RBX_NAME}\".","es":"Se bloqueó al usuario \"{RBX_NAME}\".","pt-br":"O usuário '{RBX_NAME}' foi desbloqueado.","zh-cjv":"发言者“{RBX_NAME}”已被取消屏蔽。","it":"Hai sbloccato il giocatore \"{RBX_NAME}\".","fr":"L'interlocuteur {RBX_NAME} n'est plus bloqué.","zh-cn":"发言者“{RBX_NAME}”已被取消屏蔽。","ja":"スピーカーの「{RBX_NAME}」さんをブロック解除しました。","th-th":"เลิกบล็อคผู้ใช้ \"{RBX_NAME}\" แล้ว","en-us":"Speaker '{RBX_NAME}' has been unblocked.","ko":"사용자 '{RBX_NAME}'님 차단을 해제했어요."}},{"key":"GameChat_ChatMain_SpeakerHasBeenUnMuted","values":{"ru":"Пользователь {RBX_NAME} удалён из списка игнорируемых.","pt":"O silêncio de '{RBX_NAME}' foi removido.","de":"Stummschaltung von Sprecher:in „{RBX_NAME}“ wurde aufgehoben.","zh-tw":"已將使用者「{RBX_NAME}」解除靜音。","id":"Pembicara {RBX_NAME} telah dibunyikan.","es-es":"Se canceló el silencio del usuario \"{RBX_NAME}\".","es":"Se canceló el silencio del usuario \"{RBX_NAME}\".","pt-br":"O silêncio de '{RBX_NAME}' foi removido.","zh-cjv":"发言者“{RBX_NAME}”已被取消禁言。","it":"Hai restituito la parola al giocatore \"{RBX_NAME}\".","fr":"L'interlocuteur {RBX_NAME} n'est plus bâillonné.","zh-cn":"发言者“{RBX_NAME}”已被取消禁言。","ja":"スピーカーの「{RBX_NAME}」さんをミュート解除しました。","th-th":"เลิกปิดเสียงผู้ใช้ \"{RBX_NAME}\" แล้ว","en-us":"Speaker '{RBX_NAME}' has been unmuted.","ko":"사용자 '{RBX_NAME}' 님의 음소거가 해제되었어요."}},{"key":"GameChat_ChatMessageValidator_MaxLengthError","values":{"ru":"Превышено максимально допустимое количество символов в сообщении.","pt":"Sua mensagem ultrapassa o tamanho máximo de mensagem.","de":"Deine Nachricht überschreitet die zulässige Nachrichtenlänge.","zh-tw":"您的訊息超過長度限制。","id":"Pesan kamu melebihi panjang maksimal.","es-es":"Tu mensaje supera la longitud máxima permitida.","es":"Tu mensaje supera la longitud máxima permitida.","pt-br":"Sua mensagem ultrapassa o tamanho máximo de mensagem.","zh-cjv":"你的消息已超过最大长度限制。","it":"Il tuo messaggio supera la lunghezza massima consentita.","fr":"Votre message dépasse la longueur maximale.","zh-cn":"你的消息已超过最大长度限制。","ja":"メッセージが最大文字数を超えています。","th-th":"ข้อความของคุณยาวเกินความยาวสูงสุดที่กำหนดไว้แล้ว","en-us":"Your message exceeds the maximum message length.","ko":"메시지 길이 한도를 초과했어요."}},{"key":"GameChat_ChatMessageValidator_SettingsError","values":{"ru":"В настройках чата заблокирована возможность отправлять сообщения.","pt":"Suas configurações de chat impedem que você envie mensagens.","de":"Aufgrund deiner Chateinstellungen kannst du keine Nachrichten senden.","zh-tw":"您的聊天設定禁止您傳送訊息。","id":"Pengaturan chat mencegah kamu untuk mengirim pesan.","es-es":"Tu configuración de chat te impide enviar mensajes.","es":"Tu configuración de chat te impide enviar mensajes.","pt-br":"Suas configurações de chat impedem que você envie mensagens.","zh-cjv":"你的聊天设置禁止你发送消息。","it":"Non puoi inviare messaggi per le impostazioni della tua chat.","fr":"Vos paramètres de chat vous empêchent d'envoyer des messages.","zh-cn":"你的聊天设置禁止你发送消息。","ja":"メッセージが送れないチャット設定です。","th-th":"การตั้งค่าแชทของคุณทำให้คุณไม่สามารถส่งข้อความได้","en-us":"Your chat settings prevent you from sending messages.","ko":"채팅 설정 때문에 메시지를 보낼 수 없습니다."}},{"key":"GameChat_ChatMessageValidator_WhitespaceError","values":{"ru":"Сообщение содержит недопустимый пробел.","pt":"Sua mensagem contém um espaço em branco, que não é permitido.","de":"Deine Nachricht enthält unzulässige Leerräume.","zh-tw":"訊息禁止使用空白字元。","id":"Terdapat spasi kosong di pesan kamu. Spasi kosong tidak diperbolehkan.","es-es":"Tu mensaje contiene espacios vacíos que no se permiten.","es":"Tu mensaje contiene espacios vacíos que no se permiten.","pt-br":"Sua mensagem contém um espaço em branco, que não é permitido.","zh-cjv":"你的消息包含不被允许的空格。","it":"Il tuo messaggio contiene spazi vuoti non consentiti.","fr":"Votre message contient des espaces blancs qui sont interdits.","zh-cn":"你的消息包含不被允许的空格。","ja":"メッセージに許可されていないスペースが含まれています。","th-th":"ข้อความของคุณมีช่องว่างซึ่งไม่ได้รับอนุญาต","en-us":"Your message contains whitespace that is not allowed.","ko":"메시지에 허용되지 않는 여백이 있어요."}},{"key":"GameChat_ChatServiceRunner_ChannelDoesNotExist","values":{"ru":"Канал «{RBX_NAME}» не существует.","pt":"O canal {RBX_NAME} não existe.","de":"Kanal „{RBX_NAME}“ existiert nicht.","zh-tw":"頻道「{RBX_NAME}」不存在。","id":"Channel {RBX_NAME} tidak ada.","es-es":"El canal {RBX_NAME} no existe.","es":"El canal {RBX_NAME} no existe.","pt-br":"O canal {RBX_NAME} não existe.","zh-cjv":"频道“{RBX_NAME}”不存在。","it":"Il canale {RBX_NAME} non esiste.","fr":"Le canal {RBX_NAME} n'existe pas.","zh-cn":"频道“{RBX_NAME}”不存在。","ja":"チャンネル {RBX_NAME} は存在しません。","th-th":"ไม่มีแชนเนล \"{RBX_NAME}\" อยู่","en-us":"Channel {RBX_NAME} does not exist.","ko":"{RBX_NAME} 채널이 없어요."}},{"key":"GameChat_ChatServiceRunner_SystemChannelWelcomeMessage","values":{"ru":"Этот канал предназначен для системных и игровых уведомлений.","pt":"Este canal é destinado às notificações do sistema e de experiências.","de":"Dieser Kanal ist für System- und Erlebnisbenachrichtigungen.","zh-tw":"此頻道為系統及體驗通知專用。","id":"Channel ini untuk notifikasi sistem dan pengalaman virtual.","es-es":"Este canal es para notificaciones del sistema y de la experiencia.","es":"Este canal es para notificaciones del sistema y de la experiencia.","pt-br":"Este canal é destinado às notificações do sistema e de experiências.","zh-cjv":"此频道用于发送系统及作品通知。","it":"Questo canale è per le notifiche dell'esperienza e del sistema.","fr":"Ce canal est destiné aux notifications de système et d'expérience.","zh-cn":"此频道用于发送系统及作品通知。","ja":"このチャンネルはシステムと仮想空間の通知のためのものです。","th-th":"แชนเนลนี้เป็นแชนเนลสำหรับการแจ้งเตือนของระบบและประสบการณ์","en-us":"This channel is for system and experience notifications.","ko":"이 채널은 시스템 및 체험 알림용입니다."}},{"key":"GameChat_ChatServiceRunner_YouAreNotInChannel","values":{"ru":"Тебя нет на канале «{RBX_NAME}»","pt":"Você não está no canal {RBX_NAME}","de":"Du befindest dich nicht in Kanal „{RBX_NAME}“.","zh-tw":"您不在 {RBX_NAME} 頻道","id":"Kamu tidak ada di channel {RBX_NAME}","es-es":"No estás en el canal {RBX_NAME}.","es":"No estás en el canal {RBX_NAME}.","pt-br":"Você não está no canal {RBX_NAME}","zh-cjv":"你不在频道“{RBX_NAME}”","it":"Non ti trovi nel canale {RBX_NAME}","fr":"Vous n'êtes pas sur le canal {RBX_NAME}","zh-cn":"你不在频道“{RBX_NAME}”","ja":"あなたは {RBX_NAME} チャンネルにいません。","th-th":"คุณไม่ได้อยู่ในแชนเนล {RBX_NAME}","en-us":"You are not in channel {RBX_NAME}","ko":"{RBX_NAME} 채널에 있지 않습니다"}},{"key":"GameChat_ChatServiceRunner_YouCannotJoinChannel","values":{"ru":"Ты не можешь подключиться к каналу «{RBX_NAME}»","pt":"Você não pode entrar no canal {RBX_NAME}","de":"Du kannst Kanal „{RBX_NAME}“ nicht beitreten.","zh-tw":"您無法加入{RBX_NAME} 頻道","id":"Kamu tidak dapat bergabung ke channel {RBX_NAME}","es-es":"No puedes unirte al canal {RBX_NAME}.","es":"No puedes unirte al canal {RBX_NAME}.","pt-br":"Você não pode entrar no canal {RBX_NAME}","zh-cjv":"你无法加入频道“{RBX_NAME}”","it":"Non puoi accedere al canale {RBX_NAME}","fr":"Vous ne pouvez pas rejoindre le canal {RBX_NAME}","zh-cn":"你无法加入频道“{RBX_NAME}”","ja":"{RBX_NAME} チャンネルに参加できません","th-th":"คุณไม่สามารถเข้าร่วมแชนเนล \"{RBX_NAME}\" ได้","en-us":"You cannot join channel {RBX_NAME}","ko":"{RBX_NAME} 채널에 가입할 수 없어요"}},{"key":"GameChat_ChatServiceRunner_YouCannotLeaveChannel","values":{"ru":"Ты не можешь покинуть канал «{RBX_NAME}».","pt":"Você não pode sair do canal {RBX_NAME}","de":"Du kannst Kanal „{RBX_NAME}“ nicht verlassen.","zh-tw":"您無法離開 {RBX_NAME} 頻道","id":"Kamu tidak dapat keluar dari channel {RBX_NAME}","es-es":"No puedes salir del canal {RBX_NAME}.","es":"No puedes salir del canal {RBX_NAME}.","pt-br":"Você não pode sair do canal {RBX_NAME}","zh-cjv":"你无法离开频道“{RBX_NAME}”","it":"Non puoi lasciare il canale {RBX_NAME}","fr":"Vous ne pouvez pas quitter le canal {RBX_NAME}","zh-cn":"你无法离开频道“{RBX_NAME}”","ja":"{RBX_NAME} チャンネルから退出できません","th-th":"คุณไม่สามารถออกจากแชนเนล \"{RBX_NAME}\" ได้","en-us":"You cannot leave channel {RBX_NAME}","ko":"{RBX_NAME} 채널에서 나갈 수 없어요"}},{"key":"GameChat_ChatService_CannotLeaveChannel","values":{"ru":"Ты не можешь покинуть этот канал.","pt":"Você não pode sair deste canal.","de":"Du kannst diesen Kanal nicht verlassen.","zh-tw":"您無法離開此頻道。","id":"Kamu tidak dapat keluar dari channel ini.","es-es":"No puedes salir de este canal.","es":"No puedes salir de este canal.","pt-br":"Você não pode sair deste canal.","zh-cjv":"你无法离开此频道。","it":"Non puoi lasciare questo canale.","fr":"Vous ne pouvez pas quitter ce canal.","zh-cn":"你无法离开此频道。","ja":"このチャンネルから退出できません。","th-th":"คุณไม่สามารถออกจากแชนเนลนี้ได้","en-us":"You cannot leave this channel.","ko":"채널에서 나갈 수 없어요."}},{"key":"GameChat_ChatService_ChatFilterIssues","values":{"ru":"Могут возникать задержки в передаче сообщений из-за проблем с фильтром чата.","pt":"O filtro de chat está com problemas no momento e as mensagens podem demorar para aparecer.","de":"Es gibt derzeit Probleme mit dem Chatfilter. Nachrichten können deshalb mit Verzögerung angezeigt werden.","zh-tw":"文字過濾系統發生問題，訊息可能會延遲顯示。","id":"Filter chat sedang mengalami masalah dan pesan mungkin akan muncul terlambat.","es-es":"El filtro del chat sufre problemas en este momento y es posible que los mensajes tarden un poco en aparecer.","es":"El filtro del chat sufre problemas en este momento y es posible que los mensajes tarden un poco en aparecer.","pt-br":"O filtro de chat está com problemas no momento e as mensagens podem demorar para aparecer.","zh-cjv":"聊天过滤器当前遇到问题，消息显示可能出现延迟。","it":"Il filtro della chat sta riscontrando dei problemi e i messaggi potrebbero apparire in ritardo.","fr":"Le filtre de chat connaît actuellement des problèmes et les messages pourraient mettre du temps à apparaître.","zh-cn":"聊天过滤器当前遇到问题，消息显示可能出现延迟。","ja":"現在、チャットフィルターに問題があるためメッセージの表示が遅れています。","th-th":"ขณะนี้ตัวกรองแชทกำลังประสบปัญหาอยู่ทำให้ข้อความอาจปรากฏขึ้นช้า","en-us":"The chat filter is currently experiencing issues and messages may be slow to appear.","ko":"현재 채팅 필터에 문제가 있어 메시지 표시가 느릴 수 있어요."}},{"key":"GameChat_ChatService_YouHaveLeftChannel","values":{"ru":"Ты покидаешь канал «{RBX_NAME}»","pt":"Você saiu do canal '{RBX_NAME}'","de":"Du hast Kanal „{RBX_NAME}“ verlassen.","zh-tw":"您已離開「{RBX_NAME}」頻道","id":"Kamu telah keluar dari channel: {RBX_NAME}","es-es":"Saliste del canal \"{RBX_NAME}\".","es":"Saliste del canal \"{RBX_NAME}\".","pt-br":"Você saiu do canal '{RBX_NAME}'","zh-cjv":"你已离开频道“{RBX_NAME}”","it":"Hai lasciato il canale \"{RBX_NAME}\"","fr":"Vous avez quitté le canal {RBX_NAME}","zh-cn":"你已离开频道“{RBX_NAME}”","ja":"チャンネル 「{RBX_NAME}」を退出しました。","th-th":"คุณได้ออกจากแชนเนล \"{RBX_NAME}\" แล้ว","en-us":"You have left channel '{RBX_NAME}'","ko":"'{RBX_NAME}' 채널에서 나왔어요"}},{"key":"GameChat_DoMuteCommand_CannotMuteSelf","values":{"ru":"Невозможно добавить себя в список игнорируемых.","pt":"Você não pode silenciar a si mesmo.","de":"Du kannst dich nicht selbst stummschalten.","zh-tw":"您無法將自己靜音。","id":"Kamu tidak dapat membisukan diri sendiri.","es-es":"No puedes silenciarte a ti mismo.","es":"No puedes silenciarte a ti mismo.","pt-br":"Você não pode silenciar a si mesmo.","zh-cjv":"你无法将自己禁言。","it":"Non puoi togliere la parola a te stesso.","fr":"Vous ne pouvez pas vous bâillonner.","zh-cn":"你无法将自己禁言。","ja":"自分をミュートすることは出来ません。","th-th":"คุณไม่สามารถปิดเสียงตัวเองได้","en-us":"You cannot mute yourself.","ko":"자신을 음소거할 수 없어요."}},{"key":"GameChat_FriendChatNotifier_JoinMessage","values":{"ru":"Твой друг {RBX_NAME} присоединился к игре.","pt":"Seu amigo {RBX_NAME} juntou-se à experiência.","de":"Dein:e Freund:in {RBX_NAME} ist dem Erlebnis beigetreten.","zh-tw":"您的好友 {RBX_NAME} 已加入體驗。","id":"Teman kamu {RBX_NAME} telah bergabung ke pengalaman virtual ini.","es-es":"Tu amistad {RBX_NAME} se unió a la experiencia.","es":"Tu amistad {RBX_NAME} se unió a la experiencia.","pt-br":"Seu amigo {RBX_NAME} juntou-se à experiência.","zh-cjv":"你的朋友“{RBX_NAME}”已加入体验。","it":"Il tuo amico {RBX_NAME} è entrato nell'esperienza.","fr":"Ton ami(e) {RBX_NAME} a rejoint l'expérience.","zh-cn":"你的朋友“{RBX_NAME}”已加入体验。","ja":"あなたの友人の {RBX_NAME} さんが体験に参加しました。","th-th":"เพื่อนของคุณ \"{RBX_NAME}\" ได้เข้าร่วมประสบการณ์แล้ว","en-us":"Your friend {RBX_NAME} has joined the experience.","ko":"친구 {RBX_NAME} 님이 체험에 입장했어요."}},{"key":"GameChat_GetVersion_Message","values":{"ru":"Этот плейс поддерживает чат версии [{RBX_NUMBER}.{RBX_NUMBER}].","pt":"Esta experiência está rodando a versão de chat [{RBX_NUMBER}.{RBX_NUMBER}].","de":"Die Chatversion dieses Erlebnisses ist [{RBX_NUMBER}.{RBX_NUMBER}].","zh-tw":"此體驗正在使用聊天室版本 [{RBX_NUMBER}.{RBX_NUMBER}]。","id":"Pengalaman virtual ini menjalankan versi chat. [{RBX_NUMBER}.{RBX_NUMBER}].","es-es":"Esta experiencia utiliza la versión del chat [{RBX_NUMBER} {RBX_NUMBER}].","es":"Esta experiencia utiliza la versión del chat [{RBX_NUMBER} {RBX_NUMBER}].","pt-br":"Esta experiência está rodando a versão de chat [{RBX_NUMBER}.{RBX_NUMBER}].","zh-cjv":"此作品正在运行聊天版本 [{RBX_NUMBER}.{RBX_NUMBER}]。","it":"Questa esperienza usa la versione [{RBX_NUMBER}.{RBX_NUMBER}] della chat.","fr":"Cette expérience utilise la version de chat [{RBX_NUMBER} {RBX_NUMBER}].","zh-cn":"此作品正在运行聊天版本 [{RBX_NUMBER}.{RBX_NUMBER}]。","ja":"この仮想空間はチャットバージョン [{RBX_NUMBER}.{RBX_NUMBER}] を実行しています。","th-th":"ประสบการณ์นี้ใช้แชทในเวอร์ชัน [{RBX_NUMBER}.{RBX_NUMBER}]","en-us":"This experience is running chat version [{RBX_NUMBER}.{RBX_NUMBER}].","ko":"이 체험은 채팅 버전 [{RBX_NUMBER}.{RBX_NUMBER}](을)를 실행합니다."}},{"key":"GameChat_MuteSpeaker_SpeakerDoesNotExist","values":{"ru":"Пользователь {RBX_NAME} не существует.","pt":"O usuário '{RBX_NAME}' não existe.","de":"Sprecher:in „{RBX_NAME}“ existiert nicht.","zh-tw":"使用者「{RBX_NAME}」不存在。","id":"Pembicara {RBX_NAME} tidak ada.","es-es":"El usuario \"{RBX_NAME}\" no existe.","es":"El usuario \"{RBX_NAME}\" no existe.","pt-br":"O usuário '{RBX_NAME}' não existe.","zh-cjv":"发言者“{RBX_NAME}”不存在。","it":"Il giocatore \"{RBX_NAME}\" non esiste.","fr":"L'interlocuteur {RBX_NAME} n'existe pas.","zh-cn":"发言者“{RBX_NAME}”不存在。","ja":"スピーカーの「{RBX_NAME}」さんは存在しません。","th-th":"ไม่มีผู้ใช้ \"{RBX_NAME}\" อยู่","en-us":"Speaker '{RBX_NAME}' does not exist.","ko":"사용자 '{RBX_NAME}' 님이 존재하지 않습니다."}},{"key":"GameChat_PrivateMessaging_CannotChat","values":{"ru":"Ты не можешь общаться в чате с этим пользователем.","pt":"Você não pode participar de chat com esta pessoa.","de":"Du kannst mit dieser Person nicht chatten.","zh-tw":"您無法與此使用者聊天。","id":"Kamu tidak dapat chat dengan pengguna ini.","es-es":"No puedes chatear con esta persona.","es":"No puedes chatear con esta persona.","pt-br":"Você não pode participar de chat com esta pessoa.","zh-cjv":"你无法与此用户聊天。","it":"Non puoi chattare con questo giocatore.","fr":"Tu ne peux pas discuter avec cette personne.","zh-cn":"你无法与此用户聊天。","ja":"この人とはチャットできません。","th-th":"คุณไม่สามารถแชทกับผู้ใช้นี้ได้","en-us":"You are not able to chat with this person.","ko":"이 사람과 채팅할 수 없습니다."}},{"key":"GameChat_PrivateMessaging_CannotWhisperToSelf","values":{"ru":"Нельзя отправлять себе личные сообщения.","pt":"Você não pode sussurrar para si mesmo.","de":"Du kannst dir nicht selbst etwas zuflüstern.","zh-tw":"您無法與自己開啟私人頻道。","id":"Kamu tidak dapat berbisik ke diri sendiri.","es-es":"No puedes enviarte mensajes privados a ti mismo.","es":"No puedes enviarte mensajes privados a ti mismo.","pt-br":"Você não pode sussurrar para si mesmo.","zh-cjv":"你无法与自己开启私人频道。","it":"Non puoi aprire un canale privato con te stesso.","fr":"Vous ne pouvez pas murmurer à votre propre oreille.","zh-cn":"你无法与自己开启私人频道。","ja":"自分自身に話しかけることは出来ません。","th-th":"คุณไม่สามารถแชทแบบส่วนตัวกับตัวเองได้","en-us":"You cannot whisper to yourself.","ko":"자신에게 귓속말할 수 없어요."}},{"key":"GameChat_PrivateMessaging_NowChattingWith","values":{"ru":"Открыт канал для личного общения с пользователем {RBX_NAME}","pt":"Agora você está em um chat privado com {RBX_NAME}","de":"Du unterhältst dich nun privat mit {RBX_NAME}.","zh-tw":"您正在與{RBX_NAME}私聊","id":"Sekarang kamu sedang chat dengan {RBX_NAME} secara privat","es-es":"Estás chateando en privado con {RBX_NAME}.","es":"Estás chateando en privado con {RBX_NAME}.","pt-br":"Agora você está em um chat privado com {RBX_NAME}","zh-cjv":"你正在与“{RBX_NAME}”私聊","it":"Ora stai chattando in privato con {RBX_NAME}","fr":"Maintenant, vous discutez en privé avec {RBX_NAME}","zh-cn":"你正在与“{RBX_NAME}”私聊","ja":"あなたは現在、{RBX_NAME} さんとプライベートチャット中です","th-th":"คุณกำลังแชทแบบส่วนตัวกับ \"{RBX_NAME}\" อยู่ในตอนนี้","en-us":"You are now privately chatting with {RBX_NAME}","ko":"현재 {RBX_NAME} 님과 비공개 채팅 중이에요"}},{"key":"GameChat_SwallowGuestChat_Message","values":{"ru":"Создай бесплатный аккаунт, чтобы настроить права доступа в чате!","pt":"Crie uma conta grátis para ter acesso à permissões de chat!","de":"Erstelle ein kostenloses Konto, um Zugriff auf Chatberechtigungen zu erhalten!","zh-tw":"若要使用聊天功能，請建立免費帳號。","id":"Buat akun gratis untuk mendapatkan akses ke izin chat.","es-es":"¡Crea una cuenta gratuita para obtener los permisos de acceso al chat!","es":"¡Crea una cuenta gratuita para obtener los permisos de acceso al chat!","pt-br":"Crie uma conta grátis para ter acesso à permissões de chat!","zh-cjv":"创建免费帐户以获取聊天权限！","it":"Crea un account gratuito per avere accesso ai permessi della chat!","fr":"Créez un compte gratuit pour accéder aux permissions de chat !","zh-cn":"创建免费帐户以获取聊天权限！","ja":"無料アカウントを作ってチャット権限にアクセス！","th-th":"สร้างบัญชีฟรีเพื่อรับสิทธิ์ในการแชท!","en-us":"Create a free account to get access to chat permissions!","ko":"무료 계정을 생성해 채팅 권한을 이용하세요!"}},{"key":"GameChat_SwitchChannel_NotInChannel","values":{"ru":"Тебя нет на канале «{RBX_NAME}»","pt":"Você não está no canal: '{RBX_NAME}'","de":"Du befindest dich nicht in Kanal „{RBX_NAME}“.","zh-tw":"您不在「{RBX_NAME}」頻道","id":"Kamu tidak ada di channel: {RBX_NAME}","es-es":"No estás en el canal \"{RBX_NAME}\".","es":"No estás en el canal \"{RBX_NAME}\".","pt-br":"Você não está no canal: '{RBX_NAME}'","zh-cjv":"你不在频道：“{RBX_NAME}”","it":"Non ti trovi nel canale: \"{RBX_NAME}\"","fr":"Vous n'êtes pas sur le canal : {RBX_NAME}","zh-cn":"你不在频道：“{RBX_NAME}”","ja":"あなたは「{RBX_NAME}」チャネルにいません。","th-th":"คุณไม่ได้อยู่ในแชนเนล: \"{RBX_NAME}\"","en-us":"You are not in channel: '{RBX_NAME}'","ko":"'{RBX_NAME}' 채널에 있지 않습니다"}},{"key":"GameChat_SwitchChannel_NowInChannel","values":{"ru":"Ты общаешься на канале «{RBX_NAME}»","pt":"Agora você está no canal de chat: '{RBX_NAME}'","de":"Du chattest jetzt in Kanal „{RBX_NAME}“.","zh-tw":"您目前在「{RBX_NAME}」頻道聊天","id":"Saat ini kamu sedang chat di channel: {RBX_NAME}","es-es":"Estás chateando en el canal \"{RBX_NAME}\".","es":"Estás chateando en el canal \"{RBX_NAME}\".","pt-br":"Agora você está no canal de chat: '{RBX_NAME}'","zh-cjv":"你当前的聊天频道为：“{RBX_NAME}”","it":"Ora stai parlando nel canale: \"{RBX_NAME}\"","fr":"Maintenant, vous discutez sur le canal : {RBX_NAME}","zh-cn":"你当前的聊天频道为：“{RBX_NAME}”","ja":"あなたの現在のチャットチャンネルは: 「{RBX_NAME}」です。","th-th":"ตอนนี้คุณกำลังแชทอยู่ในแชนเนล: \"{RBX_NAME}\"","en-us":"You are now chatting in channel: '{RBX_NAME}'","ko":"'{RBX_NAME}' 채널에서 채팅 중이에요"}},{"key":"GameChat_TeamChat_CannotTeamChatIfNotInTeam","values":{"ru":"Ты не можешь общаться в командном чате, если не состоишь в команде!","pt":"Você não pode participar de chat de equipe se não estiver em uma!","de":"Teamchat ist nur verfügbar, wenn du Mitglied eines Teams bist!","zh-tw":"若您不在隊伍中，您無法使用隊伍頻道。","id":"Kamu tidak dapat melakukan chat tim jika kamu tidak berada dalam tim.","es-es":"¡No puedes chatear con tu equipo si no formas parte de un equipo!","es":"¡No puedes chatear con tu equipo si no formas parte de un equipo!","pt-br":"Você não pode participar de chat de equipe se não estiver em uma!","zh-cjv":"如果你不在该团队，则无法进行团队聊天。","it":"Non puoi chattare con la squadra se non sei in una squadra!","fr":"Vous ne pouvez pas avoir de discussion d'équipe si vous n'appartenez pas à une équipe !","zh-cn":"如果你不在该团队，则无法进行团队聊天。","ja":"チームに所属していなければチームチャットは出来ません。","th-th":"คุณไม่สามารถแชททีมได้หากคุณไม่ได้อยู่ในทีมนั้น!","en-us":"You cannot team chat if you are not on a team!","ko":"팀에 속하지 않으면 팀 채팅을 이용할 수 없어요!"}},{"key":"GameChat_TeamChat_NowInTeam","values":{"ru":"Ты теперь в команде {RBX_NAME}.","pt":"Agora você está na equipe '{RBX_NAME}'.","de":"Du bist nun Mitglied im Team „{RBX_NAME}“.","zh-tw":"您在「{RBX_NAME}」隊伍。","id":"Kamu sekarang berada di tim {RBX_NAME}.","es-es":"Ahora formas parte del equipo \"{RBX_NAME}\".","es":"Ahora formas parte del equipo \"{RBX_NAME}\".","pt-br":"Agora você está na equipe '{RBX_NAME}'.","zh-cjv":"你正在团队“{RBX_NAME}”中。","it":"Ora sei nella squadra \"{RBX_NAME}\".","fr":"Vous êtes désormais dans l'équipe {RBX_NAME}.","zh-cn":"你正在团队“{RBX_NAME}”中。","ja":"あなたは現在「{RBX_NAME}」チームに所属しています。","th-th":"คุณอยู่ในทีม \"{RBX_NAME}\" แล้วตอนนี้","en-us":"You are now on the '{RBX_NAME}' team.","ko":"현재 '{RBX_NAME}'팀에 속해 있어요."}},{"key":"GameChat_TeamChat_WelcomeMessage","values":{"ru":"Это канал для личного общения участников команды.","pt":"Este é um canal privado entre você e os membros da sua equipe.","de":"Dies ist ein privater Kanal für dich und deine Teammitglieder.","zh-tw":"這是您與隊伍成員的私人頻道。","id":"Ini adalah channel privat antara kamu dan anggota tim kamu.","es-es":"Este es un canal privado entre tú y los miembros de tu equipo.","es":"Este es un canal privado entre tú y los miembros de tu equipo.","pt-br":"Este é um canal privado entre você e os membros da sua equipe.","zh-cjv":"这是你与团队成员之间的私人频道。","it":"Questo è un canale privato tra te e i membri della tua squadra.","fr":"Ceci est un canal privé entre les membres de votre équipe et vous.","zh-cn":"这是你与团队成员之间的私人频道。","ja":"これはあなたとあなたのチームメンバーとのプライベートチャンネルです。","th-th":"แชนเนลนี้เป็นแชนเนลส่วนตัวระหว่างคุณและสมาชิกในทีมของคุณ","en-us":"This is a private channel between you and your team members.","ko":"회원님과 팀원 간의 비공개 채널이에요."}},{"key":"InGame.Chat.ErrorMessageAnimationPlaying","values":{"ru":"Во время этого действия эмоции недоступны.","pt":"Você não pode usar emotes durante esta ação.","de":"Du kannst das Emote während dieser Aktion nicht abspielen.","zh-tw":"無法在此動作執行時使用其他動作。","id":"Kamu tidak dapat menggunakan Emote saat melakukan tindakan ini.","es-es":"No puedes usar los emotes durante esta acción.","es":"No puedes usar los emotes durante esta acción.","pt-br":"Você não pode usar emotes durante esta ação.","zh-cjv":"无法在此动作进行时使用其他动作。","it":"Non puoi giocare Emote durante questa azione.","fr":"Tu ne peux pas jouer à Emotes pendant cette action.","zh-cn":"无法在此动作进行时使用其他动作。","ja":"この動作中はリアクションを表示できません。","th-th":"คุณไม่สามารถใช้ท่าทางในระหว่างการดำเนินการนี้","en-us":"You cannot play Emotes during this action.","ko":"이 동작 중에는 감정 표현을 적용할 수 없습니다."}},{"key":"InGame.Chat.ErrorMessageSwitchToR15","values":{"ru":"Переключись на аватара R15, чтобы использовать эмоции.","pt":"Mude seu avatar para o modelo R15 para usar emotes.","de":"Wechsle zu deinem R15-Avatar, um das Emote abzuspielen.","zh-tw":"切換成 R15 虛擬人偶即可使用此動作。","id":"Beralih ke avatar R15 kamu untuk menggunakan Emote.","es-es":"Cambia tu avatar a R15 para usar los emotes.","es":"Cambia tu avatar a R15 para usar los emotes.","pt-br":"Mude seu avatar para o modelo R15 para usar emotes.","zh-cjv":"切换成 R15 虚拟形象以使用此动作。","it":"Passa al tuo avatar R15 per giocare a Emote.","fr":"Passe à ton avatar R15 pour jouer à Emote.","zh-cn":"切换成 R15 虚拟形象以使用此动作。","ja":"リアクションを表示するにはR15アバターに切り替えてください。","th-th":"สลับไปใช้อวาตาร์ R15 ของคุณเพื่อใช้ท่าทาง","en-us":"Switch to your R15 avatar to play Emote.","ko":"감정 표현을 적용하려면 R15 아바타로 전환하세요."}},{"key":"InGame.Chat.Label.From","values":{"ru":"От ","pt":"De","de":"Von","zh-tw":"自","id":"Dari","es-es":"De","es":"De","pt-br":"De","zh-cjv":"来自于","it":"Da","fr":"De","zh-cn":"来自于","ja":"から","th-th":"จาก","en-us":"From","ko":"발신:"}},{"key":"InGame.Chat.Label.SystemMessagePrefix","values":{"ru":"Система","pt":"Sistema","de":"System","zh-tw":"系統","id":"Sistem","es-es":"Sistema","es":"Sistema","pt-br":"Sistema","zh-cjv":"系统","it":"Sistema","fr":"Système","zh-cn":"系统","ja":"システム","th-th":"ระบบ","en-us":"System","ko":"시스템"}},{"key":"InGame.Chat.Label.TeamMessagePrefix","values":{"ru":"Команда","pt":"Equipe","de":"Team","zh-tw":"隊伍","id":"Tim","es-es":"Equipo","es":"Equipo","pt-br":"Equipe","zh-cjv":"队伍","it":"Squadra","fr":"Équipe","zh-cn":"队伍","ja":"チーム","th-th":"ทีม","en-us":"Team","ko":"팀"}},{"key":"InGame.Chat.Label.To","values":{"ru":"Для","pt":"Para","de":"An","zh-tw":"對","id":"Kepada","es-es":"Para","es":"Para","pt-br":"Para","zh-cjv":"发送至","it":"A","fr":"À","zh-cn":"发送至","ja":"へ","th-th":"ถึง","en-us":"To","ko":"수신:"}},{"key":"InGame.Chat.Response.DisplayNameMultipleMatches","values":{"ru":"Внимание! Такое имя есть у нескольких пользователей: ","pt":"Aviso! Os seguintes usuários têm esse nome de exibição: ","de":"Warnung: Die folgenden Benutzer:innen haben diesen Anzeigenamen: ","zh-tw":"注意：以下使用者正在使用此顯示名稱：","id":"Peringatan: Pengguna berikut memiliki nama display: ","es-es":"Advertencia: Los siguientes jugadores tienen este nombre de usuario: ","es":"Advertencia: Los siguientes jugadores tienen este nombre de usuario: ","pt-br":"Aviso! Os seguintes usuários têm esse nome de exibição: ","zh-cjv":"注意：以下用户正在使用此昵称：","it":"Attenzione, i seguenti utenti hanno questo nome: ","fr":"Avertissement - Les utilisateurs suivants ont ce nom d'affichage : ","zh-cn":"注意：以下用户正在使用此昵称：","ja":"警告: 以下のユーザーには、この表示名があります: ","th-th":"คำเตือน: ผู้ใช้ที่ใช้ชื่อที่แสดงนี้มีดังต่อไปนี้: ","en-us":"Warning: The following users have this display name: ","ko":"주의: 다음 사용자들이 이 표시 이름을 사용하고 있습니다."}},{"key":"InGame.Chat.Response.EmoteNotAvailable","values":{"ru":"Невозможно использовать эту эмоцию.","pt":"Você não pode usar esse emote.","de":"Du kannst dieses Emote nicht benutzen.","zh-tw":"無法使用該動作。","id":"Kamu tidak dapat menggunakan Emote itu.","es-es":"No puedes usar ese emote.","es":"No puedes usar ese emote.","pt-br":"Você não pode usar esse emote.","zh-cjv":"无法使用该动作。","it":"Non puoi usare quell'emoticon.","fr":"Tu ne peux pas utiliser cette Emote.","zh-cn":"无法使用该动作。","ja":"そのリアクションは使えません。","th-th":"คุณไม่สามารถใช้ท่าทางนี้ได้","en-us":"You can't use that Emote.","ko":"이 감정 표현은 사용할 수 없어요."}},{"key":"InGame.Chat.Response.EmotesNotSupported","values":{"ru":"Здесь нельзя использовать эмоции.","pt":"Você não pode usar emotes aqui.","de":"Du kannst hier keine Emotes verwenden.","zh-tw":"無法在此體驗使用動作。","id":"Kamu tidak dapat menggunakan Emote di sini.","es-es":"No puedes usar emotes aquí.","es":"No puedes usar emotes aquí.","pt-br":"Você não pode usar emotes aqui.","zh-cjv":"无法在此挑战中使用动作。","it":"Qui non puoi usare le emoticon.","fr":"Tu ne peux pas utiliser les Emotes ici.","zh-cn":"无法在此游戏中使用动作。","ja":"ここではリアクションは使えません。","th-th":"คุณไม่สามารถใช้ท่าทางที่นี่ได้","en-us":"You can't use Emotes here.","ko":"여기서는 감정 표현을 사용할 수 없어요."}},{"key":"InGame.Chat.Response.EmotesTemporarilyUnavailable","values":{"ru":"Невозможно использовать эмоции прямо сейчас.","pt":"Você não pode usar emotes no momento.","de":"Du kannst Emotes derzeit nicht verwenden.","zh-tw":"現在無法使用動作。","id":"Kamu tidak dapat menggunakan Emote saat ini.","es-es":"No puedes usar emotes en este momento.","es":"No puedes usar emotes en este momento.","pt-br":"Você não pode usar emotes no momento.","zh-cjv":"当前无法使用动作。","it":"Adesso non puoi usare le emoticon.","fr":"Tu ne peux pas utiliser d'Emote maintenant.","zh-cn":"当前无法使用动作。","ja":"今はリアクションを使えません。","th-th":"คุณไม่สามารถใช้ท่าทางได้ในตอนนี้","en-us":"You can't use Emotes right now.","ko":"지금은 감정 표현을 사용할 수 없어요."}},{"key":"InGame.Chat.Response.EmotesWrongAvatarType","values":{"ru":"Только аватары R15 могут использовать эмоции.","pt":"Apenas avatares R15 podem usar emotes.","de":"Nur R15 Avatars können Emotes verwenden.","zh-tw":"只有 R15 虛擬人偶可以使用動作。","id":"Hanya avatar R15 yang dapat menggunakan Emote.","es-es":"Solo los avatares R15 pueden usar emotes.","es":"Solo los avatares R15 pueden usar emotes.","pt-br":"Apenas avatares R15 podem usar emotes.","zh-cjv":"只有 R15 虚拟形象可以使用动作。","it":"Solo gli avatar R15 possono usare le emoticon.","fr":"Seuls les avatars R15 peuvent utiliser les Emotes.","zh-cn":"只有 R15 虚拟形象可以使用动作。","ja":"R15指定のアバターしかリアクションは使えません。","th-th":"เฉพาะอวาตาร์ R15 เท่านั้นที่สามารถใช้ท่าทางได้","en-us":"Only R15 avatars can use Emotes.","ko":"R15 아바타만 감정 표현을 사용할 수 있어요."}}]]]></string><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ChatLocalization]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Folder" referent="397"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ChatModules]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="ModuleScript" referent="398"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1 = game:GetService("Chat"):WaitForChild("ClientChatModules")
local u2 = require(v1:WaitForChild("ChatSettings"))
local u3 = require(v1:WaitForChild("ChatConstants"))
local u4 = nil
pcall(function() --[[Anonymous function at line 13]]
    --[[
    Upvalues:
        [1] = u4
    --]]
    u4 = require(game:GetService("Chat").ClientChatModules.ChatLocalization)
end)
u4 = u4 == nil and {} or u4
if not (u4.FormatMessageToSend and u4.LocalizeFormattedMessage) then
    function u4.FormatMessageToSend(_, _, p5) --[[Anonymous function at line 17]]
        return p5
    end
end
return function(u6) --[[Function name: Run, line 20]]
    --[[
    Upvalues:
        [1] = u2
        [2] = u4
        [3] = u3
    --]]
    u6:RegisterProcessCommandsFunction("chat_commands_inquiry", function(p7, p8, p9) --[[Function name: ProcessCommandsFunction, line 29]]
        --[[
        Upvalues:
            [1] = u6
            [2] = u4
            [3] = u2
        --]]
        if p8:lower() ~= "/?" and p8:lower() ~= "/help" then
            return false
        end
        local v10 = u6:GetSpeaker(p7)
        v10:SendSystemMessage(u4:FormatMessageToSend("GameChat_ChatCommandsTeller_Desc", "These are the basic chat commands."), p9)
        if u2.AllowMeCommand then
            v10:SendSystemMessage(u4:FormatMessageToSend("GameChat_ChatCommandsTeller_MeCommand", "/me <text> : roleplaying command for doing actions."), p9)
        end
        v10:SendSystemMessage(u4:FormatMessageToSend("GameChat_ChatCommandsTeller_SwitchChannelCommand", "/c <channel> : switch channel menu tabs."), p9)
        local v11
        if u2.ShowJoinAndLeaveHelpText == nil then
            v11 = false
        else
            v11 = u2.ShowJoinAndLeaveHelpText
        end
        if v11 then
            v10:SendSystemMessage(u4:FormatMessageToSend("GameChat_ChatCommandsTeller_JoinChannelCommand", "/join <channel> or /j <channel> : join channel."), p9)
            v10:SendSystemMessage(u4:FormatMessageToSend("GameChat_ChatCommandsTeller_LeaveChannelCommand", "/leave <channel> or /l <channel> : leave channel. (leaves current if none specified)"), p9)
        end
        v10:SendSystemMessage(u4:FormatMessageToSend("GameChat_ChatCommandsTeller_WhisperCommand", "/whisper <speaker> or /w <speaker> : open private message channel with speaker."), p9)
        v10:SendSystemMessage(u4:FormatMessageToSend("GameChat_ChatCommandsTeller_MuteCommand", "/mute <speaker> : mute a speaker."), p9)
        v10:SendSystemMessage(u4:FormatMessageToSend("GameChat_ChatCommandsTeller_UnMuteCommand", "/unmute <speaker> : unmute a speaker."), p9)
        local v12 = v10:GetPlayer()
        if v12 and v12.Team then
            v10:SendSystemMessage(u4:FormatMessageToSend("GameChat_ChatCommandsTeller_TeamCommand", "/team <message> or /t <message> : send a team chat to players on your team."), p9)
        end
        return true
    end, u3.StandardPriority)
    local v13 = u2.GeneralChannelName and u6:GetChannel(u2.GeneralChannelName)
    if v13 then
        v13.WelcomeMessage = u4:FormatMessageToSend("GameChat_ChatCommandsTeller_AllChannelWelcomeMessage", "Chat \'/?\' or \'/help\' for a list of chat commands.")
    end
end]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ChatCommandsTeller]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="399"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1 = game:GetService("Chat"):WaitForChild("ClientChatModules")
local u2 = require(v1:WaitForChild("ChatConstants"))
local v3, v4 = pcall(function() --[[Anonymous function at line 11]]
    return UserSettings():IsUserFeatureEnabled("UserAddChatThrottlingToAllChannels")
end)
if not v3 then
    v4 = false
end
local u5 = not v4
local u6 = {}
local u7 = {}
local u8 = nil
pcall(function() --[[Anonymous function at line 33]]
    --[[
    Upvalues:
        [1] = u8
    --]]
    u8 = require(game:GetService("Chat").ClientChatModules.ChatLocalization)
end)
u8 = u8 == nil and {} or u8
if not (u8.FormatMessageToSend and u8.LocalizeFormattedMessage) then
    function u8.FormatMessageToSend(_, _, p9) --[[Anonymous function at line 37]]
        return p9
    end
end
return function(u10) --[[Function name: Run, line 44]]
    --[[
    Upvalues:
        [1] = u7
        [2] = u6
        [3] = u5
        [4] = u8
        [5] = u2
    --]]
    u10:RegisterProcessCommandsFunction("flood_detection", function(p11, _, p12) --[[Function name: FloodDetectionProcessCommandsFunction, line 45]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u10
            [3] = u6
            [4] = u5
            [5] = u8
        --]]
        if u7[p11] then
            return false
        end
        local v13 = u10:GetSpeaker(p11)
        if not v13 then
            return false
        end
        if not v13:GetPlayer() then
            return false
        end
        if not u6[p11] then
            u6[p11] = {}
        end
        local v14
        if u5 then
            if not u6[p11][p12] then
                u6[p11][p12] = {}
            end
            v14 = u6[p11][p12]
        else
            v14 = u6[p11]
        end
        local v15 = tick()
        while #v14 > 0 and v14[1] < v15 do
            table.remove(v14, 1)
        end
        if #v14 < 7 then
            local v16 = tick() + 15
            table.insert(v14, v16)
            return false
        end
        local v17 = v14[1] - v15
        local v18 = math.ceil(v17)
        v13:SendSystemMessage(u8:FormatMessageToSend("GameChat_ChatFloodDetector_MessageDisplaySeconds", string.format("You must wait %d %s before sending another message!", v18, v18 > 1 and "seconds" or "second"), "RBX_NUMBER", (tostring(v18))), p12)
        return true
    end, u2.LowPriority)
    u10.SpeakerRemoved:connect(function(p19) --[[Anonymous function at line 102]]
        --[[
        Upvalues:
            [1] = u6
        --]]
        u6[p19] = nil
    end)
end]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ChatFloodDetector]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="400"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local u1 = game:GetService("Chat")
local u2 = game:GetService("RunService")
local v3 = u1:WaitForChild("ClientChatModules")
local u4 = require(v3:WaitForChild("ChatSettings"))
local u5 = require(v3:WaitForChild("ChatConstants"))
local u6 = nil
pcall(function() --[[Anonymous function at line 14]]
    --[[
    Upvalues:
        [1] = u6
    --]]
    u6 = require(game:GetService("Chat").ClientChatModules.ChatLocalization)
end)
u6 = u6 == nil and {} or u6
if not (u6.FormatMessageToSend and u6.LocalizeFormattedMessage) then
    function u6.FormatMessageToSend(_, _, p7) --[[Anonymous function at line 17]]
        return p7
    end
end
local u8 = not u4.DisallowedWhiteSpace and {
    "\n",
    "\r",
    "\t",
    "\11",
    "\f"
} or u4.DisallowedWhiteSpace
local function u10(p9) --[[Anonymous function at line 27]]
    --[[
    Upvalues:
        [1] = u4
    --]]
    if p9:len() > u4.MaximumMessageLength * 6 then
        return false
    elseif utf8.len(p9) == nil then
        return false
    else
        return utf8.len(utf8.nfcnormalize(p9)) <= u4.MaximumMessageLength
    end
end
return function(u11) --[[Function name: Run, line 57]]
    --[[
    Upvalues:
        [1] = u2
        [2] = u1
        [3] = u6
        [4] = u10
        [5] = u8
        [6] = u5
    --]]
    u11:RegisterProcessCommandsFunction("message_validation", function(p12, p13, p14) --[[Function name: ValidateChatFunction, line 58]]
        --[[
        Upvalues:
            [1] = u11
            [2] = u2
            [3] = u1
            [4] = u6
            [5] = u10
            [6] = u8
        --]]
        local v15 = u11:GetSpeaker(p12)
        local u16 = v15:GetPlayer()
        if v15 then
            if u16 then
                if u2:IsStudio() or u16.UserId >= 1 then
                    local v17
                    if u2:IsStudio() then
                        v17 = true
                    else
                        local v18, v19 = pcall(function() --[[Anonymous function at line 51]]
                            --[[
                            Upvalues:
                                [1] = u1
                                [2] = u16
                            --]]
                            return u1:CanUserChatAsync(u16.UserId)
                        end)
                        v17 = v18 and v19
                    end
                    if v17 then
                        if u10(p13) then
                            for _, v20 in pairs(u8) do
                                if p13:find(v20) then
                                    v15:SendSystemMessage(u6:FormatMessageToSend("GameChat_ChatMessageValidator_WhitespaceError", "Your message contains whitespace that is not allowed."), p14)
                                    return true
                                end
                            end
                            return false
                        else
                            v15:SendSystemMessage(u6:FormatMessageToSend("GameChat_ChatMessageValidator_MaxLengthError", "Your message exceeds the maximum message length."), p14)
                            return true
                        end
                    else
                        v15:SendSystemMessage(u6:FormatMessageToSend("GameChat_ChatMessageValidator_SettingsError", "Your chat settings prevent you from sending messages."), p14)
                        return true
                    end
                else
                    return true
                end
            else
                return false
            end
        else
            return false
        end
    end, u5.VeryHighPriority)
end]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ChatMessageValidator]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="401"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local u1 = {
    ["Groups"] = {
        {
            ["GroupId"] = 1200769,
            ["ChatColor"] = Color3.new(1, 0.8431372549019608, 0)
        }
    },
    ["Players"] = {
        {}
    }
}
(function() --[[Function name: ConstructIsInGroups, line 49]]
    --[[
    Upvalues:
        [1] = u1
    --]]
    if u1.Groups then
        for _, v2 in pairs(u1.Groups) do
            local u3 = v2.GroupId
            local u4 = v2.Rank
            local v5 = type(u4) == "nil" and true or type(u4) == "number"
            assert(v5, "requiredRank must be a number or nil")
            function v2.IsInGroup(u6) --[[Anonymous function at line 26]]
                --[[
                Upvalues:
                    [1] = u4
                    [2] = u3
                --]]
                if not (u6 and u6.UserId) then
                    return false
                end
                local _ = u6.UserId
                local u7 = false
                local v8, v9 = pcall(function() --[[Anonymous function at line 31]]
                    --[[
                    Upvalues:
                        [1] = u4
                        [2] = u7
                        [3] = u6
                        [4] = u3
                    --]]
                    if u4 then
                        u7 = u4 < u6:GetRankInGroup(u3)
                    else
                        u7 = u6:IsInGroup(u3)
                    end
                end)
                if not v8 and v9 then
                    print("Error checking in group: " .. v9)
                end
                return u7
            end
        end
    end
end)()
local u10 = game:GetService("Players")
local function u15(p11) --[[Anonymous function at line 60]]
    --[[
    Upvalues:
        [1] = u1
        [2] = u10
    --]]
    if u1.Players then
        local v12 = u10:FindFirstChild(p11)
        if v12 then
            for _, v13 in pairs(u1.Players) do
                if v12.UserId == v13.UserId then
                    return v13.ChatColor
                end
            end
        end
    end
    if u1.Groups then
        for _, v14 in pairs(u1.Groups) do
            if v14.IsInGroup(u10:FindFirstChild(p11)) then
                return v14.ChatColor
            end
        end
    end
end
return function(u16) --[[Function name: Run, line 80]]
    --[[
    Upvalues:
        [1] = u15
        [2] = u10
    --]]
    local u17 = {
        Color3.new(0.9921568627450981, 0.1607843137254902, 0.2627450980392157),
        Color3.new(0.00392156862745098, 0.6352941176470588, 1),
        Color3.new(0.00784313725490196, 0.7215686274509804, 0.3411764705882353),
        BrickColor.new("Bright violet").Color,
        BrickColor.new("Bright orange").Color,
        BrickColor.new("Bright yellow").Color,
        BrickColor.new("Light reddish violet").Color,
        BrickColor.new("Brick yellow").Color
    }
    local function u24(p18) --[[Anonymous function at line 93]]
        local v19 = 0
        for v20 = 1, #p18 do
            local v21 = string.sub(p18, v20, v20)
            local v22 = string.byte(v21)
            local v23 = #p18 - v20 + 1
            if #p18 % 2 == 1 then
                v23 = v23 - 1
            end
            if v23 % 4 >= 2 then
                v22 = -v22
            end
            v19 = v19 + v22
        end
        return v19
    end
    local function v31(p25) --[[Anonymous function at line 124]]
        --[[
        Upvalues:
            [1] = u16
            [2] = u17
            [3] = u24
            [4] = u15
        --]]
        local v26 = u16:GetSpeaker(p25)
        if not v26:GetExtraData("NameColor") then
            local v27 = "NameColor"
            local v28 = v26:GetPlayer()
            local v29
            if v28 and v28.Team ~= nil then
                v29 = v28.TeamColor.Color
            else
                v29 = u17[(u24(v26.Name) + 0) % #u17 + 1]
            end
            v26:SetExtraData(v27, v29)
        end
        local v30 = not v26:GetExtraData("ChatColor") and u15(p25)
        if v30 then
            v26:SetExtraData("ChatColor", v30)
        end
        if not v26:GetExtraData("Tags") then
            v26:SetExtraData("Tags", {})
        end
    end
    u16.SpeakerAdded:connect(v31)
    for _, v32 in pairs(u16:GetSpeakerList()) do
        v31(v32)
    end
    local u33 = {}
    u10.PlayerAdded:connect(function(u34) --[[Anonymous function at line 161]]
        --[[
        Upvalues:
            [1] = u16
            [2] = u17
            [3] = u24
            [4] = u33
        --]]
        u33[u34] = u34.Changed:connect(function(p35) --[[Anonymous function at line 162]]
            --[[
            Upvalues:
                [1] = u16
                [2] = u34
                [3] = u17
                [4] = u24
            --]]
            local v36 = u16:GetSpeaker(u34.Name)
            if v36 and (p35 == "TeamColor" or (p35 == "Neutral" or p35 == "Team")) then
                local v37 = "NameColor"
                local v38 = v36:GetPlayer()
                local v39
                if v38 and v38.Team ~= nil then
                    v39 = v38.TeamColor.Color
                else
                    v39 = u17[(u24(v36.Name) + 0) % #u17 + 1]
                end
                v36:SetExtraData(v37, v39)
            end
        end)
    end)
    u10.PlayerRemoving:connect(function(p40) --[[Anonymous function at line 173]]
        --[[
        Upvalues:
            [1] = u33
        --]]
        local v41 = u33[p40]
        if v41 then
            v41:Disconnect()
        end
        u33[p40] = nil
    end)
end]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ExtraDataInitializer]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="402"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1 = game:GetService("Chat")
local u2 = game:GetService("Players")
game:GetService("FriendService")
local v3 = v1:WaitForChild("ClientChatModules")
local u4 = require(v3:WaitForChild("ChatSettings"))
require(v3:WaitForChild("ChatConstants"))
local v5, u6 = pcall(function() --[[Anonymous function at line 16]]
    return UserSettings():IsUserFeatureEnabled("UserHandleFriendJoinNotifierOnClient")
end)
if not v5 then
    u6 = false
end
local u7 = nil
pcall(function() --[[Anonymous function at line 26]]
    --[[
    Upvalues:
        [1] = u7
    --]]
    u7 = require(game:GetService("Chat").ClientChatModules.ChatLocalization)
end)
u7 = u7 == nil and {} or u7
if not (u7.FormatMessageToSend and u7.LocalizeFormattedMessage) then
    function u7.FormatMessageToSend(_, _, p8) --[[Anonymous function at line 29]]
        return p8
    end
end
local u9 = {
    ["ChatColor"] = Color3.fromRGB(255, 255, 255)
}
return function(u10) --[[Function name: Run, line 35]]
    --[[
    Upvalues:
        [1] = u6
        [2] = u4
        [3] = u7
        [4] = u9
        [5] = u2
    --]]
    local function u15(p11, p12) --[[Anonymous function at line 46]]
        --[[
        Upvalues:
            [1] = u10
            [2] = u4
            [3] = u7
            [4] = u9
        --]]
        local v13 = u10:GetSpeaker(p11.Name)
        if v13 then
            local v14 = p12.Name
            if u4.PlayerDisplayNamesEnabled then
                v14 = p12.DisplayName
            end
            v13:SendSystemMessage(u7:FormatMessageToSend("GameChat_FriendChatNotifier_JoinMessage", string.format("Your friend %s has joined the game.", v14), "RBX_NAME", v14), "System", u9)
        end
    end
    local v16
    if u6 == false and u4.ShowFriendJoinNotification ~= nil then
        v16 = u4.ShowFriendJoinNotification
    else
        v16 = false
    end
    if v16 then
        u2.PlayerAdded:connect(function(u17) --[[Anonymous function at line 73]]
            --[[
            Upvalues:
                [1] = u2
                [2] = u15
            --]]
            local v18 = u2:GetPlayers()
            for v19 = 1, #v18 do
                local u20 = v18[v19]
                if u20 ~= u17 then
                    coroutine.wrap(function() --[[Anonymous function at line 64]]
                        --[[
                        Upvalues:
                            [1] = u20
                            [2] = u17
                            [3] = u15
                        --]]
                        if u20:IsFriendsWith(u17.UserId) then
                            u15(u20, u17)
                        end
                    end)()
                end
            end
        end)
    end
end]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[FriendJoinNotifier]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="403"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1 = game:GetService("Chat"):WaitForChild("ClientChatModules")
local u2 = require(v1:WaitForChild("ChatConstants"))
local u3 = require(v1:WaitForChild("ChatSettings"))
return function(p4) --[[Function name: Run, line 10]]
    --[[
    Upvalues:
        [1] = u3
        [2] = u2
    --]]
    if u3 and u3.AllowMeCommand then
        p4:RegisterFilterMessageFunction("me_command", function(_, p5, _) --[[Function name: MeCommandFilterFunction, line 13]]
            --[[
            Upvalues:
                [1] = u2
            --]]
            local v6 = p5.Message
            if v6 and string.sub(v6, 1, 4):lower() == "/me " then
                p5.MessageType = u2.MessageTypeMeCommand
            end
        end)
    end
end]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[MeCommand]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="404"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1 = game:GetService("Chat")
local v2 = v1:WaitForChild("ClientChatModules")
local v3 = v1:WaitForChild("ChatModules")
local u4 = require(v2:WaitForChild("ChatConstants"))
local u5 = require(v2:WaitForChild("ChatSettings"))
local u6 = require(v3.Utility.DisplayNameHelpers)
local u7 = nil
pcall(function() --[[Anonymous function at line 15]]
    --[[
    Upvalues:
        [1] = u7
    --]]
    u7 = require(game:GetService("Chat").ClientChatModules.ChatLocalization)
end)
u7 = u7 == nil and {} or u7
if not (u7.FormatMessageToSend and u7.LocalizeFormattedMessage) then
    function u7.FormatMessageToSend(_, _, p8) --[[Anonymous function at line 18]]
        return p8
    end
end
local u9 = {
    ["ChatColor"] = u5.ErrorMessageTextColor or Color3.fromRGB(245, 50, 50)
}
return function(u10) --[[Function name: Run, line 24]]
    --[[
    Upvalues:
        [1] = u5
        [2] = u6
        [3] = u7
        [4] = u9
        [5] = u4
    --]]
    local function u14(p11) --[[Anonymous function at line 26]]
        if string.sub(p11, 1, 1) == "\"" then
            local v12 = string.find(p11, "\"", 2)
            if v12 then
                local v13 = v12 - 1
                return string.sub(p11, 2, v13)
            end
        else
            p11 = string.match(p11, "^[^%s]+") or p11
        end
        return p11
    end
    local function u24(p15, p16, p17) --[[Anonymous function at line 42]]
        --[[
        Upvalues:
            [1] = u14
            [2] = u10
            [3] = u5
            [4] = u6
            [5] = u7
            [6] = u9
        --]]
        local v18 = u14(p16)
        local v19 = u10:GetSpeaker(p15)
        if v19 then
            local v20, v21
            if u5.PlayerDisplayNamesEnabled then
                v20, v21 = u6.getUserNameFromChattedName(v18, p15, v19:GetNameForDisplay())
            else
                v20, v21 = u6.getUserNameFromChattedName(v18, p15, nil)
            end
            local v22 = u10:GetSpeaker(v20)
            if v21 == u6.CommandErrorCodes.ChattingToSelf then
                v19:SendSystemMessage(u7:FormatMessageToSend("GameChat_DoMuteCommand_CannotMuteSelf", "You cannot mute yourself."), p17, u9)
                return
            end
            if v21 == u6.CommandErrorCodes.NoMatches then
                v19:SendSystemMessage(u7:FormatMessageToSend("GameChat_MuteSpeaker_SpeakerDoesNotExist", string.format("Speaker \'%s\' does not exist.", (tostring(v18))), "RBX_NAME", (tostring(v20))), p17, u9)
                return
            end
            if v21 == u6.CommandErrorCodes.MultipleMatches then
                local v23 = u6.getUsersWithDisplayNameString(v18, p15)
                v19:SendSystemMessage(u7:FormatMessageToSend("InGame.Chat.Response.DisplayNameMultipleMatches", "Warning: The following users have this display name: "), p17, u9)
                v19:SendSystemMessage(v23, p17, u9)
                return
            end
            if v22 then
                v19:AddMutedSpeaker(v22.Name)
                if u5.PlayerDisplayNamesEnabled then
                    v20 = v22:GetNameForDisplay()
                end
                v19:SendSystemMessage(u7:FormatMessageToSend("GameChat_ChatMain_SpeakerHasBeenMuted", string.format("Speaker \'%s\' has been muted.", v20), "RBX_NAME", v20), p17)
            end
        end
    end
    local function u34(p25, p26, p27) --[[Anonymous function at line 94]]
        --[[
        Upvalues:
            [1] = u14
            [2] = u10
            [3] = u5
            [4] = u6
            [5] = u7
            [6] = u9
        --]]
        local v28 = u14(p26)
        local v29 = u10:GetSpeaker(p25)
        if v29 then
            local v30, v31
            if u5.PlayerDisplayNamesEnabled then
                v30, v31 = u6.getUserNameFromChattedName(v28, p25, v29:GetNameForDisplay())
            else
                v30, v31 = u6.getUserNameFromChattedName(v28, p25, nil)
            end
            local v32 = u10:GetSpeaker(v30)
            if v31 == u6.CommandErrorCodes.ChattingToSelf then
                v29:SendSystemMessage(u7:FormatMessageToSend("GameChat_DoMuteCommand_CannotMuteSelf", "You cannot mute yourself."), p27, u9)
                return
            end
            if v31 == u6.CommandErrorCodes.NoMatches then
                v29:SendSystemMessage(u7:FormatMessageToSend("GameChat_MuteSpeaker_SpeakerDoesNotExist", string.format("Speaker \'%s\' does not exist.", (tostring(v30))), "RBX_NAME", (tostring(v30))), p27, u9)
                return
            end
            if v31 == u6.CommandErrorCodes.MultipleMatches then
                local v33 = u6.getUsersWithDisplayNameString(v28, p25)
                v29:SendSystemMessage(u7:FormatMessageToSend("InGame.Chat.Response.DisplayNameMultipleMatches", "Warning: The following users have this display name: "), p27, u9)
                v29:SendSystemMessage(v33, p27, u9)
                return
            end
            if v32 then
                v29:RemoveMutedSpeaker(v32.Name)
                if u5.PlayerDisplayNamesEnabled then
                    v30 = v32:GetNameForDisplay()
                end
                v29:SendSystemMessage(u7:FormatMessageToSend("GameChat_ChatMain_SpeakerHasBeenUnMuted", string.format("Speaker \'%s\' has been unmuted.", v30), "RBX_NAME", v30), p27)
                return
            end
        end
    end
    u10:RegisterProcessCommandsFunction("mute_commands", function(p35, p36, p37) --[[Function name: MuteCommandsFunction, line 149]]
        --[[
        Upvalues:
            [1] = u24
            [2] = u34
        --]]
        local v38 = false
        if string.sub(p36, 1, 6):lower() == "/mute " then
            u24(p35, string.sub(p36, 7), p37)
            return true
        else
            if string.sub(p36, 1, 8):lower() == "/unmute " then
                u34(p35, string.sub(p36, 9), p37)
                v38 = true
            end
            return v38
        end
    end, u4.StandardPriority)
end]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[MuteSpeaker]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="405"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local u1 = game:GetService("Chat")
local u2 = game:GetService("RunService")
local u3 = game:GetService("TextChatService")
local v4 = u1:WaitForChild("ClientChatModules")
local v5 = u1:WaitForChild("ChatModules")
local u6 = require(v4:WaitForChild("ChatConstants"))
local u7 = require(v4:WaitForChild("ChatSettings"))
local u8 = require(v5.Utility.DisplayNameHelpers)
local u9 = nil
pcall(function() --[[Anonymous function at line 17]]
    --[[
    Upvalues:
        [1] = u9
    --]]
    u9 = require(game:GetService("Chat").ClientChatModules.ChatLocalization)
end)
u9 = u9 == nil and {} or u9
if not (u9.FormatMessageToSend and u9.LocalizeFormattedMessage) then
    function u9.FormatMessageToSend(_, _, p10) --[[Anonymous function at line 20]]
        return p10
    end
end
local u11 = {
    ["ChatColor"] = u7.ErrorMessageTextColor or Color3.fromRGB(245, 50, 50)
}
local v12, u13 = pcall(function() --[[Anonymous function at line 27]]
    return UserSettings():IsUserFeatureEnabled("UserUseNewDirectChatAPI")
end)
if not v12 then
    u13 = false
end
return function(u14) --[[Function name: Run, line 46]]
    --[[
    Upvalues:
        [1] = u2
        [2] = u13
        [3] = u3
        [4] = u1
        [5] = u7
        [6] = u8
        [7] = u9
        [8] = u11
        [9] = u6
    --]]
    local function u23(p15, p16) --[[Anonymous function at line 48]]
        --[[
        Upvalues:
            [1] = u2
            [2] = u13
            [3] = u3
            [4] = u1
        --]]
        if u2:IsStudio() then
            return true
        end
        local u17 = p15:GetPlayer()
        local u18 = p16:GetPlayer()
        if not (u17 and u18) then
            return false
        end
        if not u13 then
            local v19, v20 = pcall(function() --[[Anonymous function at line 61]]
                --[[
                Upvalues:
                    [1] = u1
                    [2] = u17
                    [3] = u18
                --]]
                return u1:CanUsersChatAsync(u17.UserId, u18.UserId)
            end)
            return v19 and v20
        end
        local v21, v22 = pcall(function() --[[Anonymous function at line 56]]
            --[[
            Upvalues:
                [1] = u3
                [2] = u17
                [3] = u18
            --]]
            return u3:CanUsersDirectChatAsync(u17.UserId, { u18.UserId })
        end)
        if v21 then
            v21 = #v22 > 0
        end
        return v21
    end
    local function u39(p24, p25, p26) --[[Anonymous function at line 70]]
        --[[
        Upvalues:
            [1] = u14
            [2] = u7
            [3] = u8
            [4] = u9
            [5] = u11
            [6] = u6
            [7] = u23
        --]]
        local v27 = u14:GetSpeaker(p24)
        local v28 = nil
        local v29
        if string.sub(p25, 1, 1) == "\"" then
            local v30 = string.find(p25, "\"", 2)
            if v30 then
                local v31 = v30 - 1
                v29 = string.sub(p25, 2, v31)
                local v32 = v30 + 2
                v28 = string.sub(p25, v32)
            else
                v29 = p25
            end
        else
            v29 = string.match(p25, "^[^%s]+")
            if v29 then
                local v33 = string.len(v29) + 2
                v28 = string.sub(p25, v33)
            else
                v29 = p25
            end
        end
        local v34, v35
        if u7.PlayerDisplayNamesEnabled and u7.WhisperByDisplayNameEnabled then
            v34, v35 = u8.getUserNameFromChattedName(v29, p24, v27:GetNameForDisplay())
        else
            v34, v35 = u8.getUserNameFromChattedName(v29, p24, nil)
        end
        local v36 = u14:GetSpeaker(v34)
        if v35 == u8.CommandErrorCodes.ChattingToSelf then
            v27:SendSystemMessage(u9:FormatMessageToSend("GameChat_PrivateMessaging_CannotWhisperToSelf", "You cannot whisper to yourself."), p26, u11)
            return
        elseif v35 == u8.CommandErrorCodes.NoMatches then
            v27:SendSystemMessage(u9:FormatMessageToSend("GameChat_MuteSpeaker_SpeakerDoesNotExist", string.format("Speaker \'%s\' does not exist.", (tostring(v29))), "RBX_NAME", (tostring(v34))), p26, u11)
            return
        elseif v35 == u8.CommandErrorCodes.MultipleMatches then
            local v37 = u8.getUsersWithDisplayNameString(v29, p24)
            v27:SendSystemMessage(u9:FormatMessageToSend("InGame.Chat.Response.DisplayNameMultipleMatches", "Warning: The following users have this display name: "), p26, u11)
            v27:SendSystemMessage(v37, p26, u11)
        elseif v36 then
            local v38 = u14:GetChannel((not u6.WhisperChannelPrefix and "To " or u6.WhisperChannelPrefix) .. v34)
            if v38 then
                if u23(v27, v36) then
                    if not v27:IsInChannel(v38.Name) then
                        v27:JoinChannel(v38.Name)
                    end
                    if v28 and string.len(v28) > 0 then
                        v27:SayMessage(v28, v38.Name)
                    end
                    v27:SetMainChannel(v38.Name)
                else
                    v27:SendSystemMessage(u9:FormatMessageToSend("GameChat_PrivateMessaging_CannotChat", "You are not able to chat with this player."), p26, u11)
                end
            end
            v27:SendSystemMessage(u9:FormatMessageToSend("GameChat_MuteSpeaker_SpeakerDoesNotExist", string.format("Speaker \'%s\' does not exist.", (tostring(v29))), "RBX_NAME", (tostring(v34))), p26, u11)
        end
    end
    local function u47(p40, p41, p42) --[[Anonymous function at line 163]]
        --[[
        Upvalues:
            [1] = u14
            [2] = u6
        --]]
        local v43 = u14:GetSpeaker(p40)
        local v44 = v43.ExtraData
        v43:SendMessage(p41, p42, p40, v44)
        local v45 = u14:GetSpeaker((string.sub(p42, 4)))
        local v46 = (not u6.WhisperChannelPrefix and "To " or u6.WhisperChannelPrefix) .. p40
        if v45 then
            if not v45:IsInChannel(v46) then
                v45:JoinChannel(v46)
            end
            v45:SendMessage(p41, v46, p40, v44)
        end
        return true
    end
    local function u49(_, p48, _) --[[Anonymous function at line 181]]
        --[[
        Upvalues:
            [1] = u6
        --]]
        if u6.MessageTypeWhisper then
            p48.MessageType = u6.MessageTypeWhisper
        end
    end
    u14:RegisterProcessCommandsFunction("whisper_commands", function(p50, p51, p52) --[[Function name: WhisperCommandsFunction, line 147]]
        --[[
        Upvalues:
            [1] = u39
        --]]
        local v53 = false
        if string.sub(p51, 1, 3):lower() == "/w " then
            u39(p50, string.sub(p51, 4), p52)
            return true
        else
            if string.sub(p51, 1, 9):lower() == "/whisper " then
                u39(p50, string.sub(p51, 10), p52)
                v53 = true
            end
            return v53
        end
    end, u6.StandardPriority)
    u14.SpeakerAdded:connect(function(p54) --[[Anonymous function at line 196]]
        --[[
        Upvalues:
            [1] = u14
            [2] = u7
            [3] = u6
            [4] = u9
            [5] = u47
            [6] = u49
        --]]
        local v55 = u14:GetSpeaker(p54)
        local v56
        if u7.PlayerDisplayNamesEnabled and v55:GetPlayer() then
            v56 = v55:GetNameForDisplay() .. "(@" .. p54 .. ")"
        else
            v56 = p54
        end
        local v57 = (not u6.WhisperChannelPrefix and "To " or u6.WhisperChannelPrefix) .. p54
        if u14:GetChannel(v57) then
            u14:RemoveChannel(v57)
        end
        local v58 = u14:AddChannel(v57)
        v58.Joinable = false
        v58.Leavable = true
        v58.AutoJoin = false
        v58.Private = true
        v58.WelcomeMessage = u9:FormatMessageToSend("GameChat_PrivateMessaging_NowChattingWith", "You are now privately chatting with " .. v56 .. ".", "RBX_NAME", (tostring(v56)))
        local v59
        if u7.WhisperChannelNameColor then
            v59 = u7.WhisperChannelNameColor
        else
            v59 = Color3.fromRGB(102, 14, 102)
        end
        v58.ChannelNameColor = v59
        v58:RegisterProcessCommandsFunction("replication_function", u47, u6.LowPriority)
        v58:RegisterFilterMessageFunction("message_type_function", u49)
    end)
    u14.SpeakerRemoved:connect(function(p60) --[[Anonymous function at line 228]]
        --[[
        Upvalues:
            [1] = u6
            [2] = u14
        --]]
        local v61 = (not u6.WhisperChannelPrefix and "To " or u6.WhisperChannelPrefix) .. p60
        if u14:GetChannel(v61) then
            u14:RemoveChannel(v61)
        end
    end)
end]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[PrivateMessaging]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ModuleScript" referent="406"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local v1 = game:GetService("Chat"):WaitForChild("ClientChatModules")
local u2 = require(v1:WaitForChild("ChatSettings"))
local u3 = require(v1:WaitForChild("ChatConstants"))
local u4 = nil
pcall(function() --[[Anonymous function at line 13]]
    --[[
    Upvalues:
        [1] = u4
    --]]
    u4 = require(game:GetService("Chat").ClientChatModules.ChatLocalization)
end)
u4 = u4 == nil and {} or u4
if not (u4.FormatMessageToSend and u4.LocalizeFormattedMessage) then
    function u4.FormatMessageToSend(_, _, p5) --[[Anonymous function at line 16]]
        return p5
    end
end
local u6 = {
    ["ChatColor"] = u2.ErrorMessageTextColor or Color3.fromRGB(245, 50, 50)
}
return function(u7) --[[Function name: Run, line 22]]
    --[[
    Upvalues:
        [1] = u4
        [2] = u3
        [3] = u6
        [4] = u2
    --]]
    local v8 = game:GetService("Players")
    local u9 = u7:AddChannel("Team")
    u9.WelcomeMessage = u4:FormatMessageToSend("GameChat_TeamChat_WelcomeMessage", "This is a private channel between you and your team members.")
    u9.Joinable = false
    u9.Leavable = false
    u9.AutoJoin = false
    u9.Private = true
    u9:RegisterProcessCommandsFunction("replication_function", function(p10, p11, p12) --[[Function name: TeamChatReplicationFunction, line 33]]
        --[[
        Upvalues:
            [1] = u7
        --]]
        local v13 = u7:GetSpeaker(p10)
        local v14 = u7:GetChannel(p12)
        local v15 = v13 and (v14 and v13:GetPlayer())
        if v15 then
            for _, v16 in pairs(v14:GetSpeakerList()) do
                local v17 = u7:GetSpeaker(v16)
                if v17 then
                    local v18 = v17:GetPlayer()
                    if v18 and v15.Team == v18.Team then
                        v17:SendMessage(p11, p12, p10, {
                            ["NameColor"] = v15.TeamColor.Color,
                            ["ChatColor"] = v15.TeamColor.Color,
                            ["ChannelColor"] = v15.TeamColor.Color
                        })
                    end
                end
            end
        end
        return true
    end, u3.LowPriority)
    local function u26(p19, p20, p21) --[[Anonymous function at line 70]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u4
            [3] = u6
        --]]
        local v22 = p20 == nil and "" or p20
        local v23 = u7:GetSpeaker(p19)
        local v24 = v23 and v23:GetPlayer()
        if v24 then
            if v24.Team == nil then
                v23:SendSystemMessage(u4:FormatMessageToSend("GameChat_TeamChat_CannotTeamChatIfNotInTeam", "You cannot team chat if you are not on a team!"), p21, u6)
                return
            end
            local v25 = u7:GetChannel("Team")
            if v25 then
                if not v23:IsInChannel(v25.Name) then
                    v23:JoinChannel(v25.Name)
                end
                if v22 and string.len(v22) > 0 then
                    v23:SayMessage(v22, v25.Name)
                end
                v23:SetMainChannel(v25.Name)
            end
        end
    end
    u7:RegisterProcessCommandsFunction("team_commands", function(p27, p28, p29) --[[Function name: TeamCommandsFunction, line 99]]
        --[[
        Upvalues:
            [1] = u26
        --]]
        local v30 = false
        if p28 == nil then
            error("Message is nil")
        end
        if p29 == "Team" then
            return false
        elseif string.sub(p28, 1, 6):lower() == "/team " or p28:lower() == "/team" then
            u26(p27, string.sub(p28, 7), p29)
            return true
        elseif string.sub(p28, 1, 3):lower() == "/t " or p28:lower() == "/t" then
            u26(p27, string.sub(p28, 4), p29)
            return true
        else
            if string.sub(p28, 1, 2):lower() == "% " or p28:lower() == "%" then
                u26(p27, string.sub(p28, 3), p29)
                v30 = true
            end
            return v30
        end
    end, u3.StandardPriority)
    local function u31() --[[Anonymous function at line 126]]
        --[[
        Upvalues:
            [1] = u2
        --]]
        if u2.DefaultChannelNameColor then
            return u2.DefaultChannelNameColor
        else
            return Color3.fromRGB(35, 76, 142)
        end
    end
    local function u34(p32, p33) --[[Anonymous function at line 133]]
        --[[
        Upvalues:
            [1] = u9
            [2] = u31
        --]]
        if p33.Neutral or p33.Team == nil then
            p32:UpdateChannelNameColor(u9.Name, u31())
            if p32:IsInChannel(u9.Name) then
                p32:LeaveChannel(u9.Name)
                return
            end
        elseif not p33.Neutral and p33.Team then
            p32:UpdateChannelNameColor(u9.Name, p33.Team.TeamColor.Color)
            if not p32:IsInChannel(u9.Name) then
                p32:JoinChannel(u9.Name)
            end
        end
    end
    u7.SpeakerAdded:connect(function(p35) --[[Anonymous function at line 149]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u34
        --]]
        local v36 = u7:GetSpeaker(p35)
        local v37 = v36 and v36:GetPlayer()
        if v37 then
            u34(v36, v37)
        end
    end)
    local u38 = {}
    v8.PlayerAdded:connect(function(u39) --[[Anonymous function at line 160]]
        --[[
        Upvalues:
            [1] = u7
            [2] = u34
            [3] = u9
            [4] = u4
            [5] = u38
        --]]
        u38[u39] = u39.Changed:connect(function(p40) --[[Anonymous function at line 161]]
            --[[
            Upvalues:
                [1] = u7
                [2] = u39
                [3] = u34
                [4] = u9
                [5] = u4
            --]]
            local v41 = u7:GetSpeaker(u39.Name)
            if v41 then
                if p40 == "Neutral" then
                    u34(v41, u39)
                    return
                end
                if p40 == "Team" then
                    u34(v41, u39)
                    if v41:IsInChannel(u9.Name) then
                        v41:SendSystemMessage(u4:FormatMessageToSend("GameChat_TeamChat_NowInTeam", string.format("You are now on the \'%s\' team.", u39.Team.Name), "RBX_NAME", u39.Team.Name), u9.Name)
                    end
                end
            end
        end)
    end)
    v8.PlayerRemoving:connect(function(p42) --[[Anonymous function at line 182]]
        --[[
        Upvalues:
            [1] = u38
        --]]
        local v43 = u38[p42]
        if v43 then
            v43:Disconnect()
        end
        u38[p42] = nil
    end)
end]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[TeamChat]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="BoolValue" referent="407"><Properties><bool name="Value">true</bool><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[InsertDefaultModules]]></string><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Folder" referent="408"><Properties><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[Utility]]></string><BinaryString name="Tags"></BinaryString></Properties><Item class="ModuleScript" referent="409"><Properties><ProtectedString name="Source"><![CDATA[-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw

local u1 = game:GetService("Players")
local v2 = game:GetService("Chat"):WaitForChild("ClientChatModules")
local u3 = require(v2:WaitForChild("ChatSettings"))
local u4 = {
    ["ChattingToSelf"] = 1,
    ["NoMatches"] = 2,
    ["MultipleMatches"] = 3
}
return {
    ["CommandErrorCodes"] = u4,
    ["getUserNameFromChattedName"] = function(p5, p6, p7) --[[Function name: getUserNameFromChattedName, line 14]]
        --[[
        Upvalues:
            [1] = u4
            [2] = u1
            [3] = u3
        --]]
        if p6 == p5 then
            return p6, u4.ChattingToSelf
        else
            local v8 = u1:GetPlayers()
            for _, v9 in pairs(v8) do
                if string.lower(v9.Name) == string.lower(p5) then
                    return v9.Name, nil
                end
            end
            local v10 = 0
            local v11 = nil
            if u3.PlayerDisplayNamesEnabled then
                for _, v12 in pairs(v8) do
                    if v12.Name ~= p6 and string.lower(v12.DisplayName) == string.lower(p5) then
                        v10 = v10 + 1
                        v11 = v12.Name
                    end
                end
            end
            if v10 == 1 then
                return v11, nil
            elseif v10 == 0 then
                if p7 == p5 then
                    return p7, u4.ChattingToSelf
                else
                    return p5, u4.NoMatches
                end
            else
                if v10 >= 2 then
                    return p5, u4.MultipleMatches
                end
                return
            end
        end
    end,
    ["getUsersWithDisplayNameString"] = function(p13, p14) --[[Function name: getUsersWithDisplayNameString, line 56]]
        --[[
        Upvalues:
            [1] = u1
        --]]
        local v15 = u1:GetPlayers()
        local v16 = {}
        local v17 = ""
        for _, v18 in pairs(v15) do
            if v18.Name ~= p14 and string.lower(v18.DisplayName) == string.lower(p13) then
                local v19 = v18.Name
                table.insert(v16, v19)
            end
        end
        for v20, v21 in pairs(v16) do
            if v20 == #v16 then
                v17 = v17 .. "@" .. v21
            else
                v17 = v17 .. "@" .. v21 .. ", "
            end
        end
        return v17
    end
}]]></ProtectedString><BinaryString name="AttributesSerialize"></BinaryString><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[DisplayNameHelpers]]></string><BinaryString name="Tags"></BinaryString></Properties></Item></Item></Item></Item><Item class="TextChatService" referent="410"><Properties><bool name="ChatTranslationFTUXShown">true</bool><bool name="ChatTranslationToggleEnabled">false</bool><token name="ChatVersion">0</token><bool name="CreateDefaultCommands">true</bool><bool name="CreateDefaultTextChannels">true</bool><bool name="HasSeenDeprecationDialog">false</bool><BinaryString name="AttributesSerialize"></BinaryString><SecurityCapabilities name="Capabilities">0</SecurityCapabilities><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[TextChatService]]></string><int64 name="SourceAssetId">-1</int64><BinaryString name="Tags"></BinaryString></Properties><Item class="ChatWindowConfiguration" referent="411"><Properties><Color3 name="BackgroundColor3"><R>0.09803921729326248</R><G>0.10588235408067703</G><B>0.11372549086809158</B></Color3><double name="BackgroundTransparency">0.3</double><bool name="Enabled">true</bool><Font name="FontFace"><Family><url><![CDATA[rbxasset://fonts/families/GothamSSm.json]]></url></Family><Weight>500</Weight><Style>Normal</Style></Font><float name="HeightScale">1</float><token name="HorizontalAlignment">1</token><Color3 name="TextColor3"><R>1</R><G>1</G><B>1</B></Color3><int64 name="TextSize">14</int64><Color3 name="TextStrokeColor3"><R>0</R><G>0</G><B>0</B></Color3><double name="TextStrokeTransparency">0.5</double><token name="VerticalAlignment">1</token><float name="WidthScale">1</float><BinaryString name="AttributesSerialize"></BinaryString><SecurityCapabilities name="Capabilities">0</SecurityCapabilities><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ChatWindowConfiguration]]></string><int64 name="SourceAssetId">-1</int64><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ChatInputBarConfiguration" referent="412"><Properties><bool name="AutocompleteEnabled">true</bool><Color3 name="BackgroundColor3"><R>0.09803921729326248</R><G>0.10588235408067703</G><B>0.11372549086809158</B></Color3><double name="BackgroundTransparency">0.2</double><bool name="Enabled">true</bool><Font name="FontFace"><Family><url><![CDATA[rbxasset://fonts/families/GothamSSm.json]]></url></Family><Weight>500</Weight><Style>Normal</Style></Font><token name="KeyboardKeyCode">47</token><Color3 name="PlaceholderColor3"><R>0.6980392336845398</R><G>0.6980392336845398</G><B>0.6980392336845398</B></Color3><Color3 name="TextColor3"><R>1</R><G>1</G><B>1</B></Color3><int64 name="TextSize">14</int64><Color3 name="TextStrokeColor3"><R>0</R><G>0</G><B>0</B></Color3><double name="TextStrokeTransparency">0.5</double><BinaryString name="AttributesSerialize"></BinaryString><SecurityCapabilities name="Capabilities">0</SecurityCapabilities><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ChatInputBarConfiguration]]></string><int64 name="SourceAssetId">-1</int64><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="BubbleChatConfiguration" referent="413"><Properties><string name="AdorneeName"><![CDATA[HumanoidRootPart]]></string><Color3 name="BackgroundColor3"><R>0.9803921580314636</R><G>0.9803921580314636</G><B>0.9803921580314636</B></Color3><double name="BackgroundTransparency">0.1</double><float name="BubbleDuration">15</float><float name="BubblesSpacing">6</float><bool name="Enabled">true</bool><token name="Font">18</token><Font name="FontFace"><Family><url><![CDATA[rbxasset://fonts/families/GothamSSm.json]]></url></Family><Weight>500</Weight><Style>Normal</Style></Font><Vector3 name="LocalPlayerStudsOffset"><X>0</X><Y>0</Y><Z>0</Z></Vector3><float name="MaxBubbles">3</float><float name="MaxDistance">100</float><float name="MinimizeDistance">40</float><bool name="TailVisible">true</bool><Color3 name="TextColor3"><R>0.2235294133424759</R><G>0.23137255012989044</G><B>0.239215686917305</B></Color3><int64 name="TextSize">16</int64><float name="VerticalStudsOffset">0</float><BinaryString name="AttributesSerialize"></BinaryString><SecurityCapabilities name="Capabilities">0</SecurityCapabilities><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[BubbleChatConfiguration]]></string><int64 name="SourceAssetId">-1</int64><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="ChannelTabsConfiguration" referent="414"><Properties><Color3 name="BackgroundColor3"><R>0.09803921729326248</R><G>0.10588235408067703</G><B>0.11372549086809158</B></Color3><double name="BackgroundTransparency">0</double><bool name="Enabled">false</bool><Font name="FontFace"><Family><url><![CDATA[rbxasset://fonts/families/BuilderSans.json]]></url></Family><Weight>700</Weight><Style>Normal</Style></Font><Color3 name="HoverBackgroundColor3"><R>0.4901960790157318</R><G>0.4901960790157318</G><B>0.4901960790157318</B></Color3><Color3 name="SelectedTabTextColor3"><R>1</R><G>1</G><B>1</B></Color3><Color3 name="TextColor3"><R>0.686274528503418</R><G>0.686274528503418</G><B>0.686274528503418</B></Color3><int64 name="TextSize">18</int64><Color3 name="TextStrokeColor3"><R>0</R><G>0</G><B>0</B></Color3><double name="TextStrokeTransparency">1</double><BinaryString name="AttributesSerialize"></BinaryString><SecurityCapabilities name="Capabilities">0</SecurityCapabilities><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[ChannelTabsConfiguration]]></string><int64 name="SourceAssetId">-1</int64><BinaryString name="Tags"></BinaryString></Properties></Item></Item><Item class="LocalizationService" referent="415"><Properties><BinaryString name="AttributesSerialize"></BinaryString><SecurityCapabilities name="Capabilities">0</SecurityCapabilities><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[LocalizationService]]></string><int64 name="SourceAssetId">-1</int64><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="JointsService" referent="416"><Properties><BinaryString name="AttributesSerialize"></BinaryString><SecurityCapabilities name="Capabilities">0</SecurityCapabilities><bool name="DefinesCapabilities">false</bool><string name="Name"><![CDATA[JointsService]]></string><int64 name="SourceAssetId">-1</int64><BinaryString name="Tags"></BinaryString></Properties></Item><Item class="Script" referent="417"><Properties><string name="Name"><![CDATA[README]]></string><ProtectedString name="Source"><![CDATA[--[[
		Thank you for using UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw.

		If you didn't save in Binary (rbxl) - it's recommended to save the game right away to take advantage of the binary format & to preserve values of certain properties if you used IgnoreDefaultProperties setting (as they might change in the future).
		You can do that by going to FILE -> Save to File As -> Make sure File Name ends with .rbxl -> Save

		ServerStorage, ServerScriptService and Server Scripts are IMPOSSIBLE to save because of FilteringEnabled.

		If your player cannot spawn into the game, please move the scripts in StarterPlayer somewhere else. Then run `game:GetService("Players").CharacterAutoLoads = true`.
		And use "Play Here" to start game instead of "Play" to spawn your Character where your Camera currently is.

		If the chat system does not work, please use the explorer and delete everything inside the TextChatService/Chat service(s). 
		Or run `game:GetService("Chat"):ClearAllChildren() game:GetService("TextChatService"):ClearAllChildren()`
				
		If Union and MeshPart collisions don't work, run the script below in the Studio Command Bar:
				
				
		local C = game:GetService("CoreGui")
		local D = Enum.CollisionFidelity.Default
				
		for _, v in game:GetDescendants() do
			if v:IsA("TriangleMeshPart") and not v:IsDescendantOf(C) then
				v.CollisionFidelity = D
			end
		end
		print("Done")
				
		If you can't move the Camera, run this script in the Studio Command Bar:
			
		workspace.CurrentCamera.CameraType = Enum.CameraType.Fixed
		
		Or Destroy the Camera.

		This file was generated with the following settings:
		{"SaveBytecode":false,"ShowStatus":true,"IgnoreDefaultPlayerScripts":true,"NilInstancesFixes":{"BaseWrap":null,"Animator":null,"Attachment":null,"PackageLink":null,"AdPortal":null},"IgnoreList":["CoreGui","CorePackages"],"__DEBUG_MODE":false,"DecompileJobless":false,"IgnoreNotArchivable":true,"RemovePlayerCharacters":true,"Object":false,"DecompileIgnore":["TextChatService",null,null],"IgnoreSpecialProperties":false,"TreatUnionsAsParts":false,"IsModel":false,"NilInstances":false,"ExtraInstances":[],"noscripts":false,"ReadMe":true,"scriptcache":true,"OptionsAliases":{"IgnoreArchivable":"IgnoreNotArchivable","DecompileTimeout":"timeout","SaveNonCreatable":"SaveNotCreatable","SavePlayers":"IsolatePlayers","FileName":"FilePath","IgnoreDefaultProps":"IgnoreDefaultProperties"},"AlternativeWritefile":true,"mode":"optimized","SaveCacheInterval":56320,"SharedStringOverwrite":false,"IsolatePlayers":false,"IgnoreSharedStrings":true,"timeout":10,"NotCreatableFixes":["","AnimationTrack","Player","PlayerGui","PlayerScripts","PlayerMouse","ScreenshotHud","StudioData","TextSource","TouchTransmitter"],"Anonymous":false,"IgnoreDefaultProperties":true,"IsolateStarterPlayer":false,"IgnorePropertiesOfNotScriptsOnScriptsMode":false,"IsolateLocalPlayerCharacter":false,"SaveNotCreatable":false,"IsolateLocalPlayer":false,"FilePath":false,"AntiIdle":true,"ShutdownWhenDone":false,"SafeMode":false,"IgnoreProperties":[]}

		Elapsed time: 2.03369290000046 PlaceId: 11702621548 PlaceVersion: 53 Client Version: 0.667.0.6670665 Executor: Swift 1.0.0
]]]]></ProtectedString></Properties></Item></roblox><!-- Saved by UniversalSynSaveInstance (Join to Copy Games) https://discord.gg/wx4ThpAsmw -->